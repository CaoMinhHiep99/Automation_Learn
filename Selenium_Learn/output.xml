<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.12.0 on win32)" generated="20250106 09:57:23.038" rpa="false" schemaversion="3">
<suite id="s1" name="DemoQATesting" source="c:\Selenium_Learn\RobotPractice\Demotest\DemoQATesting.robot">
<test id="s1-t1" name="Testing_Text_Box" line="24">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:57:24.922" endtime="20250106 09:57:24.923"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20250106 09:57:24.924" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg timestamp="20250106 09:57:24.928" level="FAIL">No browser is open.</msg>
<status status="FAIL" starttime="20250106 09:57:24.923" endtime="20250106 09:57:24.949"/>
</kw>
<msg timestamp="20250106 09:57:24.949" level="INFO">${result} = ('FAIL', 'No browser is open.')</msg>
<status status="PASS" starttime="20250106 09:57:24.923" endtime="20250106 09:57:24.949"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:57:24.950" level="INFO">${windows} = []</msg>
<status status="PASS" starttime="20250106 09:57:24.949" endtime="20250106 09:57:24.951"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open_Browser_App_And_Choose_Element" library="corekeyword">
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:57:24.953" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:57:24.953" endtime="20250106 09:57:24.954"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:57:24.955" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:57:24.955" endtime="20250106 09:57:24.955"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:57:24.956" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:57:24.956" endtime="20250106 09:57:24.957"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.955" endtime="20250106 09:57:24.957"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.957" endtime="20250106 09:57:24.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.958" endtime="20250106 09:57:24.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.959" endtime="20250106 09:57:24.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.959" endtime="20250106 09:57:24.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.960" endtime="20250106 09:57:24.960"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:57:24.960" endtime="20250106 09:57:24.961"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.954" endtime="20250106 09:57:24.961"/>
</kw>
<msg timestamp="20250106 09:57:24.961" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:57:24.954" endtime="20250106 09:57:24.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:57:24.962" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:57:24.961" endtime="20250106 09:57:24.962"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.953" endtime="20250106 09:57:24.962"/>
</kw>
<msg timestamp="20250106 09:57:24.962" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:57:24.952" endtime="20250106 09:57:24.962"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BROWSER_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250106 09:57:24.963" level="INFO">Opening browser 'chrome' to base url 'https://demoqa.com/'.</msg>
<status status="PASS" starttime="20250106 09:57:24.962" endtime="20250106 09:59:03.010"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250106 09:59:03.011" endtime="20250106 09:59:03.061"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//h5[text()='${header_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:03.064" level="INFO">Clicking element 'xpath=//h5[text()='Elements']'.</msg>
<status status="PASS" starttime="20250106 09:59:03.062" endtime="20250106 09:59:03.256"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.952" endtime="20250106 09:59:03.256"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.952" endtime="20250106 09:59:03.257"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.923" endtime="20250106 09:59:03.257"/>
</kw>
<status status="PASS" starttime="20250106 09:57:24.922" endtime="20250106 09:59:03.257"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks the text box functionality on the Elements page. It fills in the required fields and submits the form.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:03.258" endtime="20250106 09:59:03.259"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:03.267" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:03.266" endtime="20250106 09:59:03.267"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:03.269" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:03.269" endtime="20250106 09:59:03.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:03.270" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:03.270" endtime="20250106 09:59:03.271"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.269" endtime="20250106 09:59:03.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.271" endtime="20250106 09:59:03.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.272" endtime="20250106 09:59:03.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.272" endtime="20250106 09:59:03.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.273" endtime="20250106 09:59:03.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.273" endtime="20250106 09:59:03.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.274" endtime="20250106 09:59:03.274"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.269" endtime="20250106 09:59:03.274"/>
</kw>
<msg timestamp="20250106 09:59:03.274" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:03.268" endtime="20250106 09:59:03.274"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:03.275" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:03.275" endtime="20250106 09:59:03.275"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.265" endtime="20250106 09:59:03.275"/>
</kw>
<msg timestamp="20250106 09:59:03.276" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:03.265" endtime="20250106 09:59:03.276"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:03.332" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:03.276" endtime="20250106 09:59:03.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.333" endtime="20250106 09:59:03.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.334" endtime="20250106 09:59:03.334"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:03.335" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:03.335" endtime="20250106 09:59:03.335"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:03.337" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:03.337" endtime="20250106 09:59:03.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.337" endtime="20250106 09:59:03.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:03.339" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:03.338" endtime="20250106 09:59:03.339"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.338" endtime="20250106 09:59:03.339"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.339" endtime="20250106 09:59:03.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.340" endtime="20250106 09:59:03.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.340" endtime="20250106 09:59:03.341"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.341" endtime="20250106 09:59:03.341"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:03.341" endtime="20250106 09:59:03.342"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.336" endtime="20250106 09:59:03.342"/>
</kw>
<msg timestamp="20250106 09:59:03.342" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:03.336" endtime="20250106 09:59:03.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:03.343" level="INFO">${exp_index} = Text Box</msg>
<status status="PASS" starttime="20250106 09:59:03.342" endtime="20250106 09:59:03.343"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.335" endtime="20250106 09:59:03.343"/>
</kw>
<msg timestamp="20250106 09:59:03.343" level="INFO">${menu_item} = Text Box</msg>
<status status="PASS" starttime="20250106 09:59:03.334" endtime="20250106 09:59:03.343"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:03.344" endtime="20250106 09:59:03.694"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:03.695" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:03.694" endtime="20250106 09:59:03.705"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.343" endtime="20250106 09:59:03.705"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:03.705" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Text Box']'.</msg>
<status status="PASS" starttime="20250106 09:59:03.705" endtime="20250106 09:59:03.801"/>
</kw>
<status status="PASS" starttime="20250106 09:59:03.264" endtime="20250106 09:59:03.801"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 09:59:04.803" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 09:59:03.803" endtime="20250106 09:59:04.803"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="userName"]</arg>
<arg>Cao Minh Hiep</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:04.804" level="INFO">Typing text 'Cao Minh Hiep' into text field 'xpath=//input[@id="userName"]'.</msg>
<status status="PASS" starttime="20250106 09:59:04.804" endtime="20250106 09:59:04.994"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="userEmail"]</arg>
<arg>cmhiep@tma.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:04.995" level="INFO">Typing text 'cmhiep@tma.com' into text field 'xpath=//input[@id="userEmail"]'.</msg>
<status status="PASS" starttime="20250106 09:59:04.995" endtime="20250106 09:59:05.195"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//textarea[@id="currentAddress"]</arg>
<arg>Lab6 TMA Solution</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:05.196" level="INFO">Typing text 'Lab6 TMA Solution' into text field 'xpath=//textarea[@id="currentAddress"]'.</msg>
<status status="PASS" starttime="20250106 09:59:05.195" endtime="20250106 09:59:05.387"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//textarea[@id="permanentAddress"]</arg>
<arg>None</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:05.388" level="INFO">Typing text 'None' into text field 'xpath=//textarea[@id="permanentAddress"]'.</msg>
<status status="PASS" starttime="20250106 09:59:05.387" endtime="20250106 09:59:05.505"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:05.506" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:05.506" endtime="20250106 09:59:05.538"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>xpath=//button[@id="submit"]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:05.539" level="INFO">Clicking button 'xpath=//button[@id="submit"]'.</msg>
<status status="PASS" starttime="20250106 09:59:05.538" endtime="20250106 09:59:05.691"/>
</kw>
<doc>This test case checks the text box functionality on the Elements page. It fills in the required fields and submits the form.</doc>
<status status="PASS" starttime="20250106 09:57:24.921" endtime="20250106 09:59:05.691"/>
</test>
<test id="s1-t2" name="Check_Box_Testing" line="39">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:05.693" endtime="20250106 09:59:05.694"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:05.695" endtime="20250106 09:59:05.697"/>
</kw>
<msg timestamp="20250106 09:59:05.697" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:05.695" endtime="20250106 09:59:05.697"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:05.700" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:05.697" endtime="20250106 09:59:05.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.700" endtime="20250106 09:59:05.701"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.695" endtime="20250106 09:59:05.701"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.693" endtime="20250106 09:59:05.701"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies the checkbox functionality on the Elements page by selecting various options and validating the output.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:05.702" endtime="20250106 09:59:05.703"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>2</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:05.705" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:05.704" endtime="20250106 09:59:05.705"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:05.706" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:05.706" endtime="20250106 09:59:05.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:05.708" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:05.707" endtime="20250106 09:59:05.708"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.707" endtime="20250106 09:59:05.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.708" endtime="20250106 09:59:05.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.709" endtime="20250106 09:59:05.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.709" endtime="20250106 09:59:05.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.710" endtime="20250106 09:59:05.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.710" endtime="20250106 09:59:05.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.711" endtime="20250106 09:59:05.711"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.705" endtime="20250106 09:59:05.711"/>
</kw>
<msg timestamp="20250106 09:59:05.711" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:05.705" endtime="20250106 09:59:05.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:05.712" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:05.712" endtime="20250106 09:59:05.712"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.704" endtime="20250106 09:59:05.712"/>
</kw>
<msg timestamp="20250106 09:59:05.713" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:05.704" endtime="20250106 09:59:05.713"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:05.808" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:05.713" endtime="20250106 09:59:05.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.809" endtime="20250106 09:59:05.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.809" endtime="20250106 09:59:05.810"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:05.811" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20250106 09:59:05.810" endtime="20250106 09:59:05.811"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:05.812" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:05.811" endtime="20250106 09:59:05.812"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.812" endtime="20250106 09:59:05.812"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:05.813" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:05.813" endtime="20250106 09:59:05.813"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.812" endtime="20250106 09:59:05.813"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.813" endtime="20250106 09:59:05.814"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.815" endtime="20250106 09:59:05.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.815" endtime="20250106 09:59:05.816"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.816" endtime="20250106 09:59:05.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:05.817" endtime="20250106 09:59:05.817"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.811" endtime="20250106 09:59:05.818"/>
</kw>
<msg timestamp="20250106 09:59:05.818" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:05.811" endtime="20250106 09:59:05.818"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:05.818" level="INFO">${exp_index} = Check Box</msg>
<status status="PASS" starttime="20250106 09:59:05.818" endtime="20250106 09:59:05.819"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.810" endtime="20250106 09:59:05.819"/>
</kw>
<msg timestamp="20250106 09:59:05.819" level="INFO">${menu_item} = Check Box</msg>
<status status="PASS" starttime="20250106 09:59:05.810" endtime="20250106 09:59:05.819"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:05.819" endtime="20250106 09:59:06.143"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:06.144" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:06.143" endtime="20250106 09:59:06.150"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.819" endtime="20250106 09:59:06.151"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:06.151" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Check Box']'.</msg>
<status status="PASS" starttime="20250106 09:59:06.151" endtime="20250106 09:59:06.245"/>
</kw>
<status status="PASS" starttime="20250106 09:59:05.703" endtime="20250106 09:59:06.246"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 09:59:07.247" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 09:59:06.246" endtime="20250106 09:59:07.247"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Home']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.248" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Home']'.</msg>
<status status="PASS" starttime="20250106 09:59:07.248" endtime="20250106 09:59:07.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Home']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.364" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Home']'.</msg>
<status status="PASS" starttime="20250106 09:59:07.363" endtime="20250106 09:59:07.421"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//button[@aria-label="Expand all"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.422" level="INFO">Clicking element 'xpath=//button[@aria-label="Expand all"]'.</msg>
<status status="PASS" starttime="20250106 09:59:07.422" endtime="20250106 09:59:07.508"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Notes']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.509" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Notes']'.</msg>
<status status="PASS" starttime="20250106 09:59:07.509" endtime="20250106 09:59:07.612"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Commands']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.613" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Commands']'.</msg>
<status status="PASS" starttime="20250106 09:59:07.612" endtime="20250106 09:59:07.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='WorkSpace']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:07.746" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='WorkSpace']'.</msg>
<status status="PASS" starttime="20250106 09:59:07.746" endtime="20250106 09:59:07.818"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class='rct-title'][text()='Public']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:07.819" endtime="20250106 09:59:08.094"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:08.094" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:08.094" endtime="20250106 09:59:08.104"/>
</kw>
<status status="PASS" starttime="20250106 09:59:07.819" endtime="20250106 09:59:08.105"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Public']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:08.107" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Public']'.</msg>
<status status="PASS" starttime="20250106 09:59:08.106" endtime="20250106 09:59:08.183"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class='rct-title'][text()='Downloads']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:08.185" endtime="20250106 09:59:08.466"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:08.467" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:08.466" endtime="20250106 09:59:08.476"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.184" endtime="20250106 09:59:08.476"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class='rct-title'][text()='Downloads']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:08.478" level="INFO">Clicking element 'xpath=//span[@class='rct-title'][text()='Downloads']'.</msg>
<status status="PASS" starttime="20250106 09:59:08.477" endtime="20250106 09:59:08.552"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You have selected</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:08.569" level="INFO">Current page contains text 'You have selected'.</msg>
<status status="PASS" starttime="20250106 09:59:08.553" endtime="20250106 09:59:08.569"/>
</kw>
<doc>This test case verifies the checkbox functionality on the Elements page by selecting various options and validating the output.</doc>
<status status="PASS" starttime="20250106 09:59:05.692" endtime="20250106 09:59:08.570"/>
</test>
<test id="s1-t3" name="Radio_Button_Test" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:08.572" endtime="20250106 09:59:08.574"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:08.575" endtime="20250106 09:59:08.577"/>
</kw>
<msg timestamp="20250106 09:59:08.577" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:08.575" endtime="20250106 09:59:08.577"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:08.578" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:08.577" endtime="20250106 09:59:08.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.579" endtime="20250106 09:59:08.579"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.574" endtime="20250106 09:59:08.579"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.572" endtime="20250106 09:59:08.579"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies the functionality of radio buttons on the Elements page by selecting options and checking the results.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:08.580" endtime="20250106 09:59:08.580"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>3</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:08.582" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:08.582" endtime="20250106 09:59:08.582"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:08.583" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:08.583" endtime="20250106 09:59:08.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:08.585" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:08.584" endtime="20250106 09:59:08.585"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.584" endtime="20250106 09:59:08.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.585" endtime="20250106 09:59:08.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.586" endtime="20250106 09:59:08.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.586" endtime="20250106 09:59:08.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.586" endtime="20250106 09:59:08.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.587" endtime="20250106 09:59:08.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.587" endtime="20250106 09:59:08.588"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.583" endtime="20250106 09:59:08.588"/>
</kw>
<msg timestamp="20250106 09:59:08.588" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:08.582" endtime="20250106 09:59:08.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:08.588" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:08.588" endtime="20250106 09:59:08.589"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.581" endtime="20250106 09:59:08.589"/>
</kw>
<msg timestamp="20250106 09:59:08.589" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:08.581" endtime="20250106 09:59:08.589"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:08.647" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:08.589" endtime="20250106 09:59:08.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.648" endtime="20250106 09:59:08.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.648" endtime="20250106 09:59:08.649"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:08.650" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:08.649" endtime="20250106 09:59:08.650"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:08.652" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:08.651" endtime="20250106 09:59:08.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.652" endtime="20250106 09:59:08.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:08.654" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:08.653" endtime="20250106 09:59:08.654"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.653" endtime="20250106 09:59:08.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.654" endtime="20250106 09:59:08.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.654" endtime="20250106 09:59:08.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.655" endtime="20250106 09:59:08.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.655" endtime="20250106 09:59:08.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:08.656" endtime="20250106 09:59:08.656"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.650" endtime="20250106 09:59:08.656"/>
</kw>
<msg timestamp="20250106 09:59:08.656" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:08.650" endtime="20250106 09:59:08.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:08.657" level="INFO">${exp_index} = Radio Button</msg>
<status status="PASS" starttime="20250106 09:59:08.657" endtime="20250106 09:59:08.657"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.649" endtime="20250106 09:59:08.657"/>
</kw>
<msg timestamp="20250106 09:59:08.657" level="INFO">${menu_item} = Radio Button</msg>
<status status="PASS" starttime="20250106 09:59:08.649" endtime="20250106 09:59:08.657"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:08.658" endtime="20250106 09:59:08.931"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:08.931" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:08.931" endtime="20250106 09:59:08.939"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.658" endtime="20250106 09:59:08.939"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:08.940" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Radio Button']'.</msg>
<status status="PASS" starttime="20250106 09:59:08.939" endtime="20250106 09:59:09.032"/>
</kw>
<status status="PASS" starttime="20250106 09:59:08.581" endtime="20250106 09:59:09.033"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 09:59:10.034" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 09:59:09.033" endtime="20250106 09:59:10.034"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//input[@id="yesRadio"]</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:10.035" endtime="20250106 09:59:10.316"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:10.317" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:10.317" endtime="20250106 09:59:10.325"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.035" endtime="20250106 09:59:10.325"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//label[@for="yesRadio"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:10.327" level="INFO">Clicking element 'xpath=//label[@for="yesRadio"]'.</msg>
<status status="PASS" starttime="20250106 09:59:10.326" endtime="20250106 09:59:10.403"/>
</kw>
<doc>This test case verifies the functionality of radio buttons on the Elements page by selecting options and checking the results.</doc>
<status status="PASS" starttime="20250106 09:59:08.571" endtime="20250106 09:59:10.405"/>
</test>
<test id="s1-t4" name="Web_Table_Test" line="71">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:10.408" endtime="20250106 09:59:10.410"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:10.411" endtime="20250106 09:59:10.451"/>
</kw>
<msg timestamp="20250106 09:59:10.451" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:10.410" endtime="20250106 09:59:10.451"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:10.453" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:10.451" endtime="20250106 09:59:10.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.454" endtime="20250106 09:59:10.454"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.410" endtime="20250106 09:59:10.455"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.408" endtime="20250106 09:59:10.455"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case adds a new entry to the web table and verifies the row and column counts on the Elements page.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:10.455" endtime="20250106 09:59:10.456"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>4</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:10.458" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:10.458" endtime="20250106 09:59:10.458"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:10.459" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:10.459" endtime="20250106 09:59:10.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:10.460" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:10.460" endtime="20250106 09:59:10.460"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.459" endtime="20250106 09:59:10.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.461" endtime="20250106 09:59:10.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.461" endtime="20250106 09:59:10.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.462" endtime="20250106 09:59:10.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.462" endtime="20250106 09:59:10.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.462" endtime="20250106 09:59:10.463"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.463" endtime="20250106 09:59:10.463"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.459" endtime="20250106 09:59:10.464"/>
</kw>
<msg timestamp="20250106 09:59:10.464" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:10.458" endtime="20250106 09:59:10.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:10.464" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:10.464" endtime="20250106 09:59:10.464"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.457" endtime="20250106 09:59:10.465"/>
</kw>
<msg timestamp="20250106 09:59:10.465" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:10.457" endtime="20250106 09:59:10.465"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:10.508" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:10.465" endtime="20250106 09:59:10.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.509" endtime="20250106 09:59:10.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.509" endtime="20250106 09:59:10.510"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:10.511" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 09:59:10.510" endtime="20250106 09:59:10.511"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:10.512" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:10.511" endtime="20250106 09:59:10.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.512" endtime="20250106 09:59:10.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:10.513" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:10.513" endtime="20250106 09:59:10.513"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.512" endtime="20250106 09:59:10.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.513" endtime="20250106 09:59:10.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.514" endtime="20250106 09:59:10.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.514" endtime="20250106 09:59:10.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.515" endtime="20250106 09:59:10.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:10.515" endtime="20250106 09:59:10.515"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.511" endtime="20250106 09:59:10.516"/>
</kw>
<msg timestamp="20250106 09:59:10.516" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:10.511" endtime="20250106 09:59:10.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:10.516" level="INFO">${exp_index} = Web Tables</msg>
<status status="PASS" starttime="20250106 09:59:10.516" endtime="20250106 09:59:10.516"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.510" endtime="20250106 09:59:10.517"/>
</kw>
<msg timestamp="20250106 09:59:10.517" level="INFO">${menu_item} = Web Tables</msg>
<status status="PASS" starttime="20250106 09:59:10.510" endtime="20250106 09:59:10.517"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:10.517" endtime="20250106 09:59:10.842"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:10.842" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:10.842" endtime="20250106 09:59:10.849"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.517" endtime="20250106 09:59:10.850"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:10.850" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Web Tables']'.</msg>
<status status="PASS" starttime="20250106 09:59:10.850" endtime="20250106 09:59:10.955"/>
</kw>
<status status="PASS" starttime="20250106 09:59:10.457" endtime="20250106 09:59:10.955"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 09:59:13.956" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 09:59:10.956" endtime="20250106 09:59:13.956"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id=addNewRecordButton</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:13.957" level="INFO">Clicking element 'id=addNewRecordButton'.</msg>
<status status="PASS" starttime="20250106 09:59:13.957" endtime="20250106 09:59:14.059"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@placeholder='First Name']</arg>
<arg>Cao</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.061" level="INFO">Typing text 'Cao' into text field 'xpath=//input[@placeholder='First Name']'.</msg>
<status status="PASS" starttime="20250106 09:59:14.060" endtime="20250106 09:59:14.177"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@placeholder='Last Name']</arg>
<arg>Hiep</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.178" level="INFO">Typing text 'Hiep' into text field 'xpath=//input[@placeholder='Last Name']'.</msg>
<status status="PASS" starttime="20250106 09:59:14.177" endtime="20250106 09:59:14.319"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@placeholder='name@example.com']</arg>
<arg>cmhiep@gmail.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.320" level="INFO">Typing text 'cmhiep@gmail.com' into text field 'xpath=//input[@placeholder='name@example.com']'.</msg>
<status status="PASS" starttime="20250106 09:59:14.320" endtime="20250106 09:59:14.466"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="age"]</arg>
<arg>25</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.467" level="INFO">Typing text '25' into text field 'xpath=//input[@id="age"]'.</msg>
<status status="PASS" starttime="20250106 09:59:14.467" endtime="20250106 09:59:14.568"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="salary"]</arg>
<arg>10</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.570" level="INFO">Typing text '10' into text field 'xpath=//input[@id="salary"]'.</msg>
<status status="PASS" starttime="20250106 09:59:14.570" endtime="20250106 09:59:14.682"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="department"]</arg>
<arg>Company</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.684" level="INFO">Typing text 'Company' into text field 'xpath=//input[@id="department"]'.</msg>
<status status="PASS" starttime="20250106 09:59:14.683" endtime="20250106 09:59:14.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//button[@id="submit"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:14.809" level="INFO">Clicking element 'xpath=//button[@id="submit"]'.</msg>
<status status="PASS" starttime="20250106 09:59:14.808" endtime="20250106 09:59:14.911"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${cols}</var>
<arg>xpath=//div[@class="rt-tr-group"][1]//div[@class="rt-td"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20250106 09:59:14.930" level="INFO">${cols} = 7</msg>
<status status="PASS" starttime="20250106 09:59:14.913" endtime="20250106 09:59:14.930"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${rows}</var>
<arg>xpath=//div[@class="rt-tbody"][1]//div[@class="rt-tr-group"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20250106 09:59:14.950" level="INFO">${rows} = 10</msg>
<status status="PASS" starttime="20250106 09:59:14.931" endtime="20250106 09:59:14.951"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>The number of rows: ${rows}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:14.956" endtime="20250106 09:59:14.959"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>The number of cols: ${cols}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:14.960" endtime="20250106 09:59:14.962"/>
</kw>
<doc>This test case adds a new entry to the web table and verifies the row and column counts on the Elements page.</doc>
<status status="PASS" starttime="20250106 09:59:10.407" endtime="20250106 09:59:14.962"/>
</test>
<test id="s1-t5" name="Button_Test" line="91">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:14.965" endtime="20250106 09:59:14.968"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:14.969" endtime="20250106 09:59:14.984"/>
</kw>
<msg timestamp="20250106 09:59:14.984" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:14.969" endtime="20250106 09:59:14.984"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:14.985" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:14.984" endtime="20250106 09:59:14.986"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:14.986" endtime="20250106 09:59:14.986"/>
</kw>
<status status="PASS" starttime="20250106 09:59:14.969" endtime="20250106 09:59:14.986"/>
</kw>
<status status="PASS" starttime="20250106 09:59:14.964" endtime="20250106 09:59:14.987"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies the functionality of different button interactions on the Elements page, including double-click, right-click, and single-click actions.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:14.988" endtime="20250106 09:59:14.995"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>5</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:14.997" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:14.997" endtime="20250106 09:59:14.998"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:14.999" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:14.999" endtime="20250106 09:59:15.000"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:15.002" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:15.001" endtime="20250106 09:59:15.002"/>
</kw>
<status status="PASS" starttime="20250106 09:59:15.000" endtime="20250106 09:59:15.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.002" endtime="20250106 09:59:15.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.003" endtime="20250106 09:59:15.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.003" endtime="20250106 09:59:15.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.004" endtime="20250106 09:59:15.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.004" endtime="20250106 09:59:15.005"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.005" endtime="20250106 09:59:15.006"/>
</kw>
<status status="PASS" starttime="20250106 09:59:14.998" endtime="20250106 09:59:15.007"/>
</kw>
<msg timestamp="20250106 09:59:15.007" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:14.998" endtime="20250106 09:59:15.008"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:15.009" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:15.008" endtime="20250106 09:59:15.009"/>
</kw>
<status status="PASS" starttime="20250106 09:59:14.996" endtime="20250106 09:59:15.048"/>
</kw>
<msg timestamp="20250106 09:59:15.048" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:14.996" endtime="20250106 09:59:15.048"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:15.139" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:15.048" endtime="20250106 09:59:15.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.140" endtime="20250106 09:59:15.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.141" endtime="20250106 09:59:15.141"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:15.142" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 09:59:15.142" endtime="20250106 09:59:15.142"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:15.143" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:15.143" endtime="20250106 09:59:15.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.143" endtime="20250106 09:59:15.144"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:15.145" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:15.144" endtime="20250106 09:59:15.145"/>
</kw>
<status status="PASS" starttime="20250106 09:59:15.144" endtime="20250106 09:59:15.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.145" endtime="20250106 09:59:15.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.146" endtime="20250106 09:59:15.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.146" endtime="20250106 09:59:15.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.146" endtime="20250106 09:59:15.147"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:15.147" endtime="20250106 09:59:15.147"/>
</kw>
<status status="PASS" starttime="20250106 09:59:15.143" endtime="20250106 09:59:15.147"/>
</kw>
<msg timestamp="20250106 09:59:15.147" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:15.142" endtime="20250106 09:59:15.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:15.148" level="INFO">${exp_index} = Buttons</msg>
<status status="PASS" starttime="20250106 09:59:15.148" endtime="20250106 09:59:15.148"/>
</kw>
<status status="PASS" starttime="20250106 09:59:15.141" endtime="20250106 09:59:15.148"/>
</kw>
<msg timestamp="20250106 09:59:15.149" level="INFO">${menu_item} = Buttons</msg>
<status status="PASS" starttime="20250106 09:59:15.141" endtime="20250106 09:59:15.149"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:15.149" endtime="20250106 09:59:15.466"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:15.466" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:15.466" endtime="20250106 09:59:15.471"/>
</kw>
<status status="PASS" starttime="20250106 09:59:15.149" endtime="20250106 09:59:15.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:15.472" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Buttons']'.</msg>
<status status="PASS" starttime="20250106 09:59:15.471" endtime="20250106 09:59:15.578"/>
</kw>
<status status="PASS" starttime="20250106 09:59:14.996" endtime="20250106 09:59:15.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 09:59:18.580" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 09:59:15.579" endtime="20250106 09:59:18.580"/>
</kw>
<kw name="Double Click Element" library="SeleniumLibrary">
<arg>xpath=//button[@id="doubleClickBtn"]</arg>
<doc>Double clicks the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:18.581" level="INFO">Double clicking element 'xpath=//button[@id="doubleClickBtn"]'.</msg>
<status status="PASS" starttime="20250106 09:59:18.581" endtime="20250106 09:59:18.872"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You have done a double click</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:18.897" level="INFO">Current page contains text 'You have done a double click'.</msg>
<status status="PASS" starttime="20250106 09:59:18.873" endtime="20250106 09:59:18.898"/>
</kw>
<kw name="Open Context Menu" library="SeleniumLibrary">
<arg>xpath=//button[@id='rightClickBtn']</arg>
<doc>Opens the context menu on the element identified by ``locator``.</doc>
<status status="PASS" starttime="20250106 09:59:18.898" endtime="20250106 09:59:19.229"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You have done a right click</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:19.246" level="INFO">Current page contains text 'You have done a right click'.</msg>
<status status="PASS" starttime="20250106 09:59:19.230" endtime="20250106 09:59:19.246"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//button[@class="btn btn-primary"][text()='Click Me']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:19.247" level="INFO">Clicking element 'xpath=//button[@class="btn btn-primary"][text()='Click Me']'.</msg>
<status status="PASS" starttime="20250106 09:59:19.247" endtime="20250106 09:59:19.372"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You have done a dynamic click</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:19.393" level="INFO">Current page contains text 'You have done a dynamic click'.</msg>
<status status="PASS" starttime="20250106 09:59:19.373" endtime="20250106 09:59:19.394"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${original_tab}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20250106 09:59:19.398" level="INFO">${original_tab} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:19.396" endtime="20250106 09:59:19.398"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${original_tab}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250106 09:59:19.400" level="INFO">${original_tab} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:19.400" endtime="20250106 09:59:19.400"/>
</kw>
<doc>This test case verifies the functionality of different button interactions on the Elements page, including double-click, right-click, and single-click actions.</doc>
<status status="PASS" starttime="20250106 09:59:14.963" endtime="20250106 09:59:19.401"/>
</test>
<test id="s1-t6" name="Links_And_Broken_Test" line="108">
<kw name="Run Keyword" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:19.404" endtime="20250106 09:59:19.405"/>
</kw>
<status status="PASS" starttime="20250106 09:59:19.404" endtime="20250106 09:59:19.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks all the links on the page and logs any broken links.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:19.406" endtime="20250106 09:59:19.406"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open("https://practice-automation.com/broken-links/", "_blank")</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:19.407" level="INFO">Executing JavaScript:
window.open("https://practice-automation.com/broken-links/", "_blank")
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:19.407" endtime="20250106 09:59:19.467"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250106 09:59:19.467" endtime="20250106 09:59:19.474"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${all_tabs}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20250106 09:59:19.501" level="INFO">${all_tabs} = ['5F465D2D94F487226330F3D4CD90ED82', 'DA6B450006EE4ABDE62C1E669D87CE74']</msg>
<status status="PASS" starttime="20250106 09:59:19.474" endtime="20250106 09:59:19.501"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${all_tabs[-1]}</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250106 09:59:19.501" endtime="20250106 09:59:19.582"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>@{links}</var>
<arg>xpath=//a[@href]</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250106 09:59:22.456" level="INFO">@{links} = [ &lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.126")&gt; | &lt;selenium.webd...</msg>
<status status="PASS" starttime="20250106 09:59:19.582" endtime="20250106 09:59:22.456"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Links on the page: @{links}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:22.457" endtime="20250106 09:59:22.459"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${BASE_URL}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20250106 09:59:22.468" level="INFO">${BASE_URL} = https://practice-automation.com/broken-links/</msg>
<status status="PASS" starttime="20250106 09:59:22.459" endtime="20250106 09:59:22.469"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250106 09:59:22.470" level="INFO">Creating Session using : alias=link_session, url=https://practice-automation.com/broken-links/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250106 09:59:22.469" endtime="20250106 09:59:22.470"/>
</kw>
<for flavor="IN">
<var>${link}</var>
<value>@{links}</value>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.126")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:22.479" level="INFO">${url} = https://practice-automation.com/broken-links/#main</msg>
<status status="PASS" starttime="20250106 09:59:22.471" endtime="20250106 09:59:22.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:22.480" level="INFO">Checking URL: https://practice-automation.com/broken-links/#main</msg>
<status status="PASS" starttime="20250106 09:59:22.479" endtime="20250106 09:59:22.480"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:22.480" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:23.805" level="INFO">GET Request : url=https://practice-automation.com/broken-links/#main 
 path_url=/broken-links/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:23.806" level="INFO">GET Response : url=https://practice-automation.com/broken-links/#main 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:21 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Link': '&lt;https://practice-automation.com/wp-json/&gt;; rel="https://api.w.org/", &lt;https://practice-automation.com/wp-json/wp/v2/pages/1267&gt;; rel="alternate"; title="JSON"; type="application/json", &lt;https://wp.me/PeTdAm-kr&gt;; rel=shortlink', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all{.wp-block-buttons{box-sizing:border-box}.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column[style*=flex-basis]{flex-grow:0}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}.wp-block-image img{box-sizing:border-box;height:auto;max-width:100%;vertical-align:bottom;width:-moz-fit-content;width:fit-content}.wp-block-image.aligncenter{text-align:center}.wp-block-image.aligncenter{display:table}ul{box-sizing:border-box}.wp-block-spacer{clear:both}.wp-block-table{overflow-x:auto}.wp-block-table table{border-collapse:collapse;width:100%}.wp-block-table thead{border-bottom:3px solid}.wp-block-table td,.wp-block-table th{border:1px solid;padding:.5em}.wp-block-table .has-fixed-layout{table-layout:fixed;width:100%}.wp-block-table .has-fixed-layout td,.wp-block-table .has-fixed-layout th{word-break:break-word}.entry-content{counter-reset:footnotes}.has-text-align-left{text-align:left}.aligncenter{clear:both}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}html :where(img[class*=wp-image-]){height:auto;max-width:100%}:where(figure){margin:0 0 1em}:root{--colorLight:#fff;--colorFont:#555;--colorBackground:#f7f7f7;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:rgba(0,0,0,0)}b,strong{font-weight:700}code{font-family:monospace,monospace;font-size:1em}img{border-style:none}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}details{display:block}summary{display:list-item}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input,textarea{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}iframe{max-width:100%}figure,img{margin:0;max-width:100%;height:auto}table{width:100%;border-collapse:collapse}td,th{padding:.5em 1em;word-break:initial}th{text-align:inherit;background-color:var(--colorBackground)}code{padding:0 .5rem;font-size:.85rem;display:inline-block;background-color:var(--colorBackground)}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h1,h2,h3{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h1:first-child:not([class*=mt-]),h2:first-child:not([class*=mt-]),h3:first-child:not([class*=mt-]){margin-top:0}h1{font-size:2em}h2{font-size:1.5em}h3{font-size:1.3em}p{margin-top:0;margin-bottom:1.5em}p:last-child:after{content:"";display:block;clear:both}fieldset{border-color:var(--colorBorder);border-width:1px;border-style:solid;padding:.5em 1.25em 1.25em}button,input,label,textarea{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=email],input[type=search],input[type=text],textarea{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}textarea{padding-top:.25em;padding-bottom:.25em}input[type=search]{-webkit-appearance:textfield}[type=button],[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-bold [type=button],.btns-bold [type=submit]{font-weight:700}.btns-rounded [type=button],.btns-rounded [type=submit]{border-radius:6px}.btns-colormain [type=button],.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-rounded input,.btns-rounded textarea{border-radius:6px}textarea{vertical-align:top;overflow:auto}.l{background-color:var(--colorLight)}.m{background-color:var(--colorBackground)}.fs-14{font-size:14px}.text-center{text-align:center}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-1400 .container{max-width:1400px}.container-1400&gt;.container{max-width:1400px}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.grid-wrapper{display:flex;flex-wrap:wrap}.layout-gap-30 .grid-wrapper{margin-left:-15px;margin-right:-15px}.layout-gap-30 .grid-item{padding-right:15px;padding-left:15px;padding-bottom:30px}.grid-item{width:100%}@media screen and (min-width:576px){.grid-item{width:50%}.layout-cols-1 .grid-item{width:100%}}.header-wrap,.header&gt;div.container{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container{padding:0}}.header #nav_toggle{display:none}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo.logo-left{text-align:left}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}#box{display:flex;flex-direction:column;min-height:100vh}.title{position:relative}.title h1{margin-top:0;margin-bottom:0}.title .breadcrumbs{margin:.5em 0}#main{position:relative;flex-grow:1;overflow:hidden}.footer{position:relative;overflow:hidden}.footer-widgets&gt;*{margin-bottom:1em}.copyright{position:relative}.copyright .copyright-text{margin:.5em 0}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,.15);width:44px;height:44px;line-height:44px;font-size:1rem;text-align:center;z-index:2}#to-top:before{content:"";display:inline-block;position:relative;top:0;width:7px;height:7px;border-style:solid;border-width:1px 1px 0 0;border-color:var(--colorDarkMuted);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#overlay{position:fixed;top:0;left:0;height:100vh;width:100vw;z-index:20;opacity:0;visibility:hidden;background-color:rgba(0,0,0,.001)}.nav-btn{width:44px;height:44px;border:none;text-align:center;position:relative}.nav-btn[class]{padding:0}.nav-btn[id][id][id]{background:rgba(0,0,0,0)}.nav-btn span,.nav-btn span:after,.nav-btn span:before{width:18px;height:2px;margin:auto;left:0;display:block;position:relative;content:"";background:var(--colorDarkMuted)}.nav-btn.active span{background:rgba(0,0,0,0)!important}.nav-btn span:before{bottom:5px;opacity:1}.nav-btn span:after{top:3px}.nav-btn.active span:before{top:1px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.nav-btn.active span:after{top:-1px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}[class*=container]&gt;.nav-btn:last-child{margin:0 .5em}@media screen and (min-width:1200px){.top-nav{position:relative;flex:1 1;display:flex;align-items:center}.menu-right .top-nav{justify-content:flex-end}.top-nav .nav-btn{display:none}.top-menu&gt;li:first-child{margin-left:0}.top-menu{display:flex;list-style:none;padding:0;margin:0;flex-wrap:wrap;line-height:1.1;align-items:center}.menu-right .top-menu{justify-content:flex-end}.top-menu li{position:relative}.top-menu&gt;li{margin:0 .75em;overflow:hidden}.top-menu&gt;li&gt;a{display:inline-block;padding:.5em 0;position:relative}.menu-bold .top-menu&gt;li&gt;a{font-weight:700}.top-menu&gt;li&gt;a:before{position:absolute;height:3px;content:"";background-color:var(--colorMain);width:0;bottom:0;left:0}}@media screen and (max-width:1199px){.top-menu{display:none}.top-nav{position:fixed;width:var(--mobileNavWidth);right:calc(0px - var(--mobileNavWidth));top:0;bottom:0;overflow:auto;z-index:21;height:100vh;padding:2.5em var(--mobileNavPX);background:var(--colorLight)}.top-nav ul{margin:0;padding:0;list-style:none}.top-nav li{padding:.2em 0}.top-nav li:before{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-color:var(--colorBorder);-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-right:.8em}.top-nav .top-menu&gt;li{padding:.4em 0}.top-nav .top-menu&gt;li:before{display:none}.top-nav .top-menu a:not([... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:23.806" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'practice-automation.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:23.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:22.480" endtime="20250106 09:59:23.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:23.809" level="INFO">Status Code for https://practice-automation.com/broken-links/#main: 200</msg>
<status status="PASS" starttime="20250106 09:59:23.808" endtime="20250106 09:59:23.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:23.809" endtime="20250106 09:59:23.810"/>
</kw>
<status status="PASS" starttime="20250106 09:59:22.471" endtime="20250106 09:59:23.810"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.132")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:23.821" level="INFO">${url} = https://practice-automation.com/</msg>
<status status="PASS" starttime="20250106 09:59:23.810" endtime="20250106 09:59:23.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:23.822" level="INFO">Checking URL: https://practice-automation.com/</msg>
<status status="PASS" starttime="20250106 09:59:23.822" endtime="20250106 09:59:23.822"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:23.822" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:23.926" level="INFO">GET Request : url=https://practice-automation.com/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:23.926" level="INFO">GET Response : url=https://practice-automation.com/ 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:22 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Link': '&lt;https://practice-automation.com/wp-json/&gt;; rel="https://api.w.org/", &lt;https://practice-automation.com/wp-json/wp/v2/pages/36&gt;; rel="alternate"; title="JSON"; type="application/json", &lt;https://wp.me/PeTdAm-A&gt;; rel=shortlink', 'Last-Modified': 'Mon, 06 Jan 2025 02:54:58 GMT', 'Cache-Control': 'max-age=300, must-revalidate', 'X-nananana': 'Batcache-Set', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all and (max-width:1199px){#nav_top.top-nav{color:#fff;width:100%;right:0;left:0;-webkit-transform:scaleX(0);transform:scaleX(0);opacity:0;background:rgba(0,0,0,.05);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);display:flex}#nav_top.top-nav .top-menu{display:block;max-width:var(--mobileNavWidth);margin:auto}#nav_top.top-nav .top-menu&gt;li{position:relative;opacity:0;left:-30px}#nav_top.top-nav .top-menu&gt;li&gt;a{font-size:2em}#nav_top.top-nav .top-menu a{display:none;color:#fff}}@media all{.wp-block-button__link{align-content:center;box-sizing:border-box;display:inline-block;height:100%;text-align:center;width:100%;word-break:break-word}:where(.wp-block-button__link){border-radius:9999px;box-shadow:none;padding:calc(.667em + 2px) calc(1.333em + 2px);text-decoration:none}.wp-block-buttons&gt;.wp-block-button.has-custom-width{max-width:none}.wp-block-buttons&gt;.wp-block-button.has-custom-width .wp-block-button__link{width:100%}.wp-block-buttons&gt;.wp-block-button.wp-block-button__width-50{width:calc(50% - var(--wp--style--block-gap,.5em)*.5)}.wp-block-buttons{box-sizing:border-box}.wp-block-buttons&gt;.wp-block-button{display:inline-block;margin:0}.wp-block-buttons.is-content-justification-center{justify-content:center}.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}.wp-block-image img{box-sizing:border-box;height:auto;max-width:100%;vertical-align:bottom;width:-moz-fit-content;width:fit-content}.wp-block-image.aligncenter{text-align:center}.wp-block-image.aligncenter{display:table}ul{box-sizing:border-box}.wp-block-spacer{clear:both}.entry-content{counter-reset:footnotes}.aligncenter{clear:both}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}html :where(img[class*=wp-image-]){height:auto;max-width:100%}:where(figure){margin:0 0 1em}:root{--colorLight:#fff;--colorFont:#555;--colorBackground:#f7f7f7;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:rgba(0,0,0,0)}strong{font-weight:700}img{border-style:none}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input,textarea{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}figure,img{margin:0;max-width:100%;height:auto}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h1,h2,h3{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h1:first-child:not([class*=mt-]),h2:first-child:not([class*=mt-]),h3:first-child:not([class*=mt-]){margin-top:0}h1{font-size:2em}h2{font-size:1.5em}h3{font-size:1.3em}p{margin-top:0;margin-bottom:1.5em}p:last-child:after{content:"";display:block;clear:both}fieldset{border-color:var(--colorBorder);border-width:1px;border-style:solid;padding:.5em 1.25em 1.25em}button,input,label,textarea{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=email],input[type=search],input[type=text],textarea{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}textarea{padding-top:.25em;padding-bottom:.25em}input[type=search]{-webkit-appearance:textfield}.wp-block-button__link,[type=button],[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-bold .wp-block-button__link,.btns-bold [type=button],.btns-bold [type=submit]{font-weight:700}.btns-rounded .wp-block-button__link,.btns-rounded [type=button],.btns-rounded [type=submit]{border-radius:6px}.btns-colormain .wp-block-button__link,.btns-colormain [type=button],.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-rounded input,.btns-rounded textarea{border-radius:6px}textarea{vertical-align:top;overflow:auto}.l{background-color:var(--colorLight)}.m{background-color:var(--colorBackground)}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-1400 .container{max-width:1400px}.container-1400&gt;.container{max-width:1400px}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.header-wrap,.header&gt;div.container{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container{padding:0}}.header #nav_toggle{display:none}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo.logo-left{text-align:left}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}#box{display:flex;flex-direction:column;min-height:100vh}#main{position:relative;flex-grow:1;overflow:hidden}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,.15);width:44px;height:44px;line-height:44px;font-size:1rem;text-align:center;z-index:2}#to-top:before{content:"";display:inline-block;position:relative;top:0;width:7px;height:7px;border-style:solid;border-width:1px 1px 0 0;border-color:var(--colorDarkMuted);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#overlay{position:fixed;top:0;left:0;height:100vh;width:100vw;z-index:20;opacity:0;visibility:hidden;background-color:rgba(0,0,0,.001)}.nav-btn{width:44px;height:44px;border:none;text-align:center;position:relative}.nav-btn[class]{padding:0}.nav-btn[id][id][id]{background:rgba(0,0,0,0)}.nav-btn span,.nav-btn span:after,.nav-btn span:before{width:18px;height:2px;margin:auto;left:0;display:block;position:relative;content:"";background:var(--colorDarkMuted)}.nav-btn.active span{background:rgba(0,0,0,0)!important}.nav-btn span:before{bottom:5px;opacity:1}.nav-btn span:after{top:3px}.nav-btn.active span:before{top:1px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.nav-btn.active span:after{top:-1px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}[class*=container]&gt;.nav-btn:last-child{margin:0 .5em}@media screen and (min-width:1200px){.top-nav{position:relative;flex:1 1;display:flex;align-items:center}.menu-right .top-nav{justify-content:flex-end}.top-nav .nav-btn{display:none}.top-menu&gt;li:first-child{margin-left:0}.top-menu{display:flex;list-style:none;padding:0;margin:0;flex-wrap:wrap;line-height:1.1;align-items:center}.menu-right .top-menu{justify-content:flex-end}.top-menu li{position:relative}.top-menu&gt;li{margin:0 .75em;overflow:hidden}.top-menu&gt;li&gt;a{display:inline-block;padding:.5em 0;position:relative}.menu-bold .top-menu&gt;li&gt;a{font-weight:700}.top-menu&gt;li&gt;a:before{position:absolute;height:3px;content:"";background-color:var(--colorMain);width:0;bottom:0;left:0}}@media screen and (max-width:1199px){.top-menu{display:none}.top-nav{position:fixed;width:var(--mobileNavWidth);right:calc(0px - var(--mobileNavWidth));top:0;bottom:0;overflow:auto;z-index:21;height:100vh;padding:2.5em var(--mobileNavPX);background:var(--colorLight)}.top-nav ul{margin:0;padding:0;list-style:none}.top-nav li{padding:.2em 0}.top-nav li:before{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-color:var(--colorBorder);-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-right:.8em}.top-nav .top-menu&gt;li{padding:.4em 0}.top-nav .top-menu&gt;li:before{display:none}.top-nav .top-menu a:not([id]){color:var(--colorDarkMuted)}.top-nav .nav-btn{position:fixed;right:0;top:0;background-color:var(--colorLight)!important}.top-nav .nav-btn spa... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:23.926" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'practice-automation.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:23.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:23.822" endtime="20250106 09:59:23.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:23.928" level="INFO">Status Code for https://practice-automation.com/: 200</msg>
<status status="PASS" starttime="20250106 09:59:23.928" endtime="20250106 09:59:23.928"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:23.929" endtime="20250106 09:59:23.929"/>
</kw>
<status status="PASS" starttime="20250106 09:59:23.810" endtime="20250106 09:59:23.929"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.139")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:23.938" level="INFO">${url} = https://automatenow.io/</msg>
<status status="PASS" starttime="20250106 09:59:23.930" endtime="20250106 09:59:23.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:23.939" level="INFO">Checking URL: https://automatenow.io/</msg>
<status status="PASS" starttime="20250106 09:59:23.938" endtime="20250106 09:59:23.939"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:23.939" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:27.373" level="INFO">GET Request : url=https://automatenow.io/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:27.373" level="INFO">GET Response : url=https://automatenow.io/ 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:26 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Last-Modified': 'Mon, 06 Jan 2025 02:54:58 GMT', 'Cache-Control': 'max-age=300, must-revalidate', 'X-nananana': 'Batcache-Set', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all{.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}:where(.wp-block-group.wp-block-group-is-layout-constrained){position:relative}ul{box-sizing:border-box}.wp-block-spacer{clear:both}.entry-content{counter-reset:footnotes}.has-text-align-left{text-align:left}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.wp-block-coblocks-media-card__media{grid-area:media-text-media;-ms-grid-column:1;-ms-grid-row:1;margin:0;position:relative}.wp-block-coblocks-media-card__content{grid-area:media-text-content;-ms-grid-column:2;-ms-grid-row:1;margin-left:-50%;position:relative;word-break:break-word;z-index:1}@media (max-width:599px) and (min-width:600px){.wp-block-coblocks-media-card.is-stacked-on-mobile .wp-block-coblocks-media-card__content{grid-area:media-text-content;-ms-grid-column:2;-ms-grid-row:1;margin-left:-100px}}.pt-5{padding-top:2.5em}:root{--colorLight:#fff;--colorFont:#555;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--colorMain2:#8a8dff;--colorMain3:#e678f5;--colorMain4:#7892f5;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}hr{box-sizing:content-box;overflow:visible}a{background-color:rgba(0,0,0,0)}strong{font-weight:700}img{border-style:none}button,input{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=submit],button{-webkit-appearance:button}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}iframe{max-width:100%}img{margin:0;max-width:100%;height:auto}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h2{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h2:first-child:not([class*=mt-]){margin-top:0}h2{font-size:1.5em}hr{border:0;height:1px;margin:0;background-color:var(--colorBorder)}button,input,label{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=search]{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}input[type=search]{-webkit-appearance:textfield}[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-big [type=submit]{padding:20px 35px 20px}.btns-bold [type=submit]{font-weight:700}.btns-round [type=submit]{border-radius:40px}.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-outline [type=submit]{background-color:rgba(0,0,0,0);color:var(--colorDark);border-color:var(--colorDark)}.btns-colormain.btns-outline [type=submit]{color:var(--colorMain);border-color:var(--colorMain)}.btns-round input{border-radius:20px}.l{background-color:var(--colorLight)}.extra-padding{padding:1.5em}.fs-20{font-size:20px}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-960 .container{max-width:960px}.container-960&gt;.container{max-width:960px}.container-fluid{position:relative;padding-left:15px;padding-right:15px}.container-fluid:after,.container-fluid:before{content:"";display:block;clear:both}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.header-wrap,.header&gt;div.container-fluid{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container-fluid{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container-fluid{padding:0}}.header&gt;div.container-fluid{padding:0}.header #nav_toggle{display:none}.header-search{position:relative}.header-search #search_toggle{border:none;background:rgba(0,0,0,0);padding:.25em .85em .2em;line-height:1}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo .logo-text{margin:0 1em}.logo .logo-text span{margin-top:5px;margin-bottom:5px}.logo:not(.logo-between) .logo-text-primary{font-size:1.2em;font-weight:700}.logo.logo-left{text-align:left}.logo.logo-left span span{display:block}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}.section-hr{box-sizing:border-box;position:absolute;margin:0 auto;padding:0;left:0;right:0;bottom:0;background-color:var(--colorBorder);width:100%}#box{display:flex;flex-direction:column;min-height:100vh}#main{position:relative;flex-grow:1;overflow:hidden}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,.15);width:44px;height:44px;line-height:44px;font-size:1rem;text-align:center;z-index:2}#to-top:before{content:"";display:inline-block;position:relative;top:0;width:7px;height:7px;border-style:solid;border-width:1px 1px 0 0;border-color:var(--colorDarkMuted);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#overlay{position:fixed;top:0;left:0;height:100vh;width:100vw;z-index:20;opacity:0;visibility:hidden;background-color:rgba(0,0,0,.001)}.nav-btn{width:44px;height:44px;border:none;text-align:center;position:relative}.nav-btn[class]{padding:0}.nav-btn[id][id][id]{background:rgba(0,0,0,0)}.nav-btn span,.nav-btn span:after,.nav-btn span:before{width:18px;height:2px;margin:auto;left:0;display:block;position:relative;content:"";background:var(--colorDarkMuted)}.nav-btn.active span{background:rgba(0,0,0,0)!important}.nav-btn span:before{bottom:5px;opacity:1}.nav-btn span:after{top:3px}.nav-btn.active span:before{top:1px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.nav-btn.active span:after{top:-1px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}[class*=container]&gt;.nav-btn:last-child{margin:0 .5em}@media screen and (min-width:1200px){.top-nav{position:relative;flex:1 1;display:flex;align-items:center}.container-fluid .top-nav{padding:0 1em}.menu-right .top-nav{justify-content:flex-end}.top-nav .nav-btn{display:none}.top-menu&gt;li:first-child{margin-left:0}.top-menu{display:flex;list-style:none;padding:0;margin:0;flex-wrap:wrap;line-height:1.1;align-items:center}.menu-right .top-menu{justify-content:flex-end}.top-menu ul{list-style:none;position:absolute;top:100%;left:0;min-width:11em;margin-top:5px;opacity:0;background:#fff;background:var(--colorLight);border-radius:1px;box-shadow:0 0 20px 0 rgba(100,100,100,.15);padding:.5em 0}.top-menu ul li{display:flex;align-items:center;justify-content:space-between;padding-right:.5em}.top-menu ul a{font-size:14px;display:inline-block;padding:.5em 1em}.top-menu .sub-menu a:not([id]){color:var(--colorDarkMuted)}.top-menu li{position:relative}.top-menu li.menu-item-has-children&gt;a{padding-right:.1em}.top-menu li.menu-item-has-children:after{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-color:var(--colorBorder);-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:3px;margin-right:3px}.top-menu&gt;li{margin:0 .75em;overflow:hidden}.top-menu&gt;li&gt;a{display:inline-block;padding:.5em 0;position:relative}.top-menu&gt;li&gt;a:before{position:absolute;height:3px;content:"";background-color:var(--colorMain);width:0;bottom:0;left:0}.top-menu&gt;li.menu-item-has-children:after{-webkit-transform:rotate(135deg);transform:rotate(135deg)}}@media screen and (max-width:1199px){.top-menu{display:none}.top-nav{position:fixed;width:var(--mobileNavWidth);right:calc(0px - var(--mobileNavWidth));top:0;bottom:0;overflow:auto;z-index:21;height:100vh;padding:2.5em var(--mobileNavPX);background:var(--colorLight)}.top-nav ul{margin:0;padding:0;list-style:none}.top-nav ul ul{margin-top:.4em;font-size:.92em}.top-nav li{padding:.2em 0}.top-nav li:before{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:27.374" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'automatenow.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:27.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:23.939" endtime="20250106 09:59:27.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:27.376" level="INFO">Status Code for https://automatenow.io/: 200</msg>
<status status="PASS" starttime="20250106 09:59:27.375" endtime="20250106 09:59:27.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:27.377" endtime="20250106 09:59:27.378"/>
</kw>
<status status="PASS" starttime="20250106 09:59:23.930" endtime="20250106 09:59:27.378"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.142")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:27.387" level="INFO">${url} = https://automatenow-courses.teachable.com/</msg>
<status status="PASS" starttime="20250106 09:59:27.378" endtime="20250106 09:59:27.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:27.388" level="INFO">Checking URL: https://automatenow-courses.teachable.com/</msg>
<status status="PASS" starttime="20250106 09:59:27.388" endtime="20250106 09:59:27.389"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:27.389" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:28.059" level="INFO">GET Request : url=https://automatenow-courses.teachable.com/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:28.059" level="INFO">GET Response : url=https://automatenow-courses.teachable.com/ 
 status=200, reason=OK 
 headers={'Date': 'Mon, 06 Jan 2025 02:59:26 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'x-fedora-school-id': '1077388', 'vary': 'Accept', 'Cache-Control': 'max-age=0, private, must-revalidate', 'Set-Cookie': 'ahoy_visitor=320bc15e-51b0-4340-b787-c58aece0912c; path=/; expires=Wed, 06 Jan 2027 02:59:26 GMT; secure, ahoy_visit=a55092bf-ca06-4477-a620-5a2ca8561bca; path=/; expires=Mon, 06 Jan 2025 06:59:26 GMT; secure, _afid=320bc15e-51b0-4340-b787-c58aece0912c; domain=.teachable.com; path=/; expires=Tue, 06 Jan 2026 02:59:26 GMT; secure; SameSite=None, aid=320bc15e-51b0-4340-b787-c58aece0912c; domain=.teachable.com; path=/; expires=Tue, 06 Jan 2026 02:59:26 GMT; secure; SameSite=None, site_preview=logged_out; path=/; secure, _session_id=11877ac1f937d6a880069a6faa58f4dc; path=/; expires=Wed, 05 Feb 2025 02:59:26 GMT; HttpOnly; secure, __cf_bm=eOH.Cr3eybRSpKBC3xEM8GT7pDJBQj1jvJuP.HgTj1A-1736132366-1.0.1.1-aCdIrH3ysfr7tsIkU5AjbhINJmCjr8VtbLeiQseqDl8E90Kn.uzl1MNsptnJ8ABqOvccGVdxoPN3FohtHw4c3Q; path=/; expires=Mon, 06-Jan-25 03:29:26 GMT; domain=.teachable.com; HttpOnly; Secure; SameSite=None, __cfruid=772d935cef96962c9a3e2e6f6300d55df3b1098b-1736132366; path=/; domain=.teachable.com; HttpOnly; Secure; SameSite=None, _cfuvid=Wwhgvpy0QIpQ6Vd_E4_qw8m5PjL6NAL4FOtPIE89AhU-1736132366928-0.0.1.1-604800000; path=/; domain=.teachable.com; HttpOnly; Secure; SameSite=None', 'x-request-id': 'da3be6cd255461864527f2479e2e257b', 'x-runtime': '0.183054', 'strict-transport-security': 'max-age=2629746; includeSubDomains', 'x-frame-options': 'SAMEORIGIN', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-download-options': 'noopen', 'x-permitted-cross-domain-policies': 'none', 'referrer-policy': 'strict-origin-when-cross-origin', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8fd873babc4a0387-HKG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=


&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link href='https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=width:32,height:32/https://file-uploads.teachablecdn.com/2d30d20595a144239e94af099a3e2cf1/b965731da71e4f85bfa1408b92b94f5b' rel='icon' type='image/png'&gt;

&lt;link href='https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=width:72,height:72/https://file-uploads.teachablecdn.com/2d30d20595a144239e94af099a3e2cf1/b965731da71e4f85bfa1408b92b94f5b' rel='apple-touch-icon' type='image/png'&gt;

&lt;link href='https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=width:144,height:144/https://file-uploads.teachablecdn.com/2d30d20595a144239e94af099a3e2cf1/b965731da71e4f85bfa1408b92b94f5b' rel='apple-touch-icon' type='image/png'&gt;

&lt;link href='https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=width:320,height:345/https://file-uploads.teachablecdn.com/df9be19d555748e5abd60eac601aaff1/69f33fab95e64eb6a8c4c3f39d53f2f4' rel='apple-touch-startup-image' type='image/png'&gt;

&lt;link href='https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=width:640,height:690/https://file-uploads.teachablecdn.com/df9be19d555748e5abd60eac601aaff1/69f33fab95e64eb6a8c4c3f39d53f2f4' rel='apple-touch-startup-image' type='image/png'&gt;

&lt;meta name='apple-mobile-web-app-capable' content='yes' /&gt;
&lt;meta charset="UTF-8"&gt;
&lt;meta name="csrf-param" content="authenticity_token" /&gt;
&lt;meta name="csrf-token" content="0Ofc71El9EE97tqfbHT/Ch197rJDbQeIgDVfRoob4xdprd6ErbitNg4wmjUkIch2BEVSY7/QMrHSSMMb2pmqog==" /&gt;
&lt;style type='text/css'&gt;:root{--brand_primary: #00AAEF;--brand_secondary: #00AAEF;--brand_heading: #2b3636;--brand_text: #2b3636;--brand_navbar_text: #fff;--brand_navbar_fixed_text: #fff;--brand_homepage_heading: #fff;--brand_course_heading: #fff;--brand_video_player_color: #00AAEF;--favicon_url: https://file-uploads.teachablecdn.com/2d30d20595a144239e94af099a3e2cf1/b965731da71e4f85bfa1408b92b94f5b;--font_family:Merriweather;} @font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Bold.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Bold.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Bold.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-HeavyItalic.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-HeavyItalic.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-HeavyItalic.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-HeavyItalic.ttf") format("truetype");
  font-weight: 900;
  font-style: italic;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Light.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Light.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Light.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-LightItalic.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-LightItalic.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-LightItalic.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-LightItalic.ttf") format("truetype");
  font-weight: 300;
  font-style: italic;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-BoldItalic.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-BoldItalic.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-BoldItalic.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-BoldItalic.ttf") format("truetype");
  font-weight: bold;
  font-style: italic;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Heavy.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Heavy.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Heavy.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Heavy.ttf") format("truetype");
  font-weight: 900;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Merriweather';
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Italic.eot");
  src: url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Italic.eot?#iefix") format("embedded-opentype"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Italic.woff") format("woff"), url("//assets.teachablecdn.com/fonts/merriweather/Merriweather-Italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
  font-display: swap; }
&lt;/style&gt;
&lt;link rel="stylesheet" media="screen" href="https://fedora.teachablecdn.com/assets/pages-21f7f68382ea8d79ff086834d0616e5067841bb7276d68e5eb3fc8faf91ab9e3.css" /&gt;
&lt;style&gt;&lt;/style&gt;
&lt;title&gt;Homepage | automateNow&lt;/title&gt;
&lt;link rel="canonical" href="https://automatenow-courses.teachable.com/p/home"&gt;
&lt;meta property="og:image" content="https://file-uploads.teachablecdn.com/c02708da58fc4ff4926339464d6d72f1/4f1e7838ae9e4eeb91d2a556f65eed94"&gt;
&lt;meta property="og:title" content="Homepage"&gt;
&lt;meta property="og:type" content="website"&gt;
&lt;meta property="og:url" content="https://automatenow-courses.teachable.com/p/home"&gt;
&lt;meta name="brand_video_player_color" content="#00AAEF"&gt;
&lt;meta name="site_title" content="automateNow"&gt;
&lt;script src='//fast.wistia.com/assets/external/E-v1.js'&gt;&lt;/script&gt;
&lt;script
  src='https://www.recaptcha.net/recaptcha/api.js'
  async
  defer&gt;&lt;/script&gt;


      &lt;meta name="asset_host" content="https://fedora.teachablecdn.com"&gt;
     &lt;script src="https://fedora.teachablecdn.com/packs/pages--b8eb5b14516a9f0d380a.js"&gt;&lt;/script&gt;
&lt;meta id='iris-url' data-iris-url=https://eventable.internal.teachable.com /&gt;
&lt;script type="text/javascript"&gt;
  window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var r=document.createElement("script");r.type="text/javascript",r.async=!0,r.src="https://cdn.heapanalytics.com/js/heap-"+e+".js";var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(r,a);for(var n=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["addEventProperties","addUserProperties","clearEventProperties","identify","resetIdentity","removeEventProperty","setEventProperties","track","unsetEventProperty"],o=0;o&lt;p.length;o++)heap[p[o]]=n(p[o])},heap.load("318805607");
  window.heapShouldTrackUser = true;
&lt;/script&gt;


&lt;script type="text/javascript"&gt;
  var _user_id = ''; // Set to the user's ID, username, or email address, or '' if not yet known.
  var _session_id = '11877ac1f937d6a880069a6faa58f4dc'; // Set to a unique session ID for the visitor's current browsing session.

  var _sift = window._sift = window._sift || [];
  _sift.push(['_setAccount', '2e541754ec']);
  _sift.push(['_setUserId', _user_id]);
  _sift.push(['_setSessionId', _session_id]);
  _sift.push(['_trackPageview']);

  (function() {
    function ls() {
      var e = document.createElement('script');
      e.src = 'https://cdn.sift.com/s.js';
      document.body.appendChild(e);
    }
    if (window.attachEvent) {
      window.attachEvent('onload', ls);
    } else {
      window.addEventListener('load', ls, false);
    }
  })();
&lt;/script&gt;





&lt;!-- Google tag (gtag.js) --&gt;
&lt;script async src="https://www.googletagmanager.com/gtag/js?id=G-SL8LSCXHSV"&gt;&lt;/script&gt;
&lt;script&gt;
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SL8LSCXHSV', {
    'user_id': '',
    'school_id': '1077388',
    'school_domain': 'automatenow-courses.teachable.com'
  });
&lt;/script&gt;


&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
&lt;script type="text/javascript"&gt;window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"NRBR-08e3a2ada38dc55a529","applicationID":"1065063193","transactionName":"dAxdTUFZXVQEQh0VBFAGQBZBWV5M","queueTime":0,"applicationTime":155,"agent":""}&lt;/script&gt;
&lt;script type="text/javascript"&gt;(window.NREUM||(NREUM={})).init={privacy:{cookies_enabled:true},ajax:{deny_list:["bam.nr-data.net"]},distributed_tracing:{enabled:true}};(window.NREUM||(NREUM={})).loader_config={agentID:"1103368431",accountID:"4102727",trustKey:"27503",xpid:"UAcHU1FRDxABVFdXBwcEV10C",licenseKey:"NRBR-08e3a2ada38dc55a529",applicationID:"1065063193"};;/*! For license information please see nr-loader-spa-1.277.0.min.js.LICENSE.txt */
(()=&gt;{var e,t,r={8122:(e,t,r)=&gt;{"use strict";r.d(t,{a:()=&gt;i});var n=r(944);function i(e,t){try{if(!e||"object"!=typeof e)retur... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:28.060" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'automatenow-courses.teachable.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:28.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:27.389" endtime="20250106 09:59:28.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:28.062" level="INFO">Status Code for https://automatenow-courses.teachable.com/: 200</msg>
<status status="PASS" starttime="20250106 09:59:28.062" endtime="20250106 09:59:28.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:28.063" endtime="20250106 09:59:28.064"/>
</kw>
<status status="PASS" starttime="20250106 09:59:27.378" endtime="20250106 09:59:28.064"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.154")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:28.073" level="INFO">${url} = https://practice-automation.com/</msg>
<status status="PASS" starttime="20250106 09:59:28.064" endtime="20250106 09:59:28.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:28.074" level="INFO">Checking URL: https://practice-automation.com/</msg>
<status status="PASS" starttime="20250106 09:59:28.073" endtime="20250106 09:59:28.074"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:28.074" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:28.168" level="INFO">GET Request : url=https://practice-automation.com/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:28.168" level="INFO">GET Response : url=https://practice-automation.com/ 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:27 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Link': '&lt;https://practice-automation.com/wp-json/&gt;; rel="https://api.w.org/", &lt;https://practice-automation.com/wp-json/wp/v2/pages/36&gt;; rel="alternate"; title="JSON"; type="application/json", &lt;https://wp.me/PeTdAm-A&gt;; rel=shortlink', 'Last-Modified': 'Mon, 06 Jan 2025 02:54:58 GMT', 'Cache-Control': 'max-age=300, must-revalidate', 'X-nananana': 'Batcache-Set', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all and (max-width:1199px){#nav_top.top-nav{color:#fff;width:100%;right:0;left:0;-webkit-transform:scaleX(0);transform:scaleX(0);opacity:0;background:rgba(0,0,0,.05);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);display:flex}#nav_top.top-nav .top-menu{display:block;max-width:var(--mobileNavWidth);margin:auto}#nav_top.top-nav .top-menu&gt;li{position:relative;opacity:0;left:-30px}#nav_top.top-nav .top-menu&gt;li&gt;a{font-size:2em}#nav_top.top-nav .top-menu a{display:none;color:#fff}}@media all{.wp-block-button__link{align-content:center;box-sizing:border-box;display:inline-block;height:100%;text-align:center;width:100%;word-break:break-word}:where(.wp-block-button__link){border-radius:9999px;box-shadow:none;padding:calc(.667em + 2px) calc(1.333em + 2px);text-decoration:none}.wp-block-buttons&gt;.wp-block-button.has-custom-width{max-width:none}.wp-block-buttons&gt;.wp-block-button.has-custom-width .wp-block-button__link{width:100%}.wp-block-buttons&gt;.wp-block-button.wp-block-button__width-50{width:calc(50% - var(--wp--style--block-gap,.5em)*.5)}.wp-block-buttons{box-sizing:border-box}.wp-block-buttons&gt;.wp-block-button{display:inline-block;margin:0}.wp-block-buttons.is-content-justification-center{justify-content:center}.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}.wp-block-image img{box-sizing:border-box;height:auto;max-width:100%;vertical-align:bottom;width:-moz-fit-content;width:fit-content}.wp-block-image.aligncenter{text-align:center}.wp-block-image.aligncenter{display:table}ul{box-sizing:border-box}.wp-block-spacer{clear:both}.entry-content{counter-reset:footnotes}.aligncenter{clear:both}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}html :where(img[class*=wp-image-]){height:auto;max-width:100%}:where(figure){margin:0 0 1em}:root{--colorLight:#fff;--colorFont:#555;--colorBackground:#f7f7f7;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:rgba(0,0,0,0)}strong{font-weight:700}img{border-style:none}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input,textarea{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}figure,img{margin:0;max-width:100%;height:auto}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h1,h2,h3{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h1:first-child:not([class*=mt-]),h2:first-child:not([class*=mt-]),h3:first-child:not([class*=mt-]){margin-top:0}h1{font-size:2em}h2{font-size:1.5em}h3{font-size:1.3em}p{margin-top:0;margin-bottom:1.5em}p:last-child:after{content:"";display:block;clear:both}fieldset{border-color:var(--colorBorder);border-width:1px;border-style:solid;padding:.5em 1.25em 1.25em}button,input,label,textarea{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=email],input[type=search],input[type=text],textarea{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}textarea{padding-top:.25em;padding-bottom:.25em}input[type=search]{-webkit-appearance:textfield}.wp-block-button__link,[type=button],[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-bold .wp-block-button__link,.btns-bold [type=button],.btns-bold [type=submit]{font-weight:700}.btns-rounded .wp-block-button__link,.btns-rounded [type=button],.btns-rounded [type=submit]{border-radius:6px}.btns-colormain .wp-block-button__link,.btns-colormain [type=button],.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-rounded input,.btns-rounded textarea{border-radius:6px}textarea{vertical-align:top;overflow:auto}.l{background-color:var(--colorLight)}.m{background-color:var(--colorBackground)}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-1400 .container{max-width:1400px}.container-1400&gt;.container{max-width:1400px}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.header-wrap,.header&gt;div.container{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container{padding:0}}.header #nav_toggle{display:none}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo.logo-left{text-align:left}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}#box{display:flex;flex-direction:column;min-height:100vh}#main{position:relative;flex-grow:1;overflow:hidden}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,.15);width:44px;height:44px;line-height:44px;font-size:1rem;text-align:center;z-index:2}#to-top:before{content:"";display:inline-block;position:relative;top:0;width:7px;height:7px;border-style:solid;border-width:1px 1px 0 0;border-color:var(--colorDarkMuted);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#overlay{position:fixed;top:0;left:0;height:100vh;width:100vw;z-index:20;opacity:0;visibility:hidden;background-color:rgba(0,0,0,.001)}.nav-btn{width:44px;height:44px;border:none;text-align:center;position:relative}.nav-btn[class]{padding:0}.nav-btn[id][id][id]{background:rgba(0,0,0,0)}.nav-btn span,.nav-btn span:after,.nav-btn span:before{width:18px;height:2px;margin:auto;left:0;display:block;position:relative;content:"";background:var(--colorDarkMuted)}.nav-btn.active span{background:rgba(0,0,0,0)!important}.nav-btn span:before{bottom:5px;opacity:1}.nav-btn span:after{top:3px}.nav-btn.active span:before{top:1px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.nav-btn.active span:after{top:-1px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}[class*=container]&gt;.nav-btn:last-child{margin:0 .5em}@media screen and (min-width:1200px){.top-nav{position:relative;flex:1 1;display:flex;align-items:center}.menu-right .top-nav{justify-content:flex-end}.top-nav .nav-btn{display:none}.top-menu&gt;li:first-child{margin-left:0}.top-menu{display:flex;list-style:none;padding:0;margin:0;flex-wrap:wrap;line-height:1.1;align-items:center}.menu-right .top-menu{justify-content:flex-end}.top-menu li{position:relative}.top-menu&gt;li{margin:0 .75em;overflow:hidden}.top-menu&gt;li&gt;a{display:inline-block;padding:.5em 0;position:relative}.menu-bold .top-menu&gt;li&gt;a{font-weight:700}.top-menu&gt;li&gt;a:before{position:absolute;height:3px;content:"";background-color:var(--colorMain);width:0;bottom:0;left:0}}@media screen and (max-width:1199px){.top-menu{display:none}.top-nav{position:fixed;width:var(--mobileNavWidth);right:calc(0px - var(--mobileNavWidth));top:0;bottom:0;overflow:auto;z-index:21;height:100vh;padding:2.5em var(--mobileNavPX);background:var(--colorLight)}.top-nav ul{margin:0;padding:0;list-style:none}.top-nav li{padding:.2em 0}.top-nav li:before{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-color:var(--colorBorder);-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-right:.8em}.top-nav .top-menu&gt;li{padding:.4em 0}.top-nav .top-menu&gt;li:before{display:none}.top-nav .top-menu a:not([id]){color:var(--colorDarkMuted)}.top-nav .nav-btn{position:fixed;right:0;top:0;background-color:var(--colorLight)!important}.top-nav .nav-btn spa... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:28.169" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'practice-automation.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:28.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:28.074" endtime="20250106 09:59:28.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:28.171" level="INFO">Status Code for https://practice-automation.com/: 200</msg>
<status status="PASS" starttime="20250106 09:59:28.170" endtime="20250106 09:59:28.171"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:28.171" endtime="20250106 09:59:28.172"/>
</kw>
<status status="PASS" starttime="20250106 09:59:28.064" endtime="20250106 09:59:28.172"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.164")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:28.178" level="INFO">${url} = https://practice-automation.com/broken-links/missing-page.html</msg>
<status status="PASS" starttime="20250106 09:59:28.172" endtime="20250106 09:59:28.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:28.179" level="INFO">Checking URL: https://practice-automation.com/broken-links/missing-page.html</msg>
<status status="PASS" starttime="20250106 09:59:28.179" endtime="20250106 09:59:28.179"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:28.179" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:29.029" level="INFO">GET Request : url=https://practice-automation.com/broken-links/missing-page.html 
 path_url=/broken-links/missing-page.html 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:29.029" level="INFO">GET Response : url=https://practice-automation.com/broken-links/missing-page.html 
 status=404, reason=Not Found 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:27 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Set-Cookie': '__wpdm_client=0f3b71071cefcebf617f0f5ccd654d69; path=/; secure; HttpOnly', 'Expires': 'Wed, 11 Jan 1984 05:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate, max-age=0', 'Link': '&lt;https://practice-automation.com/wp-json/&gt;; rel="https://api.w.org/"', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur MISS', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;meta name='robots' content='noindex, follow' /&gt;
	&lt;style&gt;img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }&lt;/style&gt;
	
	&lt;!-- This site is optimized with the Yoast SEO plugin v24.1 - https://yoast.com/wordpress/plugins/seo/ --&gt;
	&lt;title&gt;Page not found | Practice Automation&lt;/title&gt;
	&lt;meta property="og:locale" content="en_US" /&gt;
	&lt;meta property="og:title" content="Page not found | Practice Automation" /&gt;
	&lt;meta property="og:site_name" content="Practice Automation" /&gt;
	&lt;script data-jetpack-boost="ignore" type="application/ld+json" class="yoast-schema-graph"&gt;{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://practice-automation.com/#website","url":"https://practice-automation.com/","name":"Practice Automation","description":"Automation Made Easy","publisher":{"@id":"https://practice-automation.com/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://practice-automation.com/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https://practice-automation.com/#organization","name":"automateNow LLC","url":"https://practice-automation.com/","logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://practice-automation.com/#/schema/logo/image/","url":"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/06/automateNow-logo-medium.png?fit=712%2C400&amp;ssl=1","contentUrl":"https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/06/automateNow-logo-medium.png?fit=712%2C400&amp;ssl=1","width":712,"height":400,"caption":"automateNow LLC"},"image":{"@id":"https://practice-automation.com/#/schema/logo/image/"},"sameAs":["https://www.facebook.com/groups/automatenow","https://linktr.ee/automateNow"]}]}&lt;/script&gt;
	&lt;!-- / Yoast SEO plugin. --&gt;


&lt;link rel='dns-prefetch' href='//secure.gravatar.com' /&gt;
&lt;link rel='dns-prefetch' href='//stats.wp.com' /&gt;
&lt;link rel='dns-prefetch' href='//fonts-api.wp.com' /&gt;
&lt;link rel='dns-prefetch' href='//widgets.wp.com' /&gt;
&lt;link rel='dns-prefetch' href='//s0.wp.com' /&gt;
&lt;link rel='dns-prefetch' href='//0.gravatar.com' /&gt;
&lt;link rel='dns-prefetch' href='//1.gravatar.com' /&gt;
&lt;link rel='dns-prefetch' href='//2.gravatar.com' /&gt;
&lt;link rel='dns-prefetch' href='//jetpack.wordpress.com' /&gt;
&lt;link rel='dns-prefetch' href='//public-api.wordpress.com' /&gt;
&lt;link rel='dns-prefetch' href='//www.googletagmanager.com' /&gt;
&lt;link rel='preconnect' href='//i0.wp.com' /&gt;
&lt;link rel='preconnect' href='//c0.wp.com' /&gt;
&lt;link rel="alternate" type="application/rss+xml" title="Practice Automation &amp;raquo; Feed" href="https://practice-automation.com/feed/" /&gt;
&lt;link rel="alternate" type="application/rss+xml" title="Practice Automation &amp;raquo; Comments Feed" href="https://practice-automation.com/comments/feed/" /&gt;

&lt;link rel='stylesheet' id='all-css-38cf6a04a183b32e5144f37583c36a2e' href='https://practice-automation.com/_jb_static/??9028ff31f2' type='text/css' media='all' /&gt;
&lt;style id='wp-block-library-inline-css'&gt;
.has-text-align-justify{text-align:justify;}
&lt;/style&gt;
&lt;style id='__EPYT__style-inline-css'&gt;

                .epyt-gallery-thumb {
                        width: 33.333%;
                }
                
&lt;/style&gt;
&lt;link rel='stylesheet' id='all-and-max-width-1199px-css-65c873aceac4671719a3330034209159' href='https://practice-automation.com/wp-content/themes/exs-pro/assets/css/min/menu-mobile6.css?m=1731783079' type='text/css' media='all and (max-width: 1199px)' /&gt;
&lt;style id='wp-emoji-styles-inline-css'&gt;

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
&lt;/style&gt;
&lt;style id='jetpack-sharing-buttons-style-inline-css'&gt;
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
&lt;/style&gt;
&lt;style id='filebird-block-filebird-gallery-style-inline-css'&gt;
ul.filebird-block-filebird-gallery{margin:auto!important;padding:0!important;width:100%}ul.filebird-block-filebird-gallery.layout-grid{display:grid;grid-gap:20px;align-items:stretch;grid-template-columns:repeat(var(--columns),1fr);justify-items:stretch}ul.filebird-block-filebird-gallery.layout-grid li img{border:1px solid #ccc;box-shadow:2px 2px 6px 0 rgba(0,0,0,.3);height:100%;max-width:100%;-o-object-fit:cover;object-fit:cover;width:100%}ul.filebird-block-filebird-gallery.layout-masonry{-moz-column-count:var(--columns);-moz-column-gap:var(--space);column-gap:var(--space);-moz-column-width:var(--min-width);columns:var(--min-width) var(--columns);display:block;overflow:auto}ul.filebird-block-filebird-gallery.layout-masonry li{margin-bottom:var(--space)}ul.filebird-block-filebird-gallery li{list-style:none}ul.filebird-block-filebird-gallery li figure{height:100%;margin:0;padding:0;position:relative;width:100%}ul.filebird-block-filebird-gallery li figure figcaption{background:linear-gradient(0deg,rgba(0,0,0,.7),rgba(0,0,0,.3) 70%,transparent);bottom:0;box-sizing:border-box;color:#fff;font-size:.8em;margin:0;max-height:100%;overflow:auto;padding:3em .77em .7em;position:absolute;text-align:center;width:100%;z-index:2}ul.filebird-block-filebird-gallery li figure figcaption a{color:inherit}

&lt;/style&gt;
&lt;link rel='stylesheet' id='popup-maker-site-css' href='//practice-automation.com/wp-content/uploads/pum/pum-site-styles.css?generated=1732726361&amp;#038;ver=1.20.3' media='all' /&gt;
&lt;style id='exs-style-inline-inline-css'&gt;
:root{--colorLight:#000b11;--colorLightRGB:0,11,17;--colorFont:#000000;--colorFontMuted:#777777;--colorBackground:#ebebeb;--colorBorder:#e1e1e1;--colorDark:#00aaef;--colorDarkMuted:#00aaef;--colorMain:#00aaef;--colorMain2:#00aaef;--colorMain3:#e678f5;--colorMain4:#7892f5;--btn-fs:.92em;--socialGap:1em;--wli-my:.5em;--sb-gap:2.5rem;--sideNavWidth:290px;--sideNavPX:20px;--mobileNavWidth:290px;--mobileNavPX:20px;--sfixWidth:320px;--sfixPX:30px;}body{font-size:18px;line-height:2em;}p{margin-bottom:1.25em;}h2{font-size:1.75em;margin-top:1em;margin-bottom:0.5em;}h3{font-size:1.5em;margin-top:0.5em;margin-bottom:0.5em;}.top-nav a{color:var(--colorLight);}.top-nav a:hover{color:var(--colorLight);}.singular .entry-content a:not([class]){color:var(--colorMain);}
&lt;/style&gt;
&lt;link rel='stylesheet' id='exs-google-fonts-style-css' href='//fonts-api.wp.com/css?family=Spartan%3Aregular%7CFira+Sans%3Aregular&amp;#038;subset=cyrillic-ext&amp;#038;display=swap&amp;#038;ver=1.0.0' media='all' /&gt;
&lt;style id='exs-google-fonts-style-inline-css'&gt;
body,button,input,select,textarea{font-family:"Spartan",sans-serif}h1,h2,h3,h4,h5,h6{font-family: "Fira Sans",sans-serif}
&lt;/style&gt;
&lt;style id='jetpack-global-styles-frontend-style-inline-css'&gt;
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
&lt;/style&gt;




&lt;script data-jetpack-boost="ignore" src="https://practice-automation.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"&gt;&lt;/script&gt;




&lt;link rel="https://api.w.org/" href="https://practice-automation.com/wp-json/" /&gt;&lt;link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://practice-automation.com/xmlrpc.php?rsd" /&gt;

&lt;meta name="generator" content="Site Kit by Google 1.142.0" /&gt;		
			&lt;style&gt;img#wpstats{display:none}&lt;/style&gt;
		
&lt;!-- Google AdSense meta tags added by Site Kit --&gt;
&lt;meta name="google-adsense-platform-account" content="ca-host-pub-2644536267352236"&gt;
&lt;meta name="google-adsense-platform-domain" content="sitekit.withgoogle.com"&gt;
&lt;!-- End Google AdSense meta tags added by Site Kit --&gt;
&lt;style id="custom-background-css"&gt;
body.custom-background { background-color: #ffffff; }
&lt;/style&gt;
	&lt;link rel="amphtml" href="https://practice-automation.com/broken-links/missing-page.html?amp"&gt;&lt;link rel="icon" href="https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-logo-tiny.png?fit=32%2C32&amp;#038;ssl=1" sizes="32x32" /&gt;
&lt;link rel="icon" href="https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-logo-tiny.png?fit=192%2C192&amp;#038;ssl=1" sizes="192x192" /&gt;
&lt;link rel="apple-touch-icon" href="https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-logo-tiny.png?fit=180%2C180&amp;#038;ssl=1" /&gt;
&lt;meta name="msapplication-TileImage" content="https://i0.wp.com/practice-automation.com/wp-content/uploads/2023/09/automateNow-logo-tiny.png?fit=270%2C270&amp;#038;ssl=1" /&gt;
&lt;meta name="generator" content="WordPress Download Manager 3.3.04" /&gt;
                &lt;style&gt;
        /* WPDM Link Template Styles */        &lt;/style&gt;
                &lt;style&gt;

            :root {
                --color-primary: #4a8eff;
                --color-primary-rgb: 74, 142, 255;
                --color-primary-hover: #4a8eff;
                --color-primary-active: #4a8eff... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:29.030" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'practice-automation.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:29.030" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:28.179" endtime="20250106 09:59:29.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:29.032" level="INFO">Status Code for https://practice-automation.com/broken-links/missing-page.html: 404</msg>
<status status="PASS" starttime="20250106 09:59:29.031" endtime="20250106 09:59:29.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Append To List" library="Collections">
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 09:59:29.033" endtime="20250106 09:59:29.034"/>
</kw>
<status status="PASS" starttime="20250106 09:59:29.032" endtime="20250106 09:59:29.034"/>
</kw>
<status status="PASS" starttime="20250106 09:59:28.172" endtime="20250106 09:59:29.034"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.166")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:29.042" level="INFO">${url} = https://automatenow.io/http-response-codes-in-api-testing/</msg>
<status status="PASS" starttime="20250106 09:59:29.034" endtime="20250106 09:59:29.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:29.043" level="INFO">Checking URL: https://automatenow.io/http-response-codes-in-api-testing/</msg>
<status status="PASS" starttime="20250106 09:59:29.043" endtime="20250106 09:59:29.043"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:29.044" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:29.163" level="INFO">GET Request : url=https://automatenow.io/http-response-codes-in-api-testing/ 
 path_url=/http-response-codes-in-api-testing/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:29.163" level="INFO">GET Response : url=https://automatenow.io/http-response-codes-in-api-testing/ 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:28 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'X-Pingback': 'https://automatenow.io/xmlrpc.php', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all and (min-width:1200px){.top-menu&gt;li{padding:7px 16px}.top-menu&gt;li.menu-item-has-children{padding:7px 25px 7px 16px}.top-menu&gt;li.menu-item-has-children&gt;a:after{right:-27px}.top-menu&gt;li&gt;a:after,.top-menu&gt;li&gt;a:before{content:"";width:25px;height:25px;position:absolute;background:rgba(0,0,0,0)!important;border:1px solid currentColor;-webkit-transform:scale(0);transform:scale(0)}.top-menu&gt;li&gt;a:before{left:-16px;bottom:-3px;border-top:0;border-right:0}.top-menu&gt;li&gt;a:after{top:-3px;right:-16px;border-left:0;border-bottom:0}}@media all and (max-width:1199px){#nav_top.top-nav{color:#fff;width:100%;right:0;left:0;-webkit-transform:scaleX(0);transform:scaleX(0);opacity:0;background:rgba(0,0,0,.05);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);display:flex}#nav_top.top-nav .top-menu{display:block;max-width:var(--mobileNavWidth);margin:auto}#nav_top.top-nav .top-menu&gt;li{position:relative;opacity:0;left:-30px}#nav_top.top-nav .top-menu&gt;li&gt;a{font-size:2em}#nav_top.top-nav .top-menu a{display:none;color:#fff}}@media all{:root{--swiper-theme-color:#007aff}.jp-carousel-overlay .swiper-container{margin-left:auto;margin-right:auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.jp-carousel-overlay .swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;box-sizing:content-box}.jp-carousel-overlay .swiper-wrapper{transform:translate3d(0,0,0)}:root{--swiper-navigation-size:44px}.jp-carousel-overlay .swiper-button-next,.jp-carousel-overlay .swiper-button-prev{position:absolute;top:50%;width:calc(var(--swiper-navigation-size)/44*27);height:var(--swiper-navigation-size);margin-top:calc(0px - (var(--swiper-navigation-size)/ 2));z-index:10;display:flex;align-items:center;justify-content:center;color:var(--swiper-navigation-color,var(--swiper-theme-color))}.jp-carousel-overlay .swiper-button-next:after,.jp-carousel-overlay .swiper-button-prev:after{font-family:swiper-icons;font-size:var(--swiper-navigation-size);text-transform:none!important;letter-spacing:0;text-transform:none;font-variant:initial;line-height:1}.jp-carousel-overlay .swiper-button-prev{left:10px;right:auto}.jp-carousel-overlay .swiper-button-prev:after{content:"prev"}.jp-carousel-overlay .swiper-button-next{right:10px;left:auto}.jp-carousel-overlay .swiper-button-next:after{content:"next"}.jp-carousel-overlay .swiper-pagination{position:absolute;text-align:center;transform:translate3d(0,0,0);z-index:10}:root{--jp-carousel-primary-color:#fff;--jp-carousel-primary-subtle-color:#999;--jp-carousel-bg-color:#000;--jp-carousel-bg-faded-color:#222;--jp-carousel-border-color:#3a3a3a}.jp-carousel-overlay .swiper-button-next,.jp-carousel-overlay .swiper-button-prev{background-image:none}.jp-carousel-wrap *{line-height:inherit}.jp-carousel-wrap.swiper-container{height:auto;width:100vw}.jp-carousel-overlay .swiper-button-next,.jp-carousel-overlay .swiper-button-prev{opacity:.5;height:initial;width:initial;padding:20px 40px;background-image:none}.jp-carousel-overlay .swiper-button-next:after,.jp-carousel-overlay .swiper-button-prev:after{content:none}.jp-carousel-overlay .swiper-button-next svg,.jp-carousel-overlay .swiper-button-prev svg{height:30px;width:28px;background:var(--jp-carousel-bg-color);border-radius:4px}.jp-carousel-overlay{font-family:"Helvetica Neue",sans-serif!important;z-index:2147483647;overflow-x:hidden;overflow-y:auto;direction:ltr;position:fixed;top:0;right:0;bottom:0;left:0;background:var(--jp-carousel-bg-color)}.jp-carousel-overlay *{box-sizing:border-box}.jp-carousel-overlay h2:before,.jp-carousel-overlay h3:before{content:none;display:none}.jp-carousel-overlay .swiper-container .swiper-button-prev{left:0;right:auto}.jp-carousel-overlay .swiper-container .swiper-button-next{right:0;left:auto}.jp-carousel-container{display:grid;grid-template-rows:1fr 64px;height:100%}.jp-carousel-info{display:flex;flex-direction:column;text-align:left!important;-webkit-font-smoothing:subpixel-antialiased!important;z-index:100;background-color:var(--jp-carousel-bg-color);opacity:1}.jp-carousel-info-footer{position:relative;background-color:var(--jp-carousel-bg-color);height:64px;display:flex;align-items:center;justify-content:space-between;width:100vw}.jp-carousel-info-extra{display:none;background-color:var(--jp-carousel-bg-color);padding:35px;width:100vw;border-top:1px solid var(--jp-carousel-bg-faded-color)}.jp-carousel-title-and-caption{margin-bottom:15px}.jp-carousel-photo-info{left:0!important;width:100%!important}.jp-carousel-comments-wrapper{padding:0;width:100%!important;display:none}.jp-carousel-close-hint{letter-spacing:0!important;position:fixed;top:20px;right:30px;padding:10px;text-align:right;width:45px;height:45px;z-index:15;color:var(--jp-carousel-primary-color)}.jp-carousel-close-hint svg{padding:3px 2px;background:var(--jp-carousel-bg-color);border-radius:4px}.jp-carousel-pagination-container{flex:1;margin:0 15px 0 35px}.jp-carousel-pagination,.jp-swiper-pagination{color:var(--jp-carousel-primary-color);font-size:15px;font-weight:400;white-space:nowrap;display:none;position:static!important}.jp-carousel-pagination-container .swiper-pagination{text-align:left;line-height:8px}.jp-carousel-pagination{padding-left:5px}.jp-carousel-info-footer .jp-carousel-photo-title-container{flex-basis:50vw;flex:4;justify-content:center;overflow:hidden;margin:0}.jp-carousel-photo-caption,.jp-carousel-photo-title{background:0 0!important;border:none!important;display:inline-block;font:normal 20px/1.3em"Helvetica Neue",sans-serif;line-height:normal;letter-spacing:0!important;margin:0 0 10px;padding:0;overflow:hidden;text-shadow:none!important;text-transform:none!important;color:var(--jp-carousel-primary-color)}.jp-carousel-info-footer .jp-carousel-photo-caption{text-align:center;font-size:15px;white-space:nowrap;color:var(--jp-carousel-primary-subtle-color);margin:0;text-overflow:ellipsis}.jp-carousel-photo-title{font-size:32px;margin-bottom:2px}.jp-carousel-photo-description{color:var(--jp-carousel-primary-subtle-color);font-size:16px;margin:25px 0;width:100%}.jp-carousel-photo-description{overflow:hidden;overflow-wrap:break-word}.jp-carousel-caption{font-size:14px;font-weight:400;margin:0}.jp-carousel-image-meta{color:var(--jp-carousel-primary-color);font-size:13px;font:12px/1.4"Helvetica Neue",sans-serif!important;width:100%;display:none}.jp-carousel-image-meta ul{margin:0!important;padding:0!important;list-style:none!important}a.jp-carousel-image-download{display:inline-block;clear:both;color:var(--jp-carousel-primary-subtle-color);line-height:1;font-weight:400;font-size:14px;text-decoration:none}a.jp-carousel-image-download svg{display:inline-block;vertical-align:middle;margin:0 3px;padding-bottom:2px}.jp-carousel-comments{font:15px/1.7"Helvetica Neue",sans-serif!important;font-weight:400;background:none transparent;width:100%;bottom:10px;margin-top:20px}#jp-carousel-comment-form{margin:0 0 10px!important;width:100%}textarea#jp-carousel-comment-form-comment-field{background:var(--jp-carousel-bg-faded-color);border:1px solid var(--jp-carousel-border-color);color:var(--jp-carousel-primary-subtle-color);font:16px/1.4"Helvetica Neue",sans-serif!important;width:100%;padding:10px 10px 5px;margin:0;float:none;height:147px;-webkit-box-shadow:inset 2px 2px 2px rgba(0,0,0,.1);box-shadow:inset 2px 2px 2px rgba(0,0,0,.1);-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;overflow:hidden;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}textarea#jp-carousel-comment-form-comment-field::-webkit-input-placeholder{color:#555}#jp-carousel-loading-overlay{display:none;position:fixed;top:0;bottom:0;left:0;right:0}#jp-carousel-loading-wrapper{display:flex;align-items:center;justify-content:center;height:100vh;width:100vw}#jp-carousel-library-loading,#jp-carousel-library-loading:after{border-radius:50%;width:40px;height:40px}#jp-carousel-library-loading{float:left;margin:22px 0 0 10px;font-size:10px;position:relative;text-indent:-9999em;border-top:8px solid rgba(255,255,255,.2);border-right:8px solid rgba(255,255,255,.2);border-bottom:8px solid rgba(255,255,255,.2);border-left:8px solid var(--jp-carousel-primary-color);-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0)}#jp-carousel-comment-form-spinner,#jp-carousel-comment-form-spinner:after{border-radius:50%;width:20px;height:20px}#jp-carousel-comment-form-spinner{display:none;float:left;margin:22px 0 0 10px;font-size:10px;position:absolute;text-indent:-9999em;border-top:4px solid rgba(255,255,255,.2);border-right:4px solid rgba(255,255,255,.2);border-bottom:4px solid rgba(255,255,255,.2);border-left:4px solid var(--jp-carousel-primary-color);-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);margin:0 auto;top:calc(50% - 15px);left:0;bottom:0;right:0}.jp-carousel-info-content-wrapper{max-width:800px;margin:auto}#jp-carousel-comment-form-submit-and-info-wrapper{display:none;overflow:hidden;width:100%}#jp-carousel-comment-form-commenting-as input{background:var(--jp-carousel-bg-color);border:1px solid var(--jp-carousel-border-color);color:var(--jp-carousel-primary-subtle-color);font:16px/1.4"Helvetica Neue",sans-serif!important;padding:10px;float:left;-webkit-box-shadow:inset 2px 2px 2px rgba(0,0,0,.2);box-shadow:inset 2px 2px 2px rgba(0,0,0,.2);-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;width:285px}#jp-carousel-comment-form-commenting-as fieldset{float:left;border:none;margin:20px 0 0;padding:0;clear:both}#jp-carousel-comment-form-commenting-as label{font:400 13px/1.7"Helvetica Neue",sans-serif!important;margin:0 20px 3px 0;float:left;width:100px}#jp-carousel-comment-form-button-submit{margi... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:29.163" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'automatenow.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:29.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:29.044" endtime="20250106 09:59:29.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:29.166" level="INFO">Status Code for https://automatenow.io/http-response-codes-in-api-testing/: 200</msg>
<status status="PASS" starttime="20250106 09:59:29.165" endtime="20250106 09:59:29.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:29.166" endtime="20250106 09:59:29.167"/>
</kw>
<status status="PASS" starttime="20250106 09:59:29.034" endtime="20250106 09:59:29.167"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.192")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:29.175" level="INFO">${url} = https://linktr.ee/automateNow</msg>
<status status="PASS" starttime="20250106 09:59:29.167" endtime="20250106 09:59:29.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:29.176" level="INFO">Checking URL: https://linktr.ee/automateNow</msg>
<status status="PASS" starttime="20250106 09:59:29.176" endtime="20250106 09:59:29.177"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:29.177" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:30.132" level="INFO">GET Request : url=https://linktr.ee/automateNow 
 path_url=/automateNow 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:30.133" level="INFO">GET Response : url=https://linktr.ee/automateNow 
 status=406, reason=Not Acceptable 
 headers={'Connection': 'keep-alive', 'cache-control': 'private, no-store', 'accept-ranges': 'bytes', 'via': '1.1 varnish, 1.1 varnish, 1.1 varnish', 'Strict-Transport-Security': 'max-age=300', 'Date': 'Mon, 06 Jan 2025 02:59:29 GMT', 'X-Served-By': 'cache-tyo11942-TYO, cache-tyo11946-TYO, cache-tyo11946-TYO', 'X-Cache': 'MISS, MISS, MISS, MISS', 'X-Cache-Hits': '0, 0, 0, 0', 'X-Timer': 'S1736132369.596078,VS0,VE459', 'city': 'tan chanh hiep', 'continent-code': 'AS', 'country-code': 'VN', 'Set-Cookie': 'countryCode=VN; Path=/; Secure; Domain=linktr.ee; SameSite=Strict, ipOverride=103.199.6.141; Path=/; Secure; Domain=linktr.ee; SameSite=Strict, city=tan chanh hiep; Path=/; Secure; Domain=linktr.ee; SameSite=Strict, region=SG; Path=/; Secure; Domain=linktr.ee; SameSite=Strict', 'X-LT-Cache': 'E-MISS ~&gt; SP-MISS ~&gt; P-MISS', 'Referrer-Policy': 'origin-when-cross-origin', 'client-geo-region': 'region-other', 'transfer-encoding': 'chunked'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:30.133" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'linktr.ee'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:30.134" level="INFO">${response} = &lt;Response [406]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:29.177" endtime="20250106 09:59:30.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.135" level="INFO">Status Code for https://linktr.ee/automateNow: 406</msg>
<status status="PASS" starttime="20250106 09:59:30.134" endtime="20250106 09:59:30.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Append To List" library="Collections">
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 09:59:30.136" endtime="20250106 09:59:30.138"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.135" endtime="20250106 09:59:30.138"/>
</kw>
<status status="PASS" starttime="20250106 09:59:29.167" endtime="20250106 09:59:30.138"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.195")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:30.146" level="INFO">${url} = https://automatenow.io/about/</msg>
<status status="PASS" starttime="20250106 09:59:30.138" endtime="20250106 09:59:30.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.147" level="INFO">Checking URL: https://automatenow.io/about/</msg>
<status status="PASS" starttime="20250106 09:59:30.146" endtime="20250106 09:59:30.147"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:30.147" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:30.348" level="INFO">GET Request : url=https://automatenow.io/about/ 
 path_url=/about/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:30.348" level="INFO">GET Response : url=https://automatenow.io/about/ 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:29 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all{.wp-block-button__link{align-content:center;box-sizing:border-box;display:inline-block;height:100%;text-align:center;width:100%;word-break:break-word}:where(.wp-block-button__link){border-radius:9999px;box-shadow:none;padding:calc(.667em + 2px) calc(1.333em + 2px);text-decoration:none}.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}:where(.wp-block-group.wp-block-group-is-layout-constrained){position:relative}.wp-block-image img{box-sizing:border-box;height:auto;max-width:100%;vertical-align:bottom}.wp-block-image.aligncenter{text-align:center}.wp-block-image.aligncenter{display:table}ul{box-sizing:border-box}:where(p.has-text-color:not(.has-link-color)) a{color:inherit}.wp-block-spacer{clear:both}.entry-content{counter-reset:footnotes}.aligncenter{clear:both}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}html :where([style*=border-width]){border-style:solid}html :where(img[class*=wp-image-]){height:auto;max-width:100%}:where(figure){margin:0 0 1em}.swiper-container,.swiper-wrapper{display:flex;height:100%;margin:0;padding:0;width:100%}.swiper-container{overflow:hidden}.wp-block-coblocks-media-card__media{grid-area:media-text-media;-ms-grid-column:1;-ms-grid-row:1;margin:0;position:relative}.wp-block-coblocks-media-card__content{grid-area:media-text-content;-ms-grid-column:2;-ms-grid-row:1;margin-left:-50%;position:relative;word-break:break-word;z-index:1}@media (max-width:599px) and (min-width:600px){.wp-block-coblocks-media-card.is-stacked-on-mobile .wp-block-coblocks-media-card__content{grid-area:media-text-content;-ms-grid-column:2;-ms-grid-row:1;margin-left:-100px}}.pt-1{padding-top:.5em}:root{--colorLight:#fff;--colorLightRGB:255,255,255;--colorFont:#555;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--colorMain2:#8a8dff;--colorMain3:#e678f5;--colorMain4:#7892f5;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}hr{box-sizing:content-box;overflow:visible}a{background-color:rgba(0,0,0,0)}strong{font-weight:700}img{border-style:none}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=submit],button{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input,textarea{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}iframe{max-width:100%}figure,img{margin:0;max-width:100%;height:auto}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h1,h2,h3{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h1:first-child:not([class*=mt-]),h2:first-child:not([class*=mt-]),h3:first-child:not([class*=mt-]){margin-top:0}h1{font-size:2em}h2{font-size:1.5em}h3{font-size:1.3em}p{margin-top:0;margin-bottom:1.5em}p:last-child:after{content:"";display:block;clear:both}hr{border:0;height:1px;margin:0;background-color:var(--colorBorder)}fieldset{border-color:var(--colorBorder);border-width:1px;border-style:solid;padding:.5em 1.25em 1.25em}button,input,label,textarea{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=email],input[type=search],input[type=text],textarea{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}textarea{padding-top:.25em;padding-bottom:.25em}input[type=search]{-webkit-appearance:textfield}.wp-block-button__link,[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-big .wp-block-button__link,.btns-big [type=submit]{padding:20px 35px 20px}.btns-bold .wp-block-button__link,.btns-bold [type=submit]{font-weight:700}.btns-round .wp-block-button__link,.btns-round [type=submit]{border-radius:40px}.btns-colormain .wp-block-button__link,.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-outline .wp-block-button__link,.btns-outline [type=submit]{background-color:rgba(0,0,0,0);color:var(--colorDark);border-color:var(--colorDark)}.btns-colormain.btns-outline .wp-block-button__link,.btns-colormain.btns-outline [type=submit]{color:var(--colorMain);border-color:var(--colorMain)}.btns-round input,.btns-round textarea{border-radius:20px}textarea{vertical-align:top;overflow:auto}.l{background-color:var(--colorLight)}.i{background-color:var(--colorDark);color:rgba(var(--colorLightRGB),.8)}.i ::-webkit-input-placeholder{color:rgba(var(--colorLightRGB),.8)}.i :-ms-input-placeholder{color:rgba(var(--colorLightRGB),.8)}.i ::placeholder{color:rgba(var(--colorLightRGB),.8)}.i a{color:var(--colorLight)}.i.c{background-color:var(--colorMain);color:rgba(255,255,255,.8)}.i.c ::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.i.c :-ms-input-placeholder{color:rgba(255,255,255,.8)}.i.c ::placeholder{color:rgba(255,255,255,.8)}.i.c a:not([class]){color:#fff}.i.c.gradient{background-image:linear-gradient(0deg,var(--colorMain),var(--colorMain2))}.i.c.gradient.horizontal{background-image:linear-gradient(90deg,var(--colorMain),var(--colorMain2))}.i .section-hr{background-color:rgba(255,255,255,.15)}.bordered{border:1px solid;border-color:var(--colorBorder)}.shadow{box-shadow:0 0 20px 0 rgba(100,100,100,.15)}.bordered,.shadow{padding:1.5em}.rounded{border-radius:10px;overflow:hidden}.fs-14{font-size:14px}.fs-16{font-size:16px}.fs-20{font-size:20px}.text-center{text-align:center}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-960 .container{max-width:960px}.container-960&gt;.container{max-width:960px}.container-fluid{position:relative;padding-left:15px;padding-right:15px}.container-fluid:after,.container-fluid:before{content:"";display:block;clear:both}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.cols-1{display:block}.cols-1&gt;*,.cols-1&gt;.grid-item{width:100%}.layout-gap-15 .grid-item{padding-right:7px;padding-left:8px;padding-bottom:15px}.grid-item{width:100%}@media screen and (min-width:576px){.grid-item{width:50%}.layout-cols-1 .grid-item{width:100%}}.header-wrap,.header&gt;div.container-fluid{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container-fluid{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container-fluid{padding:0}}.header&gt;div.container-fluid{padding:0}.header #nav_toggle{display:none}.header-search{position:relative}.header-search #search_toggle{border:none;background:rgba(0,0,0,0);padding:.25em .85em .2em;line-height:1}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo .logo-text{margin:0 1em}.logo .logo-text span{margin-top:5px;margin-bottom:5px}.logo:not(.logo-between) .logo-text-primary{font-size:1.2em;font-weight:700}.logo.logo-left{text-align:left}.logo.logo-left span span{display:block}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}.section-hr{box-sizing:border-box;position:absolute;margin:0 auto;padding:0;left:0;right:0;bottom:0;background-color:var(--colorBorder);width:100%}.section-hr:first-child{bottom:auto;top:0}#box{display:flex;flex-direction:column;min-height:100vh}.title{position:relative}.title h1{margin-top:0;margin-bottom:0}@media (min-width:768px){.title.title-inline&gt;[class*=container]{display:flex;flex-wrap:wrap;align-items:center}}#main{position:relative;flex-grow:1;overflow:hidden}.footer{position:relative;overflow:hidden}.footer-widgets&gt;*{margin-bottom:1em}.copyright{position:relative}.copyright .copyright-text{margin:.5em 0}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:30.349" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'automatenow.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:30.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:30.147" endtime="20250106 09:59:30.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.351" level="INFO">Status Code for https://automatenow.io/about/: 200</msg>
<status status="PASS" starttime="20250106 09:59:30.350" endtime="20250106 09:59:30.351"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.351" endtime="20250106 09:59:30.352"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.138" endtime="20250106 09:59:30.352"/>
</iter>
<iter>
<var name="${link}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.DA6B450006EE4ABDE62C1E669D87CE74.d.8CE7D9EB7F40FCB11B57812CF95ADA20.e.220")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${link}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:30.358" level="INFO">${url} = https://practice-automation.com/broken-links/#body</msg>
<status status="PASS" starttime="20250106 09:59:30.352" endtime="20250106 09:59:30.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking URL: ${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.359" level="INFO">Checking URL: https://practice-automation.com/broken-links/#body</msg>
<status status="PASS" starttime="20250106 09:59:30.359" endtime="20250106 09:59:30.359"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${url}</arg>
<arg>allow_redirects=True</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20250106 09:59:30.359" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:30.450" level="INFO">GET Request : url=https://practice-automation.com/broken-links/#body 
 path_url=/broken-links/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Cookie': '__wpdm_client=0f3b71071cefcebf617f0f5ccd654d69'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:30.450" level="INFO">GET Response : url=https://practice-automation.com/broken-links/#body 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 06 Jan 2025 02:59:29 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=31536000', 'Vary': 'Accept-Encoding, accept, content-type, cookie', 'X-hacker': 'Want root?  Visit join.a8c.com and mention this header.', 'Host-Header': 'WordPress.com', 'Link': '&lt;https://practice-automation.com/wp-json/&gt;; rel="https://api.w.org/", &lt;https://practice-automation.com/wp-json/wp/v2/pages/1267&gt;; rel="alternate"; title="JSON"; type="application/json", &lt;https://wp.me/PeTdAm-kr&gt;; rel=shortlink', 'Content-Encoding': 'gzip', 'X-ac': '2.hkg _atomic_bur HIT', 'Alt-Svc': 'h3=":443"; ma=86400'} 
 body=&lt;!doctype html&gt;
&lt;html lang="en-US" class="no-js-disabled"&gt;
&lt;head&gt;
	&lt;meta charset="UTF-8"/&gt;
	&lt;meta name="viewport" content="width=device-width, initial-scale=1"/&gt;
	&lt;link rel="profile" href="https://gmpg.org/xfn/11"/&gt;
	&lt;style id="jetpack-boost-critical-css"&gt;@media all{.wp-block-buttons{box-sizing:border-box}.wp-block-columns{align-items:normal!important;box-sizing:border-box;display:flex;flex-wrap:wrap!important}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap!important}}@media (max-width:781px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:100%!important}}@media (min-width:782px){.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column{flex-basis:0;flex-grow:1}.wp-block-columns:not(.is-not-stacked-on-mobile)&gt;.wp-block-column[style*=flex-basis]{flex-grow:0}}:where(.wp-block-columns){margin-bottom:1.75em}.wp-block-column{flex-grow:1;min-width:0;overflow-wrap:break-word;word-break:break-word}.wp-block-group{box-sizing:border-box}.wp-block-image img{box-sizing:border-box;height:auto;max-width:100%;vertical-align:bottom;width:-moz-fit-content;width:fit-content}.wp-block-image.aligncenter{text-align:center}.wp-block-image.aligncenter{display:table}ul{box-sizing:border-box}.wp-block-spacer{clear:both}.wp-block-table{overflow-x:auto}.wp-block-table table{border-collapse:collapse;width:100%}.wp-block-table thead{border-bottom:3px solid}.wp-block-table td,.wp-block-table th{border:1px solid;padding:.5em}.wp-block-table .has-fixed-layout{table-layout:fixed;width:100%}.wp-block-table .has-fixed-layout td,.wp-block-table .has-fixed-layout th{word-break:break-word}.entry-content{counter-reset:footnotes}.has-text-align-left{text-align:left}.aligncenter{clear:both}.screen-reader-text{word-wrap:normal!important;border:0;clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}html :where(img[class*=wp-image-]){height:auto;max-width:100%}:where(figure){margin:0 0 1em}:root{--colorLight:#fff;--colorFont:#555;--colorBackground:#f7f7f7;--colorBorder:#e1e1e1;--colorDark:#444;--colorDarkMuted:#222;--colorMain:#a17de8;--btn-fs:.92em;--mobileNavWidth:290px;--mobileNavPX:20px}.svg-icon{line-height:.8}.svg-icon svg{max-width:20px;max-height:20px;fill:var(--colorDarkMuted)}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}a{background-color:rgba(0,0,0,0)}b,strong{font-weight:700}code{font-family:monospace,monospace;font-size:1em}img{border-style:none}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}details{display:block}summary{display:list-item}*{box-sizing:border-box}html{scroll-behavior:smooth;overflow-x:hidden;width:100%}body{background-color:var(--colorLight);text-rendering:optimizeLegibility;word-break:break-word;width:100%;position:relative;font-weight:300}body,button,input,textarea{color:var(--colorFont);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;font-size:16px;font-size:1rem;line-height:1.74;letter-spacing:.02em}iframe{max-width:100%}figure,img{margin:0;max-width:100%;height:auto}table{width:100%;border-collapse:collapse}td,th{padding:.5em 1em;word-break:initial}th{text-align:inherit;background-color:var(--colorBackground)}code{padding:0 .5rem;font-size:.85rem;display:inline-block;background-color:var(--colorBackground)}a{outline:0;text-decoration:none;color:var(--colorDarkMuted)}ul{padding-left:20px}nav&gt;ul{margin-top:0}h1,h2,h3{color:var(--colorDarkMuted);line-height:1.34;margin-top:2em;margin-bottom:1em;font-weight:400}h1:first-child:not([class*=mt-]),h2:first-child:not([class*=mt-]),h3:first-child:not([class*=mt-]){margin-top:0}h1{font-size:2em}h2{font-size:1.5em}h3{font-size:1.3em}p{margin-top:0;margin-bottom:1.5em}p:last-child:after{content:"";display:block;clear:both}fieldset{border-color:var(--colorBorder);border-width:1px;border-style:solid;padding:.5em 1.25em 1.25em}button,input,label,textarea{font-size:inherit;margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0}label{font-size:.92em}input[type=email],input[type=search],input[type=text],textarea{padding:.15em .75em;min-height:40px;border:1px solid;border-color:var(--colorBorder);background-color:var(--colorLight);box-shadow:none}textarea{padding-top:.25em;padding-bottom:.25em}input[type=search]{-webkit-appearance:textfield}[type=button],[type=submit]{overflow:hidden;width:auto;position:relative;border:3px solid;border-color:transparent;display:inline-block;line-height:1;font-size:var(--btn-fs);font-weight:400;text-align:center;padding:15px 23px 15px;border-radius:1px;background-color:var(--colorDark);color:var(--colorLight)}.btns-bold [type=button],.btns-bold [type=submit]{font-weight:700}.btns-rounded [type=button],.btns-rounded [type=submit]{border-radius:6px}.btns-colormain [type=button],.btns-colormain [type=submit]{background-color:var(--colorMain);color:#fff}.btns-rounded input,.btns-rounded textarea{border-radius:6px}textarea{vertical-align:top;overflow:auto}.l{background-color:var(--colorLight)}.m{background-color:var(--colorBackground)}.fs-14{font-size:14px}.text-center{text-align:center}.container{position:relative;max-width:1400px;margin:auto}.container:after,.container:before{content:"";display:block;clear:both}.container-1400 .container{max-width:1400px}.container-1400&gt;.container{max-width:1400px}@media (max-width:1430px){.container{padding-left:15px;padding-right:15px}}.grid-wrapper{display:flex;flex-wrap:wrap}.layout-gap-30 .grid-wrapper{margin-left:-15px;margin-right:-15px}.layout-gap-30 .grid-item{padding-right:15px;padding-left:15px;padding-bottom:30px}.grid-item{width:100%}@media screen and (min-width:576px){.grid-item{width:50%}.layout-cols-1 .grid-item{width:100%}}.header-wrap,.header&gt;div.container{min-height:60px}.header{top:0;left:0;right:0;position:relative;z-index:10}.header&gt;div.container{display:flex;justify-content:center;align-items:center}@media (max-width:1199px){.header&gt;div.container{padding:0}}.header #nav_toggle{display:none}#search_dropdown{z-index:-1;opacity:0;position:fixed;top:0;right:0;left:0;padding:1.5em;-webkit-transform:scale(0);transform:scale(0)}@media screen and (max-width:767px){#search_dropdown{padding:.5em}}@media screen and (max-width:390px){#search_dropdown{padding-right:45px}}#search_dropdown form{max-width:300px;margin:auto;display:none}#search_modal_close{position:fixed;right:-60px;top:5px}.header a.logo:first-child{margin-right:1em}.logo{display:flex;align-items:center;line-height:1;white-space:nowrap}.logo.px{padding-left:1.5em;padding-right:1.5em}.logo.logo-left{text-align:left}.logo img{max-height:100px;width:auto;display:inline}#logo-align{margin-right:auto}#box{display:flex;flex-direction:column;min-height:100vh}.title{position:relative}.title h1{margin-top:0;margin-bottom:0}.title .breadcrumbs{margin:.5em 0}#main{position:relative;flex-grow:1;overflow:hidden}.footer{position:relative;overflow:hidden}.footer-widgets&gt;*{margin-bottom:1em}.copyright{position:relative}.copyright .copyright-text{margin:.5em 0}#to-top{position:fixed;right:0;bottom:-60px;background-color:var(--colorLight);box-shadow:0 0 20px 0 rgba(100,100,100,.15);width:44px;height:44px;line-height:44px;font-size:1rem;text-align:center;z-index:2}#to-top:before{content:"";display:inline-block;position:relative;top:0;width:7px;height:7px;border-style:solid;border-width:1px 1px 0 0;border-color:var(--colorDarkMuted);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#overlay{position:fixed;top:0;left:0;height:100vh;width:100vw;z-index:20;opacity:0;visibility:hidden;background-color:rgba(0,0,0,.001)}.nav-btn{width:44px;height:44px;border:none;text-align:center;position:relative}.nav-btn[class]{padding:0}.nav-btn[id][id][id]{background:rgba(0,0,0,0)}.nav-btn span,.nav-btn span:after,.nav-btn span:before{width:18px;height:2px;margin:auto;left:0;display:block;position:relative;content:"";background:var(--colorDarkMuted)}.nav-btn.active span{background:rgba(0,0,0,0)!important}.nav-btn span:before{bottom:5px;opacity:1}.nav-btn span:after{top:3px}.nav-btn.active span:before{top:1px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.nav-btn.active span:after{top:-1px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}[class*=container]&gt;.nav-btn:last-child{margin:0 .5em}@media screen and (min-width:1200px){.top-nav{position:relative;flex:1 1;display:flex;align-items:center}.menu-right .top-nav{justify-content:flex-end}.top-nav .nav-btn{display:none}.top-menu&gt;li:first-child{margin-left:0}.top-menu{display:flex;list-style:none;padding:0;margin:0;flex-wrap:wrap;line-height:1.1;align-items:center}.menu-right .top-menu{justify-content:flex-end}.top-menu li{position:relative}.top-menu&gt;li{margin:0 .75em;overflow:hidden}.top-menu&gt;li&gt;a{display:inline-block;padding:.5em 0;position:relative}.menu-bold .top-menu&gt;li&gt;a{font-weight:700}.top-menu&gt;li&gt;a:before{position:absolute;height:3px;content:"";background-color:var(--colorMain);width:0;bottom:0;left:0}}@media screen and (max-width:1199px){.top-menu{display:none}.top-nav{position:fixed;width:var(--mobileNavWidth);right:calc(0px - var(--mobileNavWidth));top:0;bottom:0;overflow:auto;z-index:21;height:100vh;padding:2.5em var(--mobileNavPX);background:var(--colorLight)}.top-nav ul{margin:0;padding:0;list-style:none}.top-nav li{padding:.2em 0}.top-nav li:before{content:"";display:inline-block;position:relative;top:-.1em;width:5px;height:5px;border-style:solid;border-width:2px 2px 0 0;border-color:var(--colorBorder);-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-right:.8em}.top-nav .top-menu&gt;li{padding:.4em 0}.top-nav .top-menu&gt;li:before{display:none}.top-nav .top-menu a:not([... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:30.451" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'practice-automation.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:30.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:30.359" endtime="20250106 09:59:30.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status Code for ${url}: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.453" level="INFO">Status Code for https://practice-automation.com/broken-links/#body: 200</msg>
<status status="PASS" starttime="20250106 09:59:30.452" endtime="20250106 09:59:30.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>${BAD_LINKS}</arg>
<arg>${url} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.454" endtime="20250106 09:59:30.454"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.352" endtime="20250106 09:59:30.454"/>
</iter>
<status status="PASS" starttime="20250106 09:59:22.471" endtime="20250106 09:59:30.454"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${BAD_LINKS}</arg>
<arg>Log</arg>
<arg>Bad Links Found: ${BAD_LINKS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>Bad Links Found: ${BAD_LINKS}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:30.456" level="INFO">Bad Links Found: ['https://practice-automation.com/broken-links/missing-page.html (Status: 404)', 'https://linktr.ee/automateNow (Status: 406)']</msg>
<status status="PASS" starttime="20250106 09:59:30.455" endtime="20250106 09:59:30.456"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.455" endtime="20250106 09:59:30.456"/>
</kw>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20250106 09:59:30.456" endtime="20250106 09:59:30.530"/>
</kw>
<doc>This test case checks all the links on the page and logs any broken links.</doc>
<status status="PASS" starttime="20250106 09:59:19.403" endtime="20250106 09:59:30.530"/>
</test>
<test id="s1-t7" name="Broken_Images" line="136">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:30.533" endtime="20250106 09:59:30.534"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:30.536" endtime="20250106 09:59:30.542"/>
</kw>
<msg timestamp="20250106 09:59:30.542" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:30.536" endtime="20250106 09:59:30.542"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:30.545" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:30.542" endtime="20250106 09:59:30.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.545" endtime="20250106 09:59:30.546"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.535" endtime="20250106 09:59:30.546"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.533" endtime="20250106 09:59:30.546"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks all images on the page to identify any broken images (non-200 status codes) and logs the broken images.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:30.547" endtime="20250106 09:59:30.548"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${original_tab[0]}</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250106 09:59:30.549" endtime="20250106 09:59:30.562"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>7</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:30.564" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:30.564" endtime="20250106 09:59:30.564"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:30.565" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:30.565" endtime="20250106 09:59:30.566"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:30.566" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:30.566" endtime="20250106 09:59:30.567"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.566" endtime="20250106 09:59:30.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.567" endtime="20250106 09:59:30.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.567" endtime="20250106 09:59:30.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.568" endtime="20250106 09:59:30.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.568" endtime="20250106 09:59:30.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.568" endtime="20250106 09:59:30.570"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.571" endtime="20250106 09:59:30.571"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.565" endtime="20250106 09:59:30.572"/>
</kw>
<msg timestamp="20250106 09:59:30.572" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:30.564" endtime="20250106 09:59:30.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:30.572" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:30.572" endtime="20250106 09:59:30.573"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.564" endtime="20250106 09:59:30.573"/>
</kw>
<msg timestamp="20250106 09:59:30.573" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:30.563" endtime="20250106 09:59:30.573"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:30.598" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:30.573" endtime="20250106 09:59:30.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.598" endtime="20250106 09:59:30.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.599" endtime="20250106 09:59:30.599"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:30.600" level="INFO">${index} = 6</msg>
<status status="PASS" starttime="20250106 09:59:30.600" endtime="20250106 09:59:30.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:30.604" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:30.602" endtime="20250106 09:59:30.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.605" endtime="20250106 09:59:30.605"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:30.610" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:30.608" endtime="20250106 09:59:30.611"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.607" endtime="20250106 09:59:30.611"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.611" endtime="20250106 09:59:30.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.612" endtime="20250106 09:59:30.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.613" endtime="20250106 09:59:30.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.613" endtime="20250106 09:59:30.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:30.614" endtime="20250106 09:59:30.614"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.601" endtime="20250106 09:59:30.614"/>
</kw>
<msg timestamp="20250106 09:59:30.614" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:30.601" endtime="20250106 09:59:30.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:30.615" level="INFO">${exp_index} = Broken Links - Images</msg>
<status status="PASS" starttime="20250106 09:59:30.615" endtime="20250106 09:59:30.615"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.600" endtime="20250106 09:59:30.616"/>
</kw>
<msg timestamp="20250106 09:59:30.616" level="INFO">${menu_item} = Broken Links - Images</msg>
<status status="PASS" starttime="20250106 09:59:30.599" endtime="20250106 09:59:30.616"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:30.617" endtime="20250106 09:59:30.975"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:30.976" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:30.975" endtime="20250106 09:59:30.983"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.616" endtime="20250106 09:59:30.984"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:30.984" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Broken Links - Images']'.</msg>
<status status="PASS" starttime="20250106 09:59:30.984" endtime="20250106 09:59:31.082"/>
</kw>
<status status="PASS" starttime="20250106 09:59:30.563" endtime="20250106 09:59:31.082"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${images}</var>
<arg>xpath=//img[@src]</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250106 09:59:31.108" level="INFO">${images} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.57")&gt;, &lt;selenium.webdriv...</msg>
<status status="PASS" starttime="20250106 09:59:31.083" endtime="20250106 09:59:31.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Found ${images} images on the page</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:31.110" level="INFO">Found [&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.57")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.203")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.2151")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.2155")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.443")&gt;] images on the page</msg>
<status status="PASS" starttime="20250106 09:59:31.109" endtime="20250106 09:59:31.110"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${BASE_URL}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20250106 09:59:31.119" level="INFO">${BASE_URL} = https://demoqa.com/broken</msg>
<status status="PASS" starttime="20250106 09:59:31.111" endtime="20250106 09:59:31.119"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250106 09:59:31.121" level="INFO">Creating Session using : alias=link_session, url=https://demoqa.com/broken, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250106 09:59:31.120" endtime="20250106 09:59:31.123"/>
</kw>
<for flavor="IN">
<var>${img}</var>
<value>@{images}</value>
<iter>
<var name="${img}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.57")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${src}</var>
<arg>${img}</arg>
<arg>src</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:31.160" level="INFO">${src} = https://ad.plus/adplus-advertising.svg</msg>
<status status="PASS" starttime="20250106 09:59:31.125" endtime="20250106 09:59:31.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking Image URL: ${src}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:31.161" level="INFO">Checking Image URL: https://ad.plus/adplus-advertising.svg</msg>
<status status="PASS" starttime="20250106 09:59:31.161" endtime="20250106 09:59:31.161"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${src}</arg>
<arg>allow_redirects=True</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250106 09:59:31.379" level="INFO">GET Request : url=https://ad.plus/adplus-advertising.svg 
 path_url=/adplus-advertising.svg 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:31.379" level="INFO">GET Response : url=https://ad.plus/adplus-advertising.svg 
 status=200, reason=OK 
 headers={'Date': 'Mon, 06 Jan 2025 02:59:30 GMT', 'Content-Type': 'image/svg+xml', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Last-Modified': 'Sat, 04 Apr 2020 20:49:12 GMT', 'ETag': 'W/"2df-5a27d2a9698fb"', 'Cache-Control': 'max-age=31536000', 'CF-Cache-Status': 'HIT', 'Age': '5016', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=TDOQjNsYl9tsCV1%2FyuNtLX3ZN%2BakFyctm00JkCjHoQgujCVRMhr2xe5aH9QyEGd9YO%2Fpw8kZzthubGuwcMCxMHmdGFIfNOC0LCKBjtsAOtBrty9qmu%2FiLWZ1"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '8fd873d29d2a04e1-HKG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=28441&amp;min_rtt=28083&amp;rtt_var=11248&amp;sent=4&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2829&amp;recv_bytes=779&amp;delivery_rate=94336&amp;cwnd=210&amp;unsent_bytes=0&amp;cid=82498df4a0ba77f1&amp;ts=55&amp;x=0"'} 
 body=&lt;svg width="18" height="15" xmlns="http://www.w3.org/2000/svg"&gt;
 &lt;!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ --&gt;
 &lt;g&gt;
  &lt;title&gt;background&lt;/title&gt;
  &lt;rect fill="none" id="canvas_background" height="17" width="20" y="-1" x="-1"/&gt;
 &lt;/g&gt;
 &lt;g&gt;
  &lt;title&gt;Layer 1&lt;/title&gt;
  &lt;text stroke="null" transform="rotate(-89.2753677368164 8.658015251159668,8.985013961791992) matrix(0.8730572462081908,0,0,1.9163300998305393,1.5288365878943448,6.8808633026358805) " xml:space="preserve" text-anchor="start" font-family="'Palatino Linotype', 'Book Antiqua', Palatino, serif" font-size="14" id="svg_3" y="4.777807" x="3.959624" fill-opacity="null" stroke-opacity="null" stroke-width="0" fill="#7f7f7f"&gt;&amp;lt;&lt;/text&gt;
 &lt;/g&gt;
&lt;/svg&gt; 
 </msg>
<msg timestamp="20250106 09:59:31.380" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ad.plus'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:31.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:31.161" endtime="20250106 09:59:31.380"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Status Code for ${src}: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:31.381" endtime="20250106 09:59:31.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>@{BROKEN_IMAGES}</arg>
<arg>${src} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:31.382" endtime="20250106 09:59:31.383"/>
</kw>
<status status="PASS" starttime="20250106 09:59:31.125" endtime="20250106 09:59:31.383"/>
</iter>
<iter>
<var name="${img}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.203")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${src}</var>
<arg>${img}</arg>
<arg>src</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:31.392" level="INFO">${src} = https://demoqa.com/images/Toolsqa.jpg</msg>
<status status="PASS" starttime="20250106 09:59:31.383" endtime="20250106 09:59:31.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking Image URL: ${src}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:31.393" level="INFO">Checking Image URL: https://demoqa.com/images/Toolsqa.jpg</msg>
<status status="PASS" starttime="20250106 09:59:31.393" endtime="20250106 09:59:31.393"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${src}</arg>
<arg>allow_redirects=True</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250106 09:59:32.181" level="INFO">GET Request : url=https://demoqa.com/images/Toolsqa.jpg 
 path_url=/images/Toolsqa.jpg 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:32.216" level="INFO">GET Response : url=https://demoqa.com/images/Toolsqa.jpg 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Mon, 06 Jan 2025 02:59:31 GMT', 'Content-Type': 'image/jpeg', 'Content-Length': '7232', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Accept-Ranges': 'bytes', 'Cache-Control': 'public, max-age=0', 'Last-Modified': 'Sun, 17 Mar 2024 06:26:08 GMT', 'ETag': 'W/"1c40-18e4b16cb25"'} 
 body=RIFF8WEBPVP8 ,�U�*[d%7n�����ß�O�_$\��?u;O������-ȿ�o�~+�i�������������0���y���7�7r��?Q?�?�^�����%�w�������^��]e_����?�}�|]���������C��|���e��G�������g����[�|���_�������1�I�������?�M�h�����O.P�w�������?���.������~@}�O�w���̿�2�������_�������o�_�_�}����_������_���^��+�7���x�?k=��W~��&lt;i�Li�L&amp;X&amp;�l/zT�G;����Xf`8�\�$�0�3�Q��p#k9⚘IEg����	;&amp;H����͑��Cd�����@y�Ⱦ�:Mmܥ�������Z���&gt;,o��lth��C`rg�W]]��m�O��n���/Cz���xT�S�����{�Zc���OTtϬe��� ���V�1�T�oER�1��A8��_|C�I�5Q��=��v�*��J'��o��dGb4Ʉ�~j�^܅�.��x��P�*mZ#����פ!�"�6U���Ӧ�Dm9;���]w��	�Ư{�Y��\!��nǓ��]R�e��9��'�6�tt�K����"�6��6��6��5`�����%���!� sl&lt;nPs�'m�`gV�.,6+�?�������!�g�1�z�f� �0�9�15i���Nޯ� GVMx��u��KZ�� ����[�L�{V;h�=�Qޝ�jn�?�v]�U5��di,Mh(��%�3�b�a`�z�`�! ���6w4ܝA^�Pt�u�+��C;���������=9ʱw���7jZ&amp;�A3�E��a����v@W@`h�5��L~Bb�WL�&lt;��&gt;Y.|pD�&amp;�}�q\�����^�ya�Jl#mYǠ�����rss��ޠ�J�o�p�Sz��	z�:1s:��T�	�C�	�γt��{A���?��)��Ŕm��"m+���L����o؂
�)��*Ѥ�F��P/e���&gt;�Uз�#����f�L�E�+�[�Q�9&lt;&gt;�SN�
�h�ˌ#@&amp;嘖41�v5�}VMc��ރ���w��Q����q�\6]($ᩨs�����խ�w�1�6����.�}�"Ӿ&amp;K�?8�^��jD���f0,,(�u^�+b��-���&amp;{�@��f]~Z�h��7s��B��(�y`Vo˽��qaS� ��=?��a��'�|��T�iɑ�����ѩ�g��&amp;&lt;c����q�0���g���~����W8!��2l����y9Ma��S������^��*�&lt;;�$澫)���2w�@2h�X��-��O�DS���X�K��ū֚�^��/��.�H�&gt;�'��F�W=�w����Ї���-����=y��Π�'#�KGEL���1�``5)�+�;�&amp;ھ`UF�����R�O�k�Z|�'�6&amp;�\Ml��)
$�7�e���6/j�zG��`�����hFn�J'�B�-3�����wx���sH�f;s�F_ϭ���ة�԰���lk���=��vݓWwb[��Gai��a��#�j.��뀜'-F��AO������tT0m�����=�T	�W�CZ�5�����(%Qӭ���PȠ.�z������i`ybn�#�X�8X�*��Az�����aI��88�R�I#��o2\���^I�+Lk�j���-�ҞTuܔ��FS7Kv�*7pH̩-�Qa*�������P��%!?�Ҝ�����Bk�w�~��Q�oo_��a����Ђ拘�vcin�KF8�6���3[G�J��P�9G-���E#�ód`%|��} .�"?8%?��b�5�"�w�q��H�:l��$-z
ŉn2�x��}&amp;-?���~*?߉M�1���ሳ9n��M��&amp;v�T��H�������z�J��Z`6&lt;�#�)F���߭��FѨ/b��X�lX� �]&gt;������si�C�������*�PN��8g_'&lt;��i�[�b��A�_O����1Y�.�K�g:��"V��3x�KJP�{&gt;��2�:D� ����:��X���UE�⳻�RY�M��Q�&lt;
t�(���L���&gt;iFx��R��&lt;��||��Z�P'����S���u��\*�i�u��~��h|F�H���!����R�����O���q^�j�����f]S��E��t_�C�M;~e�z�9�A�,ɥ#`6i󷣨_k���z�u�s�3PB ��r�Q6�y�G�]�K���0�����]�@'��=��{���%��Ƞ�@�Nۇ����d�q���4�6Oh}��f��W3T67�;�^��R��M��7`���!�vw�S���z��Q	.�w��I�:�7���� ��O+?I1ʆh�N�A;�������9�yet����v�n���S�_y9X�Q�"�����n3���F��tɝ{�U�����c{|/GZI��6�`[���p��~�t���9qF��4踳�4)�x*.]G:Rb�#:���|$��L��5^�����sͮ��j�	4h}0�g�H,�Y��q����ܽ�P��G���ا�9�;DL#.�*�`A%��:ŻWd:=[E��Z$�ʊOU�3��ś&amp;�s��Ȼ���s+�(�!zNv��3up���22�x�^0T~��0
u��F~��5�e\z$a��4Ke�
&amp;�_Ů�����@xIb�G6�9�ʑ!�Ԗ#5&amp;'�Pk���6�y�"C��m�j-8x#�_k�mU�zb���=؁��ذwR�R�c8�VM@o^s#�
N�&amp;2�nI�;��)�M��["o�8���E�������$&lt;����D�ں�ꮆ���������:m���;�p!c�찏'�*���@F��c�5�~� 80�#��&gt;`]dk5��Ն�i*8��cC�Kg���2;5�/i2��eE
x�2���u�$]&lt;�\&lt;�����@��üh����0�K�N.�����gn�i���ʪ]"7�&lt;.v��}�
�MOL�gi�݉\��!-H�����^�xp4�Mt����k���$�m�L�7��'��d�&amp;����4��خ�;�b����M�$Q���Wֺ��"B��J�z�'T���ߕTD@&lt;�֦iH�4�L�F�ǣ�2���G3��hVGރ�"�;�H�k2:3i����i�G)W�~���߿�9�Wv��E+�b��bi8 !N�Mq[�&gt;!u(�������"��Jf�y'�}�]�]��%�V?�������RQ�ئ"�MuR%�K�y~GJ�����#����N�;�L`(G/�m�4�j�3r���(�Yx�34&lt;��U+r������Y�7]g-�E2���+l�����h1�t��0�gH f��2N���RoV�_@X��r��/К1~,tEfQ{��!�&lt;RnЏ�Qn2�e��O�0�����u����t�y�.�!��
,�ݺ |��b��OI�:2����o�I�z��P�hi�`��859GxD��o~��m�C�ܤ;L&gt;���Y���8���F#cQP&amp;�z�0�.DP!�ҍF��,}��R�#���m�6���P�$RS�[��!�0�9�*��^E̞���t����&lt;2q�4�y�����c�`T�.*E�6HQb���M�#c���)w���U�3��o#I�?�D��-S����"(��s����Hߞ�t�-ZX۝��c,l��䱳h��(�i��玌
7��%uҘ��B��O�����je�FirN���F�oNE��wK�PO9�6&lt;v�&amp;�W���`D0��zO4C�0H^��펬���Ȓ2爓�ֶC�O�ܬ�Py:hS�P�)�N��������g/�4#�fh�g��P1)`Xr�%��bG�#���6�	��x5*W��+����?��H�ȯnꩺ_*���
��|��Y�M���{mpt�a��u���Uo�QPq/R񏇸\���p&lt;h2*��x%�e�"�hVȌ�[В����
����wAD��C�B�)�+'��lо��O�d�l�5c	d�.F�0JB�|Yi��nk�e��H�qtX-�sd�Ê��6��&gt;m
49�2�6��2���齺�a�\!O�����u�y\p,'���M�&lt;&gt;���K��K�]q�m��&gt;���v�������,X��z=���w��!����	5h�Ɛ��T_��ㅎ�5�HQ�b2�r�ڔ�Q�J�!k�Ї=�nh=�|d�,j�=�0�m�2���yx�Ԍ{�b�UIE/��&gt;�1;�lڄ�������j��Y0��'� A-����=�]HP)��$x���!�
���Ƅ�q(��Tq�ǎ��a8��Z�����Z��*c�*x�6���)Rq��R_���9�W����1Z��	�gm��n0����������Y�@ČV�?u���o�q����DG� �\��2xj���}��:޵��9T���ȂԞ�z��qd{��	�#�U�OC+�b����4��$��GS�G��͏�:
�ɚ��˹G�]嘄��"¥����1�\�/��́�֒8�b�(h���[[�l�W7�h��1T*���:S8��'��́��z2��f�1�K%��
�@��������oEd����V$&gt;:�/�
̸"�J�+�]��TTQz#Y��ߎK�?�]���b��2E�)#NO@Rt�2���Ti�S\���0Ƨ��T��aAa�TnjZ�{t�П������������_�o�U+4�A������gD�Ԛg�w��jP�ܢ2��\Y2)ZM�� ){��,����Z�rc�����t�O�j߀��!:5L��x�CQioe��,�[��C\�Ԉ�&amp;W��c��άr�V��Aq���x\���1�\+	��]=�M�܀~��Q4�i
�����z�!R��MV��oB*z�����:�!Dx7�����/Y$}w]�G�skd�N�� ^c~�lt����\���k��$�|q��i�E���v�����y�+J����%ek��U|��c-���t���z�N���"�ӵ��G������?(�z�AHH�s�oQ�qR��G.��e�X4K�P/�盷Q�垤|�R]g~�h_&amp;�j�?\� r�M'�����~�)�ٶ���3�ƛ׍6�eXLn��&gt;� �?�W�D�O�e��|����ʼ�X'�y&lt;����C�_��Cz�:l���w��F��V��x������e5n��ü����r�����c%��0|�����ǑL}�g]!��`ڭ-�S��p˸������.� ��!*�����B/q��!�Ю?��ˆ�������_��I��J�{K������؍��k�M�Ś�6:�5ּ�`�v��/w�-zl&amp;&lt;�X'�d޼�m^f6���U���w$��=d��t��FҲ=�Zl��D��]o��(z����1+"av��Wӕ;*�8��1g��ۄ�rH�x/��;�N�L!:u�	{���
|+$a����2�$�A�@����Y^�i���\8���H88���Y�%��|?a���-F�=�p����|�;/��z7�q��_�(WC~t���`���7�N�x:�ϑ�a��z���twEb���kn_!b�=�N,�ؽ}�u����,a�#3���`A����6=quRZ$�	6��9:�S�����r�i;��ݘ�/�"S�A8�$l�2M%.�z9�&gt;����)�3�8�z��d�R�&lt;&lt;2�˦(H�cF��~d,��:�1���~n�ͻ�c�S�@9�����|�6����P�8������Z&amp;z#��ͤWk�Y\օ���2�S!�&amp;ۮ68�[1Q�~l�	6�q!K���FS�~,�d\�o(�L�D�s��n� rb��l��%����%�v��C�K�ƈi�����z�S�N��x���zԑ�����ϫ��J����o.�翪�i�A���T�����}�s��;1�g3:/b��${W��^���4�����n�q�����&lt;p\L�%������ �4���&amp;dϝ�9`y��Y���"��x�m�&gt;{Ň��x�*��v���eѳm�Z̖i�"%������_�S�*��B�Qz�aAQ0�	�@�'��_��&amp;�l&amp;T����\EI$��G��d@�kUV,���s��+�ESf�����Y��xȢ�ڟ�O`B[o��$Ń���j??�A�M
NH��m����AM���QM��a����m����z�D��Q˘���^F^Gv�O/��_�VzS�m�qu�XmP�\Nr���oB֒��B;}��0*�yg��%1$��=N��x�k�t�8��*ѕ�~s��?�kV�g�g^L:V!m��}D-!}e�`%�bCf�G��Vϩ���4�����|&lt;0/�A�T���W�(�-���s�eZt1��1M��8��&lt;�����(ا�bl6!%�:��e������xr��{E�d |�\!�����f��R㮯��_x�Cʍ�M��uڣ"�)j1��]j�g�n#r��Sz�c�S�y��Z�)�3^�,���R��9*�*q'&lt;S�e{�Z�m��-=����w�i��ߗ�2|��Y�%�L�H��a��μ��E�dT�v�+�;�h
ҚStUi�p\/X��K�H����aH�[[�}�mI�O�&gt;l��8̗���!���G�P���ֈ��1���)���QF� DiI�.�qKN��D�^�r�&lt;�ϰ8�:_3U�[��D�]
]�(�Y0��t]U�Z3��u*���n��f� W��=���`�������C�3��B��d��V��.���j���Z�F$��Z�W�A�f(uJՉH����p�јͺ��B��V�� �9C2�Y�,����F�ؕ�m&gt;�t�"�U��	��O/�[dn���-\��Ij���3�%����P��!���(��&gt;8`π����KO�!N@�)I����R�=��bw'�rYbn��3��?8��#�Ç��y�@�jmNt70����."r��1L���p-W����-SOa�v��d� ��J���?�ژ!?#�{��������b{���|]�M'�g��	�Q�R�Wq�G� 
 </msg>
<msg timestamp="20250106 09:59:32.217" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:32.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:31.393" endtime="20250106 09:59:32.219"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Status Code for ${src}: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:32.219" endtime="20250106 09:59:32.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>@{BROKEN_IMAGES}</arg>
<arg>${src} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:32.220" endtime="20250106 09:59:32.222"/>
</kw>
<status status="PASS" starttime="20250106 09:59:31.383" endtime="20250106 09:59:32.222"/>
</iter>
<iter>
<var name="${img}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.2151")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${src}</var>
<arg>${img}</arg>
<arg>src</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:32.263" level="INFO">${src} = https://demoqa.com/images/Toolsqa.jpg</msg>
<status status="PASS" starttime="20250106 09:59:32.223" endtime="20250106 09:59:32.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking Image URL: ${src}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:32.263" level="INFO">Checking Image URL: https://demoqa.com/images/Toolsqa.jpg</msg>
<status status="PASS" starttime="20250106 09:59:32.263" endtime="20250106 09:59:32.264"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${src}</arg>
<arg>allow_redirects=True</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250106 09:59:33.725" level="INFO">GET Request : url=https://demoqa.com/images/Toolsqa.jpg 
 path_url=/images/Toolsqa.jpg 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:33.758" level="INFO">GET Response : url=https://demoqa.com/images/Toolsqa.jpg 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Mon, 06 Jan 2025 02:59:31 GMT', 'Content-Type': 'image/jpeg', 'Content-Length': '7232', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Accept-Ranges': 'bytes', 'Cache-Control': 'public, max-age=0', 'Last-Modified': 'Sun, 17 Mar 2024 06:26:08 GMT', 'ETag': 'W/"1c40-18e4b16cb25"'} 
 body=RIFF8WEBPVP8 ,�U�*[d%7n�����ß�O�_$\��?u;O������-ȿ�o�~+�i�������������0���y���7�7r��?Q?�?�^�����%�w�������^��]e_����?�}�|]���������C��|���e��G�������g����[�|���_�������1�I�������?�M�h�����O.P�w�������?���.������~@}�O�w���̿�2�������_�������o�_�_�}����_������_���^��+�7���x�?k=��W~��&lt;i�Li�L&amp;X&amp;�l/zT�G;����Xf`8�\�$�0�3�Q��p#k9⚘IEg����	;&amp;H����͑��Cd�����@y�Ⱦ�:Mmܥ�������Z���&gt;,o��lth��C`rg�W]]��m�O��n���/Cz���xT�S�����{�Zc���OTtϬe��� ���V�1�T�oER�1��A8��_|C�I�5Q��=��v�*��J'��o��dGb4Ʉ�~j�^܅�.��x��P�*mZ#����פ!�"�6U���Ӧ�Dm9;���]w��	�Ư{�Y��\!��nǓ��]R�e��9��'�6�tt�K����"�6��6��6��5`�����%���!� sl&lt;nPs�'m�`gV�.,6+�?�������!�g�1�z�f� �0�9�15i���Nޯ� GVMx��u��KZ�� ����[�L�{V;h�=�Qޝ�jn�?�v]�U5��di,Mh(��%�3�b�a`�z�`�! ���6w4ܝA^�Pt�u�+��C;���������=9ʱw���7jZ&amp;�A3�E��a����v@W@`h�5��L~Bb�WL�&lt;��&gt;Y.|pD�&amp;�}�q\�����^�ya�Jl#mYǠ�����rss��ޠ�J�o�p�Sz��	z�:1s:��T�	�C�	�γt��{A���?��)��Ŕm��"m+���L����o؂
�)��*Ѥ�F��P/e���&gt;�Uз�#����f�L�E�+�[�Q�9&lt;&gt;�SN�
�h�ˌ#@&amp;嘖41�v5�}VMc��ރ���w��Q����q�\6]($ᩨs�����խ�w�1�6����.�}�"Ӿ&amp;K�?8�^��jD���f0,,(�u^�+b��-���&amp;{�@��f]~Z�h��7s��B��(�y`Vo˽��qaS� ��=?��a��'�|��T�iɑ�����ѩ�g��&amp;&lt;c����q�0���g���~����W8!��2l����y9Ma��S������^��*�&lt;;�$澫)���2w�@2h�X��-��O�DS���X�K��ū֚�^��/��.�H�&gt;�'��F�W=�w����Ї���-����=y��Π�'#�KGEL���1�``5)�+�;�&amp;ھ`UF�����R�O�k�Z|�'�6&amp;�\Ml��)
$�7�e���6/j�zG��`�����hFn�J'�B�-3�����wx���sH�f;s�F_ϭ���ة�԰���lk���=��vݓWwb[��Gai��a��#�j.��뀜'-F��AO������tT0m�����=�T	�W�CZ�5�����(%Qӭ���PȠ.�z������i`ybn�#�X�8X�*��Az�����aI��88�R�I#��o2\���^I�+Lk�j���-�ҞTuܔ��FS7Kv�*7pH̩-�Qa*�������P��%!?�Ҝ�����Bk�w�~��Q�oo_��a����Ђ拘�vcin�KF8�6���3[G�J��P�9G-���E#�ód`%|��} .�"?8%?��b�5�"�w�q��H�:l��$-z
ŉn2�x��}&amp;-?���~*?߉M�1���ሳ9n��M��&amp;v�T��H�������z�J��Z`6&lt;�#�)F���߭��FѨ/b��X�lX� �]&gt;������si�C�������*�PN��8g_'&lt;��i�[�b��A�_O����1Y�.�K�g:��"V��3x�KJP�{&gt;��2�:D� ����:��X���UE�⳻�RY�M��Q�&lt;
t�(���L���&gt;iFx��R��&lt;��||��Z�P'����S���u��\*�i�u��~��h|F�H���!����R�����O���q^�j�����f]S��E��t_�C�M;~e�z�9�A�,ɥ#`6i󷣨_k���z�u�s�3PB ��r�Q6�y�G�]�K���0�����]�@'��=��{���%��Ƞ�@�Nۇ����d�q���4�6Oh}��f��W3T67�;�^��R��M��7`���!�vw�S���z��Q	.�w��I�:�7���� ��O+?I1ʆh�N�A;�������9�yet����v�n���S�_y9X�Q�"�����n3���F��tɝ{�U�����c{|/GZI��6�`[���p��~�t���9qF��4踳�4)�x*.]G:Rb�#:���|$��L��5^�����sͮ��j�	4h}0�g�H,�Y��q����ܽ�P��G���ا�9�;DL#.�*�`A%��:ŻWd:=[E��Z$�ʊOU�3��ś&amp;�s��Ȼ���s+�(�!zNv��3up���22�x�^0T~��0
u��F~��5�e\z$a��4Ke�
&amp;�_Ů�����@xIb�G6�9�ʑ!�Ԗ#5&amp;'�Pk���6�y�"C��m�j-8x#�_k�mU�zb���=؁��ذwR�R�c8�VM@o^s#�
N�&amp;2�nI�;��)�M��["o�8���E�������$&lt;����D�ں�ꮆ���������:m���;�p!c�찏'�*���@F��c�5�~� 80�#��&gt;`]dk5��Ն�i*8��cC�Kg���2;5�/i2��eE
x�2���u�$]&lt;�\&lt;�����@��üh����0�K�N.�����gn�i���ʪ]"7�&lt;.v��}�
�MOL�gi�݉\��!-H�����^�xp4�Mt����k���$�m�L�7��'��d�&amp;����4��خ�;�b����M�$Q���Wֺ��"B��J�z�'T���ߕTD@&lt;�֦iH�4�L�F�ǣ�2���G3��hVGރ�"�;�H�k2:3i����i�G)W�~���߿�9�Wv��E+�b��bi8 !N�Mq[�&gt;!u(�������"��Jf�y'�}�]�]��%�V?�������RQ�ئ"�MuR%�K�y~GJ�����#����N�;�L`(G/�m�4�j�3r���(�Yx�34&lt;��U+r������Y�7]g-�E2���+l�����h1�t��0�gH f��2N���RoV�_@X��r��/К1~,tEfQ{��!�&lt;RnЏ�Qn2�e��O�0�����u����t�y�.�!��
,�ݺ |��b��OI�:2����o�I�z��P�hi�`��859GxD��o~��m�C�ܤ;L&gt;���Y���8���F#cQP&amp;�z�0�.DP!�ҍF��,}��R�#���m�6���P�$RS�[��!�0�9�*��^E̞���t����&lt;2q�4�y�����c�`T�.*E�6HQb���M�#c���)w���U�3��o#I�?�D��-S����"(��s����Hߞ�t�-ZX۝��c,l��䱳h��(�i��玌
7��%uҘ��B��O�����je�FirN���F�oNE��wK�PO9�6&lt;v�&amp;�W���`D0��zO4C�0H^��펬���Ȓ2爓�ֶC�O�ܬ�Py:hS�P�)�N��������g/�4#�fh�g��P1)`Xr�%��bG�#���6�	��x5*W��+����?��H�ȯnꩺ_*���
��|��Y�M���{mpt�a��u���Uo�QPq/R񏇸\���p&lt;h2*��x%�e�"�hVȌ�[В����
����wAD��C�B�)�+'��lо��O�d�l�5c	d�.F�0JB�|Yi��nk�e��H�qtX-�sd�Ê��6��&gt;m
49�2�6��2���齺�a�\!O�����u�y\p,'���M�&lt;&gt;���K��K�]q�m��&gt;���v�������,X��z=���w��!����	5h�Ɛ��T_��ㅎ�5�HQ�b2�r�ڔ�Q�J�!k�Ї=�nh=�|d�,j�=�0�m�2���yx�Ԍ{�b�UIE/��&gt;�1;�lڄ�������j��Y0��'� A-����=�]HP)��$x���!�
���Ƅ�q(��Tq�ǎ��a8��Z�����Z��*c�*x�6���)Rq��R_���9�W����1Z��	�gm��n0����������Y�@ČV�?u���o�q����DG� �\��2xj���}��:޵��9T���ȂԞ�z��qd{��	�#�U�OC+�b����4��$��GS�G��͏�:
�ɚ��˹G�]嘄��"¥����1�\�/��́�֒8�b�(h���[[�l�W7�h��1T*���:S8��'��́��z2��f�1�K%��
�@��������oEd����V$&gt;:�/�
̸"�J�+�]��TTQz#Y��ߎK�?�]���b��2E�)#NO@Rt�2���Ti�S\���0Ƨ��T��aAa�TnjZ�{t�П������������_�o�U+4�A������gD�Ԛg�w��jP�ܢ2��\Y2)ZM�� ){��,����Z�rc�����t�O�j߀��!:5L��x�CQioe��,�[��C\�Ԉ�&amp;W��c��άr�V��Aq���x\���1�\+	��]=�M�܀~��Q4�i
�����z�!R��MV��oB*z�����:�!Dx7�����/Y$}w]�G�skd�N�� ^c~�lt����\���k��$�|q��i�E���v�����y�+J����%ek��U|��c-���t���z�N���"�ӵ��G������?(�z�AHH�s�oQ�qR��G.��e�X4K�P/�盷Q�垤|�R]g~�h_&amp;�j�?\� r�M'�����~�)�ٶ���3�ƛ׍6�eXLn��&gt;� �?�W�D�O�e��|����ʼ�X'�y&lt;����C�_��Cz�:l���w��F��V��x������e5n��ü����r�����c%��0|�����ǑL}�g]!��`ڭ-�S��p˸������.� ��!*�����B/q��!�Ю?��ˆ�������_��I��J�{K������؍��k�M�Ś�6:�5ּ�`�v��/w�-zl&amp;&lt;�X'�d޼�m^f6���U���w$��=d��t��FҲ=�Zl��D��]o��(z����1+"av��Wӕ;*�8��1g��ۄ�rH�x/��;�N�L!:u�	{���
|+$a����2�$�A�@����Y^�i���\8���H88���Y�%��|?a���-F�=�p����|�;/��z7�q��_�(WC~t���`���7�N�x:�ϑ�a��z���twEb���kn_!b�=�N,�ؽ}�u����,a�#3���`A����6=quRZ$�	6��9:�S�����r�i;��ݘ�/�"S�A8�$l�2M%.�z9�&gt;����)�3�8�z��d�R�&lt;&lt;2�˦(H�cF��~d,��:�1���~n�ͻ�c�S�@9�����|�6����P�8������Z&amp;z#��ͤWk�Y\օ���2�S!�&amp;ۮ68�[1Q�~l�	6�q!K���FS�~,�d\�o(�L�D�s��n� rb��l��%����%�v��C�K�ƈi�����z�S�N��x���zԑ�����ϫ��J����o.�翪�i�A���T�����}�s��;1�g3:/b��${W��^���4�����n�q�����&lt;p\L�%������ �4���&amp;dϝ�9`y��Y���"��x�m�&gt;{Ň��x�*��v���eѳm�Z̖i�"%������_�S�*��B�Qz�aAQ0�	�@�'��_��&amp;�l&amp;T����\EI$��G��d@�kUV,���s��+�ESf�����Y��xȢ�ڟ�O`B[o��$Ń���j??�A�M
NH��m����AM���QM��a����m����z�D��Q˘���^F^Gv�O/��_�VzS�m�qu�XmP�\Nr���oB֒��B;}��0*�yg��%1$��=N��x�k�t�8��*ѕ�~s��?�kV�g�g^L:V!m��}D-!}e�`%�bCf�G��Vϩ���4�����|&lt;0/�A�T���W�(�-���s�eZt1��1M��8��&lt;�����(ا�bl6!%�:��e������xr��{E�d |�\!�����f��R㮯��_x�Cʍ�M��uڣ"�)j1��]j�g�n#r��Sz�c�S�y��Z�)�3^�,���R��9*�*q'&lt;S�e{�Z�m��-=����w�i��ߗ�2|��Y�%�L�H��a��μ��E�dT�v�+�;�h
ҚStUi�p\/X��K�H����aH�[[�}�mI�O�&gt;l��8̗���!���G�P���ֈ��1���)���QF� DiI�.�qKN��D�^�r�&lt;�ϰ8�:_3U�[��D�]
]�(�Y0��t]U�Z3��u*���n��f� W��=���`�������C�3��B��d��V��.���j���Z�F$��Z�W�A�f(uJՉH����p�јͺ��B��V�� �9C2�Y�,����F�ؕ�m&gt;�t�"�U��	��O/�[dn���-\��Ij���3�%����P��!���(��&gt;8`π����KO�!N@�)I����R�=��bw'�rYbn��3��?8��#�Ç��y�@�jmNt70����."r��1L���p-W����-SOa�v��d� ��J���?�ژ!?#�{��������b{���|]�M'�g��	�Q�R�Wq�G� 
 </msg>
<msg timestamp="20250106 09:59:33.759" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:33.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:32.264" endtime="20250106 09:59:33.760"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Status Code for ${src}: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:33.760" endtime="20250106 09:59:33.761"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>@{BROKEN_IMAGES}</arg>
<arg>${src} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:33.762" endtime="20250106 09:59:33.763"/>
</kw>
<status status="PASS" starttime="20250106 09:59:32.223" endtime="20250106 09:59:33.763"/>
</iter>
<iter>
<var name="${img}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.2155")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${src}</var>
<arg>${img}</arg>
<arg>src</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:33.773" level="INFO">${src} = https://demoqa.com/images/Toolsqa_1.jpg</msg>
<status status="PASS" starttime="20250106 09:59:33.763" endtime="20250106 09:59:33.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking Image URL: ${src}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:33.773" level="INFO">Checking Image URL: https://demoqa.com/images/Toolsqa_1.jpg</msg>
<status status="PASS" starttime="20250106 09:59:33.773" endtime="20250106 09:59:33.774"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${src}</arg>
<arg>allow_redirects=True</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250106 09:59:34.030" level="INFO">GET Request : url=https://demoqa.com/images/Toolsqa_1.jpg 
 path_url=/images/Toolsqa_1.jpg 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:34.030" level="INFO">GET Response : url=https://demoqa.com/images/Toolsqa_1.jpg 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Mon, 06 Jan 2025 02:59:32 GMT', 'Content-Type': 'text/html; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Cache-Control': 'public, max-age=0', 'Last-Modified': 'Sun, 17 Mar 2024 06:26:08 GMT', 'ETag': 'W/"c26-18e4b16cb19"', 'Content-Encoding': 'gzip'} 
 body=&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;&lt;script src="https://code.jquery.com/jquery-3.5.0.min.js" integrity="sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ=" crossorigin="anonymous"&gt;&lt;/script&gt;&lt;script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js" integrity="sha256-eGE6blurk5sHj+rmkfsGYeKyZx3M4bG+ZlFyA7Kns7E=" crossorigin="anonymous"&gt;&lt;/script&gt;&lt;link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous"&gt;&lt;script async&gt;async function detectAdBlock(){let e=!1;try{await fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js")).catch(t=&gt;e=!0)}catch(t){e=!1}finally{!0===e&amp;&amp;dataLayer.push({event:"Ad Blocker"}),console.log("AdBlock Enabled: "+e)}}detectAdBlock()&lt;/script&gt;&lt;script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5889298451609146" crossorigin="anonymous"&gt;&lt;/script&gt;&lt;title&gt;DEMOQA&lt;/title&gt;&lt;div id="fixedban" style="width:100%;margin:auto;text-align:center;float:none;overflow:hidden;display:scroll;position:fixed;bottom:0;z-index:9999999"&gt;&lt;div style="text-align:center;display:block;max-width:970px;height:auto;overflow:hidden;margin:auto"&gt;&lt;script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"&gt;&lt;/script&gt;&lt;script&gt;var gptadslots=[],googletag=googletag||{cmd:[]}&lt;/script&gt;&lt;script&gt;googletag.cmd.push((function(){var e=googletag.sizeMapping().addSize([0,0],[[320,50],[300,75],[300,50]]).addSize([730,200],[[728,90],[468,60]]).addSize([975,200],[[970,90],[728,90],[960,90],[750,100],[950,90],[468,60]]).build();gptadslots.push(googletag.defineSlot("/21849154601,22343295815/Ad.Plus-Anchor",[[320,100]],"adplus-anchor").setTargeting("site",["demoqa.com"]).defineSizeMapping(e).addService(googletag.pubads())),googletag.enableServices()}))&lt;/script&gt;&lt;div&gt;&lt;a id="close-fixedban" onclick='document.getElementById("fixedban&amp;apos").style.display="none&amp;apos"' style="cursor:pointer"&gt;&lt;img src="https://ad.plus/adplus-advertising.svg" alt="adplus-dvertising" title="Ad.Plus Advertising" style="vertical-align:middle"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div id="adplus-anchor"&gt;&lt;script&gt;googletag.cmd.push((function(){googletag.display("adplus-anchor")}))&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;script&gt;!function(e,t,a,n,g){e[n]=e[n]||[],e[n].push({"gtm.start":(new Date).getTime(),event:"gtm.js"});var m=t.getElementsByTagName(a)[0],r=t.createElement(a);r.async=!0,r.src="https://www.googletagmanager.com/gtm.js?id=GTM-MX8DD4S",m.parentNode.insertBefore(r,m)}(window,document,"script","dataLayer")&lt;/script&gt;&lt;link rel="shortcut icon" href="/favicon.png"&gt;&lt;link href="/main.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;&lt;iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MX8DD4S" height="0" width="0" style="display:none;visibility:hidden"&gt;&lt;/iframe&gt;&lt;/noscript&gt;&lt;div id="app"&gt;&lt;/div&gt;&lt;script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&amp;render=explicit" async defer="defer"&gt;&lt;/script&gt;&lt;script src="/bundle.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 
 </msg>
<msg timestamp="20250106 09:59:34.030" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:34.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:33.774" endtime="20250106 09:59:34.032"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Status Code for ${src}: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:34.032" endtime="20250106 09:59:34.033"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>@{BROKEN_IMAGES}</arg>
<arg>${src} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:34.033" endtime="20250106 09:59:34.034"/>
</kw>
<status status="PASS" starttime="20250106 09:59:33.763" endtime="20250106 09:59:34.034"/>
</iter>
<iter>
<var name="${img}">&lt;selenium.webdriver.remote.webelement.WebElement (session="91ae74302a2abdc0b7e10ce38e2a899b", element="f.5F465D2D94F487226330F3D4CD90ED82.d.91934A86807FCA9E3FF52D9BE470B289.e.443")&gt;</var>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${src}</var>
<arg>${img}</arg>
<arg>src</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:34.042" level="INFO">${src} = https://demoqa.com/images/zero-step.jpeg</msg>
<status status="PASS" starttime="20250106 09:59:34.035" endtime="20250106 09:59:34.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking Image URL: ${src}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:34.043" level="INFO">Checking Image URL: https://demoqa.com/images/zero-step.jpeg</msg>
<status status="PASS" starttime="20250106 09:59:34.042" endtime="20250106 09:59:34.043"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${SESSION}</arg>
<arg>${src}</arg>
<arg>allow_redirects=True</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250106 09:59:39.667" level="INFO">GET Request : url=https://demoqa.com/images/zero-step.jpeg 
 path_url=/images/zero-step.jpeg 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250106 09:59:39.715" level="INFO">GET Response : url=https://demoqa.com/images/zero-step.jpeg 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Mon, 06 Jan 2025 02:59:33 GMT', 'Content-Type': 'image/jpeg', 'Content-Length': '11331', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Accept-Ranges': 'bytes', 'Cache-Control': 'public, max-age=0', 'Last-Modified': 'Sun, 17 Mar 2024 06:26:08 GMT', 'ETag': 'W/"2c43-18e4b16cb21"'} 
 body=����JFIF���ICC_PROFILE�0mntrRGB XYZ �acsp���-	desc�$rXYZgXYZ(bXYZ&lt;wtptPrTRCd(gTRCd(bTRCd(cprt�&lt;mlucenUSsRGBXYZ o�8��XYZ b����XYZ $����XYZ ���-paraff�Y�
[mlucenUS Google Inc. 2016��C	

			

		
��C	����"��	
��G
!1	"2AQTV������#Baq$357RSeru��%t������&lt;
!1QA��"2RS���5aq�6���Br�����?�)J�6)JJR�R���()JJR�R���()JJR�R���()_��-�Cm����j	JR�{�@}���V�z���ð]�a�7ZmוFt��OsmnDZ���"G%���:���!c�Ty����ޘ��k��*�����l�O���P�(���=�"��G4��ҵC����w�d׫�!�HSl��kg�.n;�YM��I!%
 � ��v��昶�b���
�ƻ�.�&amp;L9������;�pA���Ĳ�g�JSc��"��������)@)JZJyv"����)@)JP
R��ץk_�:g���,�&amp;)�����s���\E����A�V��'����^Z��M�Rӧ��jrQ�r*��y����^����m���p��g�;�t���0T��C`-�6$)	�l]����s7��F-d��/��hPD(	�R�
T�VҸ2P�s��I���y��\��:��G��툍s��\��lH�Df:;���B���ʕ�j�Y��N0�VF[�����fk#�&gt;|���N[f2�2���l�x��IIrR�#`����j�hӰ�M���u`�[��Z��ؠ�BR�Hj�e��YzBvq����P`�Jk��Ϩ������"�����΁��/���6���榔��*'!�!j?�CRgȋs��\m��XSBP�w;$(qH$�����?��z���	%e7������J?�u$o�G�U��%;3zc�����3�)n-h�TЕ(�$H��A=��^�����C�U6�u-{��6��4�g�&gt;��BKp	�Ķ
O�&lt;�m���:�}�F���+v�#F��S��eiN��+��V%�Ob]�$�u��*n;��m������u{�&lt;����ɦ:#����c�-e�!d�%В�	����s`O{T�N��}0�$&lt;6*Y~�&lt;�vA9��D8 �ᦒh�N�r�M�'���Cl��A��}J�a���#��B�qח��)~	X����d�{L���ţ�mtɮ����o�%�$1lg��$��Pe�%�r�ڤڙԆ�im�i���n�fo6ŝ�[�})o���q��4&lt;G��@��޵��5�T5��c#Ҿ��=:�1Y�̋z��T�IR�Am��T��'�	HH�ⷔzF,��&amp;�t��"U�̚87���`˹�i䍻�I�V&gt;PE2��̽_���k6Q��:q�&amp;�;G�tq1j3h��4&gt;���O$,rI#�5��ޑ��qܣ�Jn��~Xp6_�n�*$�O�6��A��N�sڱ�]�6ӗH���^6/�m���-���ݐ�-c�W�9 �w��w�R��z]���HX����X/3Ǚ�y��q��h����G��ǀBB@ڢ��|ٞ�F5�hVE���ș5��`�|����S�eI	ZN���Z׾��6���ݵ�Sz���-���bڬ2��q�9	!�[�&lt;K�G)gq���g��ݗ\4g8�G������n/$D���Fy*R�H�Dt����jW��{��r�x%�����n8�n���%O�WB2���H%�ӪH�7��tu'=(�]b�~��t�Ug^��+n3��es�4����\���-���$�M$���a�ҍ����?�Z��=Ko�}���/.&lt;~&gt;'��j�}0�U�v�y�Ϊ�����k�GBRe)-x�J�m��\R\BQ�m�P����؁��d�oq�;�{��{&gt;��վ�ǆ��m�۩�����c���]Z��+}����ܮ���HS@{\��r߶Ռ4˯��5s)kõZ?���E����f�T�$)gc샽S�IE�eө���۞A�Z�5=�^���=��he'�g�'nͭa;�]&gt;�!eZ�q?�ߘa�S�*�z��d.#)Z|V�ZJJҤ܉ⴡc�U�'36	�}E�'Oq�u[!�jFC)p���D�&lt;�@%;2��P�v	�:��?	Ϥi�A�P۽Bw���C~DXnqR^��M����+�&gt;{U(��]sK�M]9\��VQ!�sR�i~��S��i&gt;���ղ��t����L:�V[�XW�H���,�$�kZ�*�HPYH��I\]��gm�}�k��s!Li/ǐÁm�چ�RT;G�٪[���wL2���íc9��|8�F�/���P�+BR;%)H���UZ��d�)J�ES�I�N=s�x�F'ovnI�&gt;�͈�5�鐜o����VP�Sߑk��[��J���CWV?��sJ���&lt;�;�/�-�Yz׀�1�~�\JH�&gt;P�K�J�ظ�����).\�ez5�R�S��[�l��HEه�h�RJ"ŷ2j;AE��d����-Y���F�kE�ne����9$�̹��=k���N-������h���RT{�G�����[��Dȡd7 _^����Qh������u4�N-~�����[�t���0�{L�ka&lt;՜��Cl�ڒ����Z�J�Bv^_�Jt�}�r�u��\xBrэ���.,RGʀm��Ȑ��*��/�.Í^��񜱒"9C��Z#�����2p�A$n��؅%E5��e��f�ƴ� ǅ
Ib&lt;h��e�����v�U';�"яk;k���î�.�"@�ˆkqu�&amp;�t3�����Q�4���o��ZʶuJ�v.��]f�J���}����7�Z��V���ǉ�~ܸ��z�Y���Y��c=Jt��m����梘ӛl8���e�!��RJvq��n�L�e(��k�#�&lt;�����?�8ݖP�p{���8�q_�7

I!j(A%JJ��U�wK����B辣�MZ���r�u\독#�W8�T[G�+�a^dnT;վ�3�^tw��,�ivG%����Bؖ��$IM8a􏌡ĥ\ObΩV%�����\�lf�\q��������qK%-�cv���4�/�$r؝(�bZ�S�x�'�Μ��ͯ�uԆV2[�4pKj-pi��^�wW5�T�-]��F�t/�Oҽ��9�K��b)�㰌�!���h`�Sԥ#�q;�#�lv���ʊO��F��l��PuG�Z�٫�p[�[��7Ŵ.�|R��7Ͷ�B}���)ED��R�+��S�z��n3&amp;�-�ő��KkCki^��&lt;ۈs~&lt;�R��wW�^:S3��Ub�uG�n����Ω���v%�4fPm�p^t:�H{��P��p�Iة+A
��a&gt;�mh�n�s�	�[dy�r��e������A�yn�Z�#Ò|)E+��}/6�j��ǥ\&amp;\R��L�Js���m���v�jܓ��ԓT�;�;y�ft�f��\�N���o��TK��j@	jc�*ؔ셔 ����w�c:����݌[�&lt;��`��gGr��.)��������o���&gt;A�Nk$2�b��t��n��4��\�0�����З5�����|B�!)�޲�)U�[��)P)JJR�R���()JJR�R���()JJR�R���()JJR�R���0�w�ƌ��es��)S��;m�5�f'r�6��IQv;+F�_����N�8�l�O��^-����@������(!i ��A��lcU�u����-��;�[(���w�o�K�� ��~]�ڱL�^����+ݗ*�����ط2���ȖҤ)��P���ʇ���|%_-��67.@��i��jp���\A;%#�Q۰��c�WP4����s����F�m�Yd1 *:&lt;GQ#��A=�p�]�ﱬ_�Ye�'Wx�3m��@V�d��[؜�2�^�i*��$)\VG 	������(�[�Gx�u��r�����9!��mn�*Q����.._,�-�`X��6�^y�M���:�u�����E-�,�����R˖�2Fqly��g[�se�[n�G0KjI&lt;��~*���5O�-]�[)�̝���� ���e�$�D' �[&lt;��IXHw�U��-zj�~�k^�J5bS��u��u��w��!�B��Yf�t�.P`���Iy��������mS���K�M|�2&amp;���Ki��a�|�#o�G�
�}��T{I�k��t]A0���6GM���{�H��&lt;���%*uN#s�$�r�:��m��/���*��hH�t𹩤GZ�_�w�GA=�;
�Bl��܃�Sc����k�ϗfXvk��;/[�����s�����!d�e��ٵ��M���O��H;E5�fZ���s�k?NL�w�9���������l�8���&lt;T�@�}dr{��e&amp;�� �0G��l|�?URR�2��u&gt;���7˂3m:��(���*W�:��G| ��S�+k��J�Gr���*�i�K7l��#(�5輲k7iT�,=j)y�,8�.�d$,(�H;�j2���[�%\Tv��Q�&lt;�"�6+,�`�Yڔ��&amp;����-8��S.���Gt�~:�zc�5'Xur��jFc�&amp;�Hj�gj���Vb6�IQ��K�%��i!K���1���f�'��mq�ܒ�Rs��}�Qux�}R�kf2%�e���46V��T�.l&amp;�v��٧߮jq����!Hl�Im�����;�w5�`��=�m�?�e�*���������87B�������_0���3J�Ԭ� �Z���q"]��\U�\�.,.�vQ
Qjg��_Ҷ�u��b��b��,����n��l����Q+#�XS���)3����af���*�`�/�߿��.}�n�f]�6���%[�Ǳ�+ڪ���}mg�}NP�d�[5���{�����ex��to�&amp;U��������%
R��R����)@a�礝�&lt;���2�oWd4��mye��۩m&lt;Rq�B;�W���49�*�����#��%�`Hw���&amp;J�r�K�;ː�6=�*Up��(�;K1�W��P��X�5jM��.d�V��M�Hq�);m�VM�i"c�t���5�-��]s�j�f��W�r�z,��T��V�8����J$�)	N�m]�M�M�+O�i��[��Ӎ]��1��pw�{?�{�"���nj%��ډ�8K�����3q�a�6le�R%�%-��\��%-��D��K�n��?��ʵd����1/��6�P��&amp;Bؔ�9���q%$o�"���G/}t�~�d���կ�u���K������	�ہ�=��Ĥ((�w��c�lx����--�0ے�:Q��Z����$���c�'�ϯ�1�%��u�#ӭI�c���2�y8�K}��I	�eD��E4#��NΣ䶩6����Ɯ�k1E�:P|Y�&lt;�n4�ԮQ�C�'~?#Rn�˦�q�i.o�p��cY�ab3Rf;)ą��[��R�ܟ2v�:��w|ͮ��x�;2�y��jpz[�������c���%G�ۗž��:�ѽI����?u�ƸޘrM�]���֮�67Z�;!�"Fÿ�On�U3��;�oض5�N}�����,�n+���	l�R�$���հ���j41�����H�Ij.[1x��5���_s��z�W&amp;�e.�B�S@q_r
❣��|�S:���u�[��
T+9�A2e^e���JM��]��wؤ�R��N�ٞA�ܯ�����ݽa���������t/p��Q|��Ԍ�߈��[�[��%Z��mj��cu�#�B$l;����SvF��P�KN5R��������2h�Zjk�%���pڂ^H[M�%`�t�W�o�};���Z�YF[t� I�e:[SC�$2O�����9�	�V4�:��q=7��j&amp;�J�"����%��q����������x��*��߸�k�]G�.���vLJ�9��:�d�"]�Rm�5��P���|1ښ��"´����5��%�����e=1ǃ�������R��U��7�k5�v],�]�g8���nZ.��g����\�
b���C��!kH؟hl+�g�N�$@�vc+�.�̔D�0cӃ����I�R�*��{�{%!&lt;�@H�~!MPѕ;@�v���Y&gt;m�i��,Z鉷�ðȽ���B�R��S% �����x�V�ߕf��=�m�K���e�q\apWl����q�aq�t+���)=��n���^�5:ז-Y$k[:m�N�Z�����[�ҷy�爖�X�������ut�!���������/�^������8�'&gt;��*�{��K.:��-W��j�q��A��fT;�������|'�YO4���lEO�J�aJR�
R����)@+
u�d�d�+je��κܧX_f,(1���v�(m�D��Vk�q�jV��}Q��s��V��8�&lt;�k�.���5���v�Ǩ��Ȉ��R�ʜ�R�6IPH���[3۞�e���t�x���lN�5��om;��o�эҴ��]P
Qd��ԡ$���sib,R-�je�T�,cM����a�&amp;��62#'a,,��I�0��_�l��c�=�OL����I�&amp;o��]�yu��È��y�=;A�g�f���+J�����$�2M7;m�ڙ��C��=L��8/���j�2��m������X,��I�0��_�od��c�=���5�)�ݴ�V1�&gt;�C�2�p�A��T�b+�d�����e,�r	�&lt;��&amp;I&gt;d�yw����1�������B���I�v�|E�*�I����R�s�}is�KXq���y�	t������k/V��3-�FMm�ldFN0�ae��Nq����P�{%O{���]�I�$В|�4�FS]m6�}괆�O�/��\���˲�R؂�3�%8��(`����P�@�mY�T��&amp;�:��ٱZ�P��4�}�^��b�Jt��\�1�[ ��J�@�z�{����_���N��h��ښu��;|��f&amp;ƹ�_%���u�iI��%q����鱛n�Ʀ��=MĬ�ǎ�c��-�e{vJ�?Ty&gt;_�h&gt;W3�\n�,�^�ڣ����$4�T��W��eJVݒ	��9j��K�J��qȳ��������r&amp;[�HB�6�%n�Wt����Vy���G��hX�����i��a�Lw;g(^�J�~�c��l�o6���!����)��w�&lt;w�e�K7��[6����5�n��^�"�!��&lt;���]o)��7��PX؞;U�������aaJR�H�)@)JP
R���6��l1\�v��X�Ku�����I��qJ�:祩;����?�����ߧV���շ��υ/��!��T��K~�X&gt;�g�S��K~�X&gt;�g�S��
^�$9�J�{�ioӫ�l�j{�ioӫ�l�ju~3�K�����4O�PM-�u`�͟�OM-�u`�͟�N��|)x_�t���*�饿N�y����饿N�y�����υ/���?�@=�4��Ճ�65=�4��Ճ�65:���A�C�'������:�}��槿���:�}���W�&gt;�/�:HsD�����ߧV�������ߧV������g��Ih�ҠH�.Z�����3g�T��v�ua��m�HR�%@�Gb+\5ju`�~i��*Q�wiJV��)@|��A? �jzI�;����L��0^�;+f�|:�,y+�w�����#eO���Z���������^��^�:��Γ�f�����Q��8������7Ԡ��/�#�A��_�G�_�+����y�I&gt;l�}J�"��?
z��E�~�tF1=k�1��ui�W ��mV�lo����J�T-(kn�������w����F�	�����b_M���?r�&amp;Aa�:�.�q�n�n�ũ�x
8�`j�q�Ro4f���776�O6��W������SUc���u��5�P~a��SԠ��/�#��J�n��&amp;�����5��ԙ�-9V�%�RS۸;�]�wG3������1�v����A�BP\�˂��
#d4�u@+~?׵n=��T�^�9RrmI=#����^��=�Qķk&gt;��ü�z��E�~�(?0���+&lt;j�K�N'�i�X��|x����me�&gt;�v/�����uH%I#�b`��r{�4�!7�&lt;S:u��?�1�7��|@�W��ȃ��xvv6�k��FҊ���y_	4�i&gt;ik�%L.*��Zz;~�Ԡ��/�#�A��_�G�SF4�P��H�R�'p��ʔ�Aly(�е���A*)���k��}�&amp;kJYF����і�b�Wt�%v�C͠�-譡µ�����9������gP�S�μT�E�:���_���w�[^���qR����v���Ԡ��/�#�A��_�G�Y&amp;��ָ^��+iҌ�]�Ĕ*���D怴%ŗaJJ���������ô�T5�p�0�&gt;���v�^��eC ����%�rJ�B�Q ��m���������o&lt;l�����O��aN�u;���W�P~a��SԠ��/�#�F�h��.����d�}��bLYl���pm�V�Rv ��� �KNqv5#2�a���κ�l�v�44��qݶ
��T�BN�r#��S
T^&amp;R���k^�v[R��iϣW��(?0���)�P~a��W��c��N�?�m2�w[c�2�qu�FۥC�Ȃ%*I
I) �:�B��8J��wM&gt;��	8ɴ�����E�~�F�o~�nɰٷ_���FzKQ"8u+�|�ݰB|�R���PJ�&gt;����g�U��ח�f�
����EwM��&gt;�
듳k�l�n�I�����͏!\��j�=0R���(���_��[zE�������������R��j��-�׬�g��zב?�
?���������eS�)_k`e&gt;�r�w
��2��[M��xS�&amp;�s�,6bI@R��%�;����[��kS����ֻ�Z�gq�����w	�I���I-��6;,��RT�(-
)P� �Erp�l������綞�ᶭy׭'�*QkKZ�WUqO�v�'���m)a�ƚ����V.�F���&gt;�d��&amp;9��KR��9!f2$2ӈy�~�_$��;���(��jõE�^,Z��ܽES�8뤇�R�ͮ����&gt;iCm�|HF�B���9cXØ[Y=ٻ��Ӷ�Mq{py��Bw�v ��^8R��A�}��Z�َ��T���\!Y�����--{q&amp;���
PK������[�l�7�O������#ʥ&lt;��e�y���M4�Y�����Km�Aie�/D��{�����ӕ:�E��J�g�p��⯌��w
ڈ�J�P����r;�t����䡲�#�ֹu���+���&lt;�b���T�K5��XA'�ݯkg[jK�
���^�6z����2���w��MO����$�N�.�]R�$�쐽��[�ā�w�Mt�#ju��U����iI��1�FX�W�����W�*��w��=�K�W�ceGr?�w6��avܜ�6�NT�kJt�ڟm4�Y�[���M%{��G�-�Nz���З��5�p�NQ+o#v^r��F� ����,(�eĤ$(��ilHRfvN�t�5��dV���.��u� L�e�0�H��V\m�.2�m+W�vZG��m�Z$��O��뭨���2Ƹ����b��=$��&lt;��z��	;z��pZ^���.;T����Ǉ:��2�S��S���@��.�&lt;X&amp;�m��H��e%�!խdA!��I�r��}����kԌ������m�TYV�H�F�#��	�
x��;Ui$��I$��J�V�}�����mx)F�rŵ(����z.
�KKhi�hօyV������@ke�_�*v�ݭQ��u����1�4T[C��9���^[���nq�)]|�p��ac���R�KE�=y���N�GR|X��... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250106 09:59:39.717" level="INFO">C:\Users\cmhiep\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20250106 09:59:39.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250106 09:59:34.043" endtime="20250106 09:59:39.718"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Status Code for ${src}: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:39.718" endtime="20250106 09:59:39.719"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${response.status_code} != 200</arg>
<arg>Append To List</arg>
<arg>@{BROKEN_IMAGES}</arg>
<arg>${src} (Status: ${response.status_code})</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.719" endtime="20250106 09:59:39.720"/>
</kw>
<status status="PASS" starttime="20250106 09:59:34.034" endtime="20250106 09:59:39.721"/>
</iter>
<status status="PASS" starttime="20250106 09:59:31.124" endtime="20250106 09:59:39.721"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${BROKEN_IMAGES}</arg>
<arg>Log</arg>
<arg>Broken Images Found: @{BROKEN_IMAGES}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.722" endtime="20250106 09:59:39.722"/>
</kw>
<doc>This test case checks all images on the page to identify any broken images (non-200 status codes) and logs the broken images.</doc>
<status status="PASS" starttime="20250106 09:59:30.532" endtime="20250106 09:59:39.723"/>
</test>
<test id="s1-t8" name="UpLoad_DownLoad_File" line="165">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:39.727" endtime="20250106 09:59:39.729"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:39.731" endtime="20250106 09:59:39.733"/>
</kw>
<msg timestamp="20250106 09:59:39.733" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:39.730" endtime="20250106 09:59:39.733"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:39.735" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:39.733" endtime="20250106 09:59:39.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.735" endtime="20250106 09:59:39.736"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.730" endtime="20250106 09:59:39.736"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.726" endtime="20250106 09:59:39.737"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case uploads a file, verifies the upload, and then downloads a sample file to ensure download functionality.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:39.737" endtime="20250106 09:59:39.739"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>8</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:39.741" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:39.741" endtime="20250106 09:59:39.741"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:39.742" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:39.742" endtime="20250106 09:59:39.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:39.743" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:39.743" endtime="20250106 09:59:39.744"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.742" endtime="20250106 09:59:39.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.744" endtime="20250106 09:59:39.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.744" endtime="20250106 09:59:39.745"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.746" endtime="20250106 09:59:39.746"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.746" endtime="20250106 09:59:39.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.747" endtime="20250106 09:59:39.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.748" endtime="20250106 09:59:39.748"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.742" endtime="20250106 09:59:39.748"/>
</kw>
<msg timestamp="20250106 09:59:39.748" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:39.741" endtime="20250106 09:59:39.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:39.749" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:39.749" endtime="20250106 09:59:39.749"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.740" endtime="20250106 09:59:39.749"/>
</kw>
<msg timestamp="20250106 09:59:39.750" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:39.740" endtime="20250106 09:59:39.750"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:39.805" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:39.750" endtime="20250106 09:59:39.805"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.805" endtime="20250106 09:59:39.806"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.806" endtime="20250106 09:59:39.806"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:39.807" level="INFO">${index} = 7</msg>
<status status="PASS" starttime="20250106 09:59:39.807" endtime="20250106 09:59:39.807"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:39.808" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:39.808" endtime="20250106 09:59:39.808"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.808" endtime="20250106 09:59:39.808"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:39.809" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:39.809" endtime="20250106 09:59:39.809"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.809" endtime="20250106 09:59:39.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.810" endtime="20250106 09:59:39.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.810" endtime="20250106 09:59:39.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.810" endtime="20250106 09:59:39.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.811" endtime="20250106 09:59:39.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:39.811" endtime="20250106 09:59:39.812"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.807" endtime="20250106 09:59:39.812"/>
</kw>
<msg timestamp="20250106 09:59:39.812" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:39.807" endtime="20250106 09:59:39.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:39.813" level="INFO">${exp_index} = Upload and Download</msg>
<status status="PASS" starttime="20250106 09:59:39.812" endtime="20250106 09:59:39.813"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.806" endtime="20250106 09:59:39.813"/>
</kw>
<msg timestamp="20250106 09:59:39.813" level="INFO">${menu_item} = Upload and Download</msg>
<status status="PASS" starttime="20250106 09:59:39.806" endtime="20250106 09:59:39.813"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:39.814" endtime="20250106 09:59:40.096"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:40.097" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:40.096" endtime="20250106 09:59:40.104"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.813" endtime="20250106 09:59:40.104"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:40.105" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Upload and Download']'.</msg>
<status status="PASS" starttime="20250106 09:59:40.104" endtime="20250106 09:59:40.177"/>
</kw>
<status status="PASS" starttime="20250106 09:59:39.739" endtime="20250106 09:59:40.177"/>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<arg>xpath=//input[@id="uploadFile"]</arg>
<arg>D:/file.txt</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20250106 09:59:40.179" level="INFO">Sending D:\file.txt to browser.</msg>
<status status="PASS" starttime="20250106 09:59:40.178" endtime="20250106 09:59:40.260"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${uploaded_file_name}</var>
<arg>xpath=//p[@id="uploadedFilePath"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:40.294" level="INFO">${uploaded_file_name} = C:\fakepath\file.txt</msg>
<status status="PASS" starttime="20250106 09:59:40.261" endtime="20250106 09:59:40.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded File: ${uploaded_file_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:40.298" level="INFO">Uploaded File: C:\fakepath\file.txt</msg>
<status status="PASS" starttime="20250106 09:59:40.295" endtime="20250106 09:59:40.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${uploaded_file_name}</arg>
<arg>file.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 09:59:40.299" endtime="20250106 09:59:40.300"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id="downloadButton"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:40.301" level="INFO">Clicking element 'xpath=//a[@id="downloadButton"]'.</msg>
<status status="PASS" starttime="20250106 09:59:40.301" endtime="20250106 09:59:40.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10x</arg>
<arg>1s</arg>
<arg>File Should Exist</arg>
<arg>C:/Users/cmhiep/Downloads/sampleFile.jpeg</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>C:/Users/cmhiep/Downloads/sampleFile.jpeg</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20250106 09:59:40.450" level="INFO" html="true">File '&lt;a href="file://C:\Users\cmhiep\Downloads\sampleFile.jpeg"&gt;C:\Users\cmhiep\Downloads\sampleFile.jpeg&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20250106 09:59:40.450" endtime="20250106 09:59:40.450"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.449" endtime="20250106 09:59:40.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>File sampleFile.jpeg downloaded successfully.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:40.452" level="INFO">File sampleFile.jpeg downloaded successfully.</msg>
<status status="PASS" starttime="20250106 09:59:40.452" endtime="20250106 09:59:40.453"/>
</kw>
<doc>This test case uploads a file, verifies the upload, and then downloads a sample file to ensure download functionality.</doc>
<status status="PASS" starttime="20250106 09:59:39.725" endtime="20250106 09:59:40.453"/>
</test>
<test id="s1-t9" name="Dynamic_Properties" line="187">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:40.456" endtime="20250106 09:59:40.457"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:40.458" endtime="20250106 09:59:40.461"/>
</kw>
<msg timestamp="20250106 09:59:40.461" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:40.458" endtime="20250106 09:59:40.461"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:40.463" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:40.461" endtime="20250106 09:59:40.463"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.464" endtime="20250106 09:59:40.464"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.458" endtime="20250106 09:59:40.465"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.456" endtime="20250106 09:59:40.465"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks dynamic properties by verifying visibility and color change of specific elements.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:40.465" endtime="20250106 09:59:40.466"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>1</arg>
<arg>9</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:40.468" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:40.468" endtime="20250106 09:59:40.468"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:40.470" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:40.470" endtime="20250106 09:59:40.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:40.472" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:40.471" endtime="20250106 09:59:40.472"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.471" endtime="20250106 09:59:40.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.472" endtime="20250106 09:59:40.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.472" endtime="20250106 09:59:40.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.473" endtime="20250106 09:59:40.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.473" endtime="20250106 09:59:40.474"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.474" endtime="20250106 09:59:40.474"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.474" endtime="20250106 09:59:40.475"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.470" endtime="20250106 09:59:40.475"/>
</kw>
<msg timestamp="20250106 09:59:40.475" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:40.469" endtime="20250106 09:59:40.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:40.476" level="INFO">${exp_index} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:40.475" endtime="20250106 09:59:40.476"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.467" endtime="20250106 09:59:40.476"/>
</kw>
<msg timestamp="20250106 09:59:40.476" level="INFO">${header_item} = Elements</msg>
<status status="PASS" starttime="20250106 09:59:40.467" endtime="20250106 09:59:40.476"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:40.592" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:40.476" endtime="20250106 09:59:40.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.592" endtime="20250106 09:59:40.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.592" endtime="20250106 09:59:40.593"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:40.594" level="INFO">${index} = 8</msg>
<status status="PASS" starttime="20250106 09:59:40.594" endtime="20250106 09:59:40.594"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:40.597" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:40.596" endtime="20250106 09:59:40.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.597" endtime="20250106 09:59:40.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:40.598" level="INFO">@{list} = [ Text Box | Check Box | Radio Button | Web Tables | Buttons | Links | Broken Links - Images | Upload and Download | Dynamic Properties ]</msg>
<status status="PASS" starttime="20250106 09:59:40.598" endtime="20250106 09:59:40.598"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.597" endtime="20250106 09:59:40.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.599" endtime="20250106 09:59:40.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.599" endtime="20250106 09:59:40.600"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.600" endtime="20250106 09:59:40.600"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.601" endtime="20250106 09:59:40.601"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:40.601" endtime="20250106 09:59:40.601"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.596" endtime="20250106 09:59:40.602"/>
</kw>
<msg timestamp="20250106 09:59:40.602" level="INFO">${expected_list} = ['Text Box', 'Check Box', 'Radio Button', 'Web Tables', 'Buttons', 'Links', 'Broken Links - Images', 'Upload and Download', 'Dynamic Properties']</msg>
<status status="PASS" starttime="20250106 09:59:40.595" endtime="20250106 09:59:40.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:40.602" level="INFO">${exp_index} = Dynamic Properties</msg>
<status status="PASS" starttime="20250106 09:59:40.602" endtime="20250106 09:59:40.603"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.593" endtime="20250106 09:59:40.603"/>
</kw>
<msg timestamp="20250106 09:59:40.603" level="INFO">${menu_item} = Dynamic Properties</msg>
<status status="PASS" starttime="20250106 09:59:40.593" endtime="20250106 09:59:40.603"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:40.604" endtime="20250106 09:59:40.923"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:40.923" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:40.923" endtime="20250106 09:59:40.930"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.603" endtime="20250106 09:59:40.931"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:40.932" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Dynamic Properties']'.</msg>
<status status="PASS" starttime="20250106 09:59:40.931" endtime="20250106 09:59:41.051"/>
</kw>
<status status="PASS" starttime="20250106 09:59:40.466" endtime="20250106 09:59:41.051"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${initial_color}</var>
<arg>xpath=//button[@id='colorChange']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:41.075" level="INFO">${initial_color} = mt-4 btn btn-primary</msg>
<status status="PASS" starttime="20250106 09:59:41.051" endtime="20250106 09:59:41.075"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${color}</var>
<arg>return window.getComputedStyle(document.querySelector('#colorChange')).color</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:41.076" level="INFO">Executing JavaScript:
return window.getComputedStyle(document.querySelector('#colorChange')).color
Without any arguments.</msg>
<msg timestamp="20250106 09:59:41.104" level="INFO">${color} = rgb(255, 255, 255)</msg>
<status status="PASS" starttime="20250106 09:59:41.076" endtime="20250106 09:59:41.104"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>The color of the text before color change is: ${color}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:41.105" endtime="20250106 09:59:41.105"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//button[@id='visibleAfter']</arg>
<arg>10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 09:59:41.106" endtime="20250106 09:59:46.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>'Visible After' button is now visible.</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:46.076" level="INFO">'Visible After' button is now visible.</msg>
<status status="PASS" starttime="20250106 09:59:46.076" endtime="20250106 09:59:46.076"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${initial_color}</var>
<arg>xpath=//button[@id='colorChange']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:46.092" level="INFO">${initial_color} = mt-4 text-danger btn btn-primary</msg>
<status status="PASS" starttime="20250106 09:59:46.077" endtime="20250106 09:59:46.092"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${color}</var>
<arg>return window.getComputedStyle(document.querySelector('#colorChange')).color</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:46.094" level="INFO">Executing JavaScript:
return window.getComputedStyle(document.querySelector('#colorChange')).color
Without any arguments.</msg>
<msg timestamp="20250106 09:59:46.099" level="INFO">${color} = rgb(251, 234, 236)</msg>
<status status="PASS" starttime="20250106 09:59:46.093" endtime="20250106 09:59:46.099"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>The color of the text is: ${color}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:46.100" endtime="20250106 09:59:46.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Initial color class: ${initial_color}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:46.103" level="INFO">Initial color class: mt-4 text-danger btn btn-primary</msg>
<status status="PASS" starttime="20250106 09:59:46.103" endtime="20250106 09:59:46.103"/>
</kw>
<doc>This test case checks dynamic properties by verifying visibility and color change of specific elements.</doc>
<status status="PASS" starttime="20250106 09:59:40.455" endtime="20250106 09:59:46.105"/>
</test>
<test id="s1-t10" name="Form_Practice" line="211">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:46.106" endtime="20250106 09:59:46.107"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:46.109" endtime="20250106 09:59:46.111"/>
</kw>
<msg timestamp="20250106 09:59:46.111" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:46.108" endtime="20250106 09:59:46.111"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:46.112" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:46.111" endtime="20250106 09:59:46.113"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.113" endtime="20250106 09:59:46.113"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.108" endtime="20250106 09:59:46.113"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.106" endtime="20250106 09:59:46.113"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case fills out the practice form and verifies that all inputs are correctly entered.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:46.114" endtime="20250106 09:59:46.114"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>2</arg>
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:46.117" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20250106 09:59:46.116" endtime="20250106 09:59:46.117"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:46.118" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:46.118" endtime="20250106 09:59:46.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:46.119" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:46.119" endtime="20250106 09:59:46.119"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.119" endtime="20250106 09:59:46.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.120" endtime="20250106 09:59:46.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.120" endtime="20250106 09:59:46.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.121" endtime="20250106 09:59:46.121"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.121" endtime="20250106 09:59:46.121"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.121" endtime="20250106 09:59:46.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.122" endtime="20250106 09:59:46.122"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.118" endtime="20250106 09:59:46.122"/>
</kw>
<msg timestamp="20250106 09:59:46.123" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:46.117" endtime="20250106 09:59:46.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:46.124" level="INFO">${exp_index} = Forms</msg>
<status status="PASS" starttime="20250106 09:59:46.123" endtime="20250106 09:59:46.124"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.116" endtime="20250106 09:59:46.124"/>
</kw>
<msg timestamp="20250106 09:59:46.124" level="INFO">${header_item} = Forms</msg>
<status status="PASS" starttime="20250106 09:59:46.115" endtime="20250106 09:59:46.124"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:46.150" level="INFO">${class} = element-list collapse</msg>
<status status="PASS" starttime="20250106 09:59:46.124" endtime="20250106 09:59:46.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Scroll_Customs" library="utils">
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:46.152" endtime="20250106 09:59:46.445"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:46.446" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:46.445" endtime="20250106 09:59:46.453"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.152" endtime="20250106 09:59:46.453"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.151" endtime="20250106 09:59:46.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:46.454" level="INFO">Clicking element 'xpath=//div[@class="header-text"][text()='Forms']'.</msg>
<status status="PASS" starttime="20250106 09:59:46.454" endtime="20250106 09:59:46.530"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.453" endtime="20250106 09:59:46.530"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:46.531" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:46.531" endtime="20250106 09:59:46.531"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:46.532" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:46.532" endtime="20250106 09:59:46.532"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.532" endtime="20250106 09:59:46.532"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.532" endtime="20250106 09:59:46.533"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:46.534" level="INFO">@{list} = [ Practice Form ]</msg>
<status status="PASS" starttime="20250106 09:59:46.533" endtime="20250106 09:59:46.535"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.533" endtime="20250106 09:59:46.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.535" endtime="20250106 09:59:46.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.536" endtime="20250106 09:59:46.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.537" endtime="20250106 09:59:46.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:46.537" endtime="20250106 09:59:46.537"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.531" endtime="20250106 09:59:46.538"/>
</kw>
<msg timestamp="20250106 09:59:46.538" level="INFO">${expected_list} = ['Practice Form']</msg>
<status status="PASS" starttime="20250106 09:59:46.531" endtime="20250106 09:59:46.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:46.538" level="INFO">${exp_index} = Practice Form</msg>
<status status="PASS" starttime="20250106 09:59:46.538" endtime="20250106 09:59:46.538"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.530" endtime="20250106 09:59:46.539"/>
</kw>
<msg timestamp="20250106 09:59:46.539" level="INFO">${menu_item} = Practice Form</msg>
<status status="PASS" starttime="20250106 09:59:46.530" endtime="20250106 09:59:46.539"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:46.540" endtime="20250106 09:59:46.841"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:46.842" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:46.842" endtime="20250106 09:59:46.847"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.539" endtime="20250106 09:59:46.847"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:46.848" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Practice Form']'.</msg>
<status status="PASS" starttime="20250106 09:59:46.847" endtime="20250106 09:59:46.957"/>
</kw>
<status status="PASS" starttime="20250106 09:59:46.115" endtime="20250106 09:59:46.957"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="firstName"]</arg>
<arg>Hiep</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:46.958" level="INFO">Typing text 'Hiep' into text field 'xpath=//input[@id="firstName"]'.</msg>
<status status="PASS" starttime="20250106 09:59:46.958" endtime="20250106 09:59:47.077"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="lastName"]</arg>
<arg>Cao</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:47.078" level="INFO">Typing text 'Cao' into text field 'xpath=//input[@id="lastName"]'.</msg>
<status status="PASS" starttime="20250106 09:59:47.078" endtime="20250106 09:59:47.251"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="userEmail"]</arg>
<arg>cmhiep@tma.com.vn</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:47.253" level="INFO">Typing text 'cmhiep@tma.com.vn' into text field 'xpath=//input[@id="userEmail"]'.</msg>
<status status="PASS" starttime="20250106 09:59:47.252" endtime="20250106 09:59:47.456"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//label[@for="gender-radio-1"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:47.457" level="INFO">Clicking element 'xpath=//label[@for="gender-radio-1"]'.</msg>
<status status="PASS" starttime="20250106 09:59:47.456" endtime="20250106 09:59:47.611"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="userNumber"]</arg>
<arg>0369965448</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:47.611" level="INFO">Typing text '0369965448' into text field '//input[@id="userNumber"]'.</msg>
<status status="PASS" starttime="20250106 09:59:47.611" endtime="20250106 09:59:47.809"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//input[@id="dateOfBirthInput"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:47.810" level="INFO">Clicking element 'xpath=//input[@id="dateOfBirthInput"]'.</msg>
<status status="PASS" starttime="20250106 09:59:47.810" endtime="20250106 09:59:48.041"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//select[@class="react-datepicker__year-select"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:48.043" level="INFO">Clicking element 'xpath=//select[@class="react-datepicker__year-select"]'.</msg>
<status status="PASS" starttime="20250106 09:59:48.042" endtime="20250106 09:59:48.315"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>xpath=//select[@class='react-datepicker__year-select']</arg>
<arg>1999</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250106 09:59:48.316" level="INFO">Selecting options from selection list 'xpath=//select[@class='react-datepicker__year-select']' by value 1999.</msg>
<status status="PASS" starttime="20250106 09:59:48.316" endtime="20250106 09:59:48.515"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//select[@class="react-datepicker__month-select"]/option[@value='10']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:48.516" level="INFO">Clicking element 'xpath=//select[@class="react-datepicker__month-select"]/option[@value='10']'.</msg>
<status status="PASS" starttime="20250106 09:59:48.516" endtime="20250106 09:59:48.577"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']</arg>
<arg>10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 09:59:48.578" endtime="20250106 09:59:48.603"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:48.604" level="INFO">Clicking element 'xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']'.</msg>
<status status="PASS" starttime="20250106 09:59:48.603" endtime="20250106 09:59:48.733"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//input[@id='subjectsInput']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:48.734" level="INFO">Clicking element 'xpath=//input[@id='subjectsInput']'.</msg>
<status status="PASS" starttime="20250106 09:59:48.733" endtime="20250106 09:59:48.949"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id='subjectsInput']</arg>
<arg>Maths</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:48.950" level="INFO">Typing text 'Maths' into text field 'xpath=//input[@id='subjectsInput']'.</msg>
<status status="PASS" starttime="20250106 09:59:48.949" endtime="20250106 09:59:49.123"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>xpath=//input[@id='subjectsInput']</arg>
<arg>ENTER</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250106 09:59:49.124" level="INFO">Sending key(s) ('ENTER',) to xpath=//input[@id='subjectsInput'] element.</msg>
<msg timestamp="20250106 09:59:49.447" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20250106 09:59:49.447" level="INFO">Releasing special key ENTER.</msg>
<status status="PASS" starttime="20250106 09:59:49.124" endtime="20250106 09:59:49.464"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=//label[@for="hobbies-checkbox-1"]</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:49.465" endtime="20250106 09:59:49.738"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollTo(0,100)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:49.740" level="INFO">Executing JavaScript:
window.scrollTo(0,100)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:49.739" endtime="20250106 09:59:49.749"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//label[@for="hobbies-checkbox-1"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:49.751" level="INFO">Clicking element 'xpath=//label[@for="hobbies-checkbox-1"]'.</msg>
<status status="PASS" starttime="20250106 09:59:49.750" endtime="20250106 09:59:49.824"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//label[@for="hobbies-checkbox-2"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:49.825" level="INFO">Clicking element 'xpath=//label[@for="hobbies-checkbox-2"]'.</msg>
<status status="PASS" starttime="20250106 09:59:49.825" endtime="20250106 09:59:49.959"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//label[@for="hobbies-checkbox-3"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:49.960" level="INFO">Clicking element 'xpath=//label[@for="hobbies-checkbox-3"]'.</msg>
<status status="PASS" starttime="20250106 09:59:49.959" endtime="20250106 09:59:50.084"/>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<arg>xpath=//input[@id="uploadPicture"]</arg>
<arg>D:/file.txt</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20250106 09:59:50.086" level="INFO">Sending D:\file.txt to browser.</msg>
<status status="PASS" starttime="20250106 09:59:50.086" endtime="20250106 09:59:50.182"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${uploaded_file_name}</var>
<arg>xpath=//input[@id="uploadPicture"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:50.244" level="INFO">${uploaded_file_name} = </msg>
<status status="PASS" starttime="20250106 09:59:50.183" endtime="20250106 09:59:50.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded File: ${uploaded_file_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 09:59:50.245" level="INFO">Uploaded File: </msg>
<status status="PASS" starttime="20250106 09:59:50.245" endtime="20250106 09:59:50.245"/>
</kw>
<doc>This test case fills out the practice form and verifies that all inputs are correctly entered.</doc>
<status status="PASS" starttime="20250106 09:59:46.105" endtime="20250106 09:59:50.246"/>
</test>
<test id="s1-t11" name="Test New Tab Functionality" line="262">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:50.249" endtime="20250106 09:59:50.250"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:50.252" endtime="20250106 09:59:50.255"/>
</kw>
<msg timestamp="20250106 09:59:50.255" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:50.251" endtime="20250106 09:59:50.255"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:50.256" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:50.255" endtime="20250106 09:59:50.257"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.257" endtime="20250106 09:59:50.257"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.250" endtime="20250106 09:59:50.257"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.248" endtime="20250106 09:59:50.257"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies the ability to open a new tab, check its content, and switch back to the main window.s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:50.258" endtime="20250106 09:59:50.258"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>3</arg>
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:50.261" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:50.260" endtime="20250106 09:59:50.261"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:50.263" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:50.262" endtime="20250106 09:59:50.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:50.264" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:50.263" endtime="20250106 09:59:50.264"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.263" endtime="20250106 09:59:50.264"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.264" endtime="20250106 09:59:50.264"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.264" endtime="20250106 09:59:50.265"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.265" endtime="20250106 09:59:50.265"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.265" endtime="20250106 09:59:50.265"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.266" endtime="20250106 09:59:50.266"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.266" endtime="20250106 09:59:50.266"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.262" endtime="20250106 09:59:50.266"/>
</kw>
<msg timestamp="20250106 09:59:50.267" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:50.262" endtime="20250106 09:59:50.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:50.267" level="INFO">${exp_index} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:50.267" endtime="20250106 09:59:50.267"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.260" endtime="20250106 09:59:50.268"/>
</kw>
<msg timestamp="20250106 09:59:50.268" level="INFO">${header_item} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:50.259" endtime="20250106 09:59:50.268"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:50.292" level="INFO">${class} = element-list collapse</msg>
<status status="PASS" starttime="20250106 09:59:50.268" endtime="20250106 09:59:50.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Scroll_Customs" library="utils">
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:50.293" endtime="20250106 09:59:50.641"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:50.642" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:50.641" endtime="20250106 09:59:50.649"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.293" endtime="20250106 09:59:50.649"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.293" endtime="20250106 09:59:50.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:50.650" level="INFO">Clicking element 'xpath=//div[@class="header-text"][text()='Alerts, Frame &amp; Windows']'.</msg>
<status status="PASS" starttime="20250106 09:59:50.650" endtime="20250106 09:59:50.725"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.649" endtime="20250106 09:59:50.725"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:50.727" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 09:59:50.726" endtime="20250106 09:59:50.727"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:50.728" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:50.728" endtime="20250106 09:59:50.728"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.728" endtime="20250106 09:59:50.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.729" endtime="20250106 09:59:50.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.729" endtime="20250106 09:59:50.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:50.730" level="INFO">@{list} = [ Browser Windows | Alerts | Frames | Nested Frames | Modal Dialogs ]</msg>
<status status="PASS" starttime="20250106 09:59:50.730" endtime="20250106 09:59:50.730"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.730" endtime="20250106 09:59:50.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.731" endtime="20250106 09:59:50.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.731" endtime="20250106 09:59:50.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:50.731" endtime="20250106 09:59:50.732"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.727" endtime="20250106 09:59:50.732"/>
</kw>
<msg timestamp="20250106 09:59:50.732" level="INFO">${expected_list} = ['Browser Windows', 'Alerts', 'Frames', 'Nested Frames', 'Modal Dialogs']</msg>
<status status="PASS" starttime="20250106 09:59:50.727" endtime="20250106 09:59:50.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:50.733" level="INFO">${exp_index} = Browser Windows</msg>
<status status="PASS" starttime="20250106 09:59:50.732" endtime="20250106 09:59:50.733"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.726" endtime="20250106 09:59:50.733"/>
</kw>
<msg timestamp="20250106 09:59:50.733" level="INFO">${menu_item} = Browser Windows</msg>
<status status="PASS" starttime="20250106 09:59:50.725" endtime="20250106 09:59:50.733"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:50.734" endtime="20250106 09:59:51.077"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:51.078" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:51.077" endtime="20250106 09:59:51.082"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.734" endtime="20250106 09:59:51.082"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:51.083" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Browser Windows']'.</msg>
<status status="PASS" starttime="20250106 09:59:51.083" endtime="20250106 09:59:51.169"/>
</kw>
<status status="PASS" starttime="20250106 09:59:50.259" endtime="20250106 09:59:51.169"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=tabButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:51.170" level="INFO">Clicking button 'id=tabButton'.</msg>
<status status="PASS" starttime="20250106 09:59:51.170" endtime="20250106 09:59:51.304"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>NEW</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250106 09:59:51.306" endtime="20250106 09:59:51.319"/>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<arg>xpath=//h1</arg>
<arg>This is a sample page</arg>
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<msg timestamp="20250106 09:59:51.597" level="INFO">Element 'xpath=//h1' contains text 'This is a sample page'.</msg>
<status status="PASS" starttime="20250106 09:59:51.320" endtime="20250106 09:59:51.597"/>
</kw>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20250106 09:59:51.598" endtime="20250106 09:59:51.702"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>MAIN</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250106 09:59:51.703" endtime="20250106 09:59:51.711"/>
</kw>
<doc>This test case verifies the ability to open a new tab, check its content, and switch back to the main window.</doc>
<status status="PASS" starttime="20250106 09:59:50.247" endtime="20250106 09:59:51.711"/>
</test>
<test id="s1-t12" name="Test_Alerts" line="281">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:51.714" endtime="20250106 09:59:51.718"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:51.719" endtime="20250106 09:59:51.724"/>
</kw>
<msg timestamp="20250106 09:59:51.724" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:51.719" endtime="20250106 09:59:51.724"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:51.725" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:51.724" endtime="20250106 09:59:51.725"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.726" endtime="20250106 09:59:51.726"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.719" endtime="20250106 09:59:51.727"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.713" endtime="20250106 09:59:51.727"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks various alert interactions, including accepting, dismissing, and entering text into prompts.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:51.727" endtime="20250106 09:59:51.728"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>3</arg>
<arg>2</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:51.731" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:51.730" endtime="20250106 09:59:51.731"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:51.732" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:51.732" endtime="20250106 09:59:51.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:51.733" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:51.733" endtime="20250106 09:59:51.733"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.732" endtime="20250106 09:59:51.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.733" endtime="20250106 09:59:51.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.734" endtime="20250106 09:59:51.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.734" endtime="20250106 09:59:51.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.735" endtime="20250106 09:59:51.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.735" endtime="20250106 09:59:51.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.736" endtime="20250106 09:59:51.736"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.731" endtime="20250106 09:59:51.737"/>
</kw>
<msg timestamp="20250106 09:59:51.737" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:51.731" endtime="20250106 09:59:51.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:51.737" level="INFO">${exp_index} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:51.737" endtime="20250106 09:59:51.739"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.730" endtime="20250106 09:59:51.739"/>
</kw>
<msg timestamp="20250106 09:59:51.740" level="INFO">${header_item} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:51.729" endtime="20250106 09:59:51.740"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:51.765" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:51.740" endtime="20250106 09:59:51.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.766" endtime="20250106 09:59:51.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.766" endtime="20250106 09:59:51.767"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:51.769" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20250106 09:59:51.768" endtime="20250106 09:59:51.769"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:51.770" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:51.770" endtime="20250106 09:59:51.771"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.771" endtime="20250106 09:59:51.771"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.772" endtime="20250106 09:59:51.773"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.773" endtime="20250106 09:59:51.774"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:51.775" level="INFO">@{list} = [ Browser Windows | Alerts | Frames | Nested Frames | Modal Dialogs ]</msg>
<status status="PASS" starttime="20250106 09:59:51.774" endtime="20250106 09:59:51.775"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.774" endtime="20250106 09:59:51.775"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.776" endtime="20250106 09:59:51.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.776" endtime="20250106 09:59:51.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:51.777" endtime="20250106 09:59:51.777"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.770" endtime="20250106 09:59:51.778"/>
</kw>
<msg timestamp="20250106 09:59:51.778" level="INFO">${expected_list} = ['Browser Windows', 'Alerts', 'Frames', 'Nested Frames', 'Modal Dialogs']</msg>
<status status="PASS" starttime="20250106 09:59:51.770" endtime="20250106 09:59:51.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:51.780" level="INFO">${exp_index} = Alerts</msg>
<status status="PASS" starttime="20250106 09:59:51.779" endtime="20250106 09:59:51.780"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.767" endtime="20250106 09:59:51.780"/>
</kw>
<msg timestamp="20250106 09:59:51.780" level="INFO">${menu_item} = Alerts</msg>
<status status="PASS" starttime="20250106 09:59:51.767" endtime="20250106 09:59:51.781"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:51.781" endtime="20250106 09:59:52.126"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:52.127" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:52.126" endtime="20250106 09:59:52.133"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.781" endtime="20250106 09:59:52.133"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:52.134" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Alerts']'.</msg>
<status status="PASS" starttime="20250106 09:59:52.133" endtime="20250106 09:59:52.214"/>
</kw>
<status status="PASS" starttime="20250106 09:59:51.729" endtime="20250106 09:59:52.214"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=alertButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:52.215" level="INFO">Clicking button 'id=alertButton'.</msg>
<status status="PASS" starttime="20250106 09:59:52.215" endtime="20250106 09:59:52.354"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>action=accept</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250106 09:59:52.356" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250106 09:59:52.356" endtime="20250106 09:59:52.362"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=timerAlertButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:52.364" level="INFO">Clicking button 'id=timerAlertButton'.</msg>
<status status="PASS" starttime="20250106 09:59:52.363" endtime="20250106 09:59:52.484"/>
</kw>
<kw name="Alert Should Be Present" library="SeleniumLibrary">
<arg>text=This alert appeared after 5 seconds</arg>
<arg>timeout=10</arg>
<doc>Verifies that an alert is present and by default, accepts it.</doc>
<msg timestamp="20250106 09:59:52.484" level="INFO">HANDLE::&lt;class 'datetime.timedelta'&gt;::0:00:10</msg>
<status status="PASS" starttime="20250106 09:59:52.484" endtime="20250106 09:59:57.521"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=confirmButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:57.523" level="INFO">Clicking button 'id=confirmButton'.</msg>
<status status="PASS" starttime="20250106 09:59:57.522" endtime="20250106 09:59:57.637"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>action=DISMISS</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250106 09:59:57.638" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250106 09:59:57.638" endtime="20250106 09:59:57.643"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You selected Cancel</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:57.689" level="INFO">Current page contains text 'You selected Cancel'.</msg>
<status status="PASS" starttime="20250106 09:59:57.644" endtime="20250106 09:59:57.690"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=confirmButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:57.691" level="INFO">Clicking button 'id=confirmButton'.</msg>
<status status="PASS" starttime="20250106 09:59:57.690" endtime="20250106 09:59:57.820"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>action=accept</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250106 09:59:57.821" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250106 09:59:57.821" endtime="20250106 09:59:57.826"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You selected Ok</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:57.849" level="INFO">Current page contains text 'You selected Ok'.</msg>
<status status="PASS" starttime="20250106 09:59:57.827" endtime="20250106 09:59:57.849"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=promtButton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:57.850" level="INFO">Clicking button 'id=promtButton'.</msg>
<status status="PASS" starttime="20250106 09:59:57.849" endtime="20250106 09:59:57.994"/>
</kw>
<kw name="Input Text Into Alert" library="SeleniumLibrary">
<arg>CMHiep</arg>
<doc>Types the given ``text`` into an input field in an alert.</doc>
<status status="PASS" starttime="20250106 09:59:57.995" endtime="20250106 09:59:58.001"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>You entered CMHiep</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250106 09:59:58.025" level="INFO">Current page contains text 'You entered CMHiep'.</msg>
<status status="PASS" starttime="20250106 09:59:58.002" endtime="20250106 09:59:58.025"/>
</kw>
<doc>This test case checks various alert interactions, including accepting, dismissing, and entering text into prompts.</doc>
<status status="PASS" starttime="20250106 09:59:51.713" endtime="20250106 09:59:58.025"/>
</test>
<test id="s1-t13" name="Test_Frame" line="315">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:58.029" endtime="20250106 09:59:58.031"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:58.032" endtime="20250106 09:59:58.033"/>
</kw>
<msg timestamp="20250106 09:59:58.034" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:58.031" endtime="20250106 09:59:58.034"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:58.035" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:58.034" endtime="20250106 09:59:58.035"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.036" endtime="20250106 09:59:58.036"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.031" endtime="20250106 09:59:58.036"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.029" endtime="20250106 09:59:58.036"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case interacts with frames on the page, retrieving and logging text from each frame.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:58.037" endtime="20250106 09:59:58.037"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>3</arg>
<arg>3</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:58.039" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:58.039" endtime="20250106 09:59:58.039"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:58.040" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:58.040" endtime="20250106 09:59:58.040"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:58.041" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:58.041" endtime="20250106 09:59:58.041"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.041" endtime="20250106 09:59:58.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.042" endtime="20250106 09:59:58.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.042" endtime="20250106 09:59:58.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.043" endtime="20250106 09:59:58.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.043" endtime="20250106 09:59:58.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.044" endtime="20250106 09:59:58.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.045" endtime="20250106 09:59:58.045"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.040" endtime="20250106 09:59:58.046"/>
</kw>
<msg timestamp="20250106 09:59:58.046" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:58.040" endtime="20250106 09:59:58.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:58.047" level="INFO">${exp_index} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:58.046" endtime="20250106 09:59:58.047"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.038" endtime="20250106 09:59:58.047"/>
</kw>
<msg timestamp="20250106 09:59:58.047" level="INFO">${header_item} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:58.038" endtime="20250106 09:59:58.047"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:58.119" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:58.047" endtime="20250106 09:59:58.119"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.119" endtime="20250106 09:59:58.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.120" endtime="20250106 09:59:58.120"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:58.121" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:58.121" endtime="20250106 09:59:58.121"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:58.122" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:58.122" endtime="20250106 09:59:58.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.123" endtime="20250106 09:59:58.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.123" endtime="20250106 09:59:58.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.123" endtime="20250106 09:59:58.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:58.125" level="INFO">@{list} = [ Browser Windows | Alerts | Frames | Nested Frames | Modal Dialogs ]</msg>
<status status="PASS" starttime="20250106 09:59:58.124" endtime="20250106 09:59:58.125"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.124" endtime="20250106 09:59:58.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.125" endtime="20250106 09:59:58.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.125" endtime="20250106 09:59:58.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:58.126" endtime="20250106 09:59:58.126"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.122" endtime="20250106 09:59:58.126"/>
</kw>
<msg timestamp="20250106 09:59:58.127" level="INFO">${expected_list} = ['Browser Windows', 'Alerts', 'Frames', 'Nested Frames', 'Modal Dialogs']</msg>
<status status="PASS" starttime="20250106 09:59:58.121" endtime="20250106 09:59:58.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:58.129" level="INFO">${exp_index} = Frames</msg>
<status status="PASS" starttime="20250106 09:59:58.127" endtime="20250106 09:59:58.129"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.120" endtime="20250106 09:59:58.130"/>
</kw>
<msg timestamp="20250106 09:59:58.130" level="INFO">${menu_item} = Frames</msg>
<status status="PASS" starttime="20250106 09:59:58.120" endtime="20250106 09:59:58.130"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:58.131" endtime="20250106 09:59:58.426"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:58.427" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:58.426" endtime="20250106 09:59:58.438"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.130" endtime="20250106 09:59:58.438"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:58.439" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Frames']'.</msg>
<status status="PASS" starttime="20250106 09:59:58.438" endtime="20250106 09:59:58.560"/>
</kw>
<status status="PASS" starttime="20250106 09:59:58.038" endtime="20250106 09:59:58.561"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>frame1</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20250106 09:59:58.562" level="INFO">Selecting frame 'frame1'.</msg>
<status status="PASS" starttime="20250106 09:59:58.561" endtime="20250106 09:59:58.834"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${TEXT_FRAME}</var>
<arg>xpath=//h1[@id="sampleHeading"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:58.858" level="INFO">${TEXT_FRAME} = This is a sample page</msg>
<status status="PASS" starttime="20250106 09:59:58.835" endtime="20250106 09:59:58.858"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${TEXT_FRAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:58.859" endtime="20250106 09:59:58.859"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20250106 09:59:58.860" endtime="20250106 09:59:58.864"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>frame2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20250106 09:59:58.865" level="INFO">Selecting frame 'frame2'.</msg>
<status status="PASS" starttime="20250106 09:59:58.865" endtime="20250106 09:59:59.364"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${TEXT_FRAME}</var>
<arg>xpath=//h1[@id="sampleHeading"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:59.382" level="INFO">${TEXT_FRAME} = This is a sample page</msg>
<status status="PASS" starttime="20250106 09:59:59.365" endtime="20250106 09:59:59.382"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${TEXT_FRAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:59.383" endtime="20250106 09:59:59.384"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20250106 09:59:59.384" endtime="20250106 09:59:59.387"/>
</kw>
<doc>This test case interacts with frames on the page, retrieving and logging text from each frame.</doc>
<status status="PASS" starttime="20250106 09:59:58.027" endtime="20250106 09:59:59.387"/>
</test>
<test id="s1-t14" name="Test_Nested_Frames" line="334">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 09:59:59.389" endtime="20250106 09:59:59.391"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 09:59:59.392" endtime="20250106 09:59:59.394"/>
</kw>
<msg timestamp="20250106 09:59:59.394" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 09:59:59.392" endtime="20250106 09:59:59.394"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 09:59:59.396" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 09:59:59.394" endtime="20250106 09:59:59.396"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.396" endtime="20250106 09:59:59.397"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.391" endtime="20250106 09:59:59.397"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.389" endtime="20250106 09:59:59.397"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies text content within nested frames, switching between parent and child frames.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 09:59:59.398" endtime="20250106 09:59:59.398"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>3</arg>
<arg>4</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:59.400" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 09:59:59.400" endtime="20250106 09:59:59.401"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:59.402" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:59.401" endtime="20250106 09:59:59.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:59.403" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 09:59:59.402" endtime="20250106 09:59:59.403"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.402" endtime="20250106 09:59:59.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.403" endtime="20250106 09:59:59.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.403" endtime="20250106 09:59:59.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.404" endtime="20250106 09:59:59.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.404" endtime="20250106 09:59:59.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.405" endtime="20250106 09:59:59.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.406" endtime="20250106 09:59:59.406"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.401" endtime="20250106 09:59:59.406"/>
</kw>
<msg timestamp="20250106 09:59:59.406" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 09:59:59.401" endtime="20250106 09:59:59.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:59.407" level="INFO">${exp_index} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:59.406" endtime="20250106 09:59:59.407"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.400" endtime="20250106 09:59:59.407"/>
</kw>
<msg timestamp="20250106 09:59:59.407" level="INFO">${header_item} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 09:59:59.399" endtime="20250106 09:59:59.407"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 09:59:59.427" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 09:59:59.407" endtime="20250106 09:59:59.427"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.428" endtime="20250106 09:59:59.428"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.428" endtime="20250106 09:59:59.429"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 09:59:59.431" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 09:59:59.431" endtime="20250106 09:59:59.432"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 09:59:59.433" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 09:59:59.432" endtime="20250106 09:59:59.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.433" endtime="20250106 09:59:59.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.434" endtime="20250106 09:59:59.434"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.434" endtime="20250106 09:59:59.435"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 09:59:59.436" level="INFO">@{list} = [ Browser Windows | Alerts | Frames | Nested Frames | Modal Dialogs ]</msg>
<status status="PASS" starttime="20250106 09:59:59.435" endtime="20250106 09:59:59.437"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.435" endtime="20250106 09:59:59.437"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.437" endtime="20250106 09:59:59.437"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.438" endtime="20250106 09:59:59.438"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 09:59:59.438" endtime="20250106 09:59:59.438"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.432" endtime="20250106 09:59:59.439"/>
</kw>
<msg timestamp="20250106 09:59:59.439" level="INFO">${expected_list} = ['Browser Windows', 'Alerts', 'Frames', 'Nested Frames', 'Modal Dialogs']</msg>
<status status="PASS" starttime="20250106 09:59:59.432" endtime="20250106 09:59:59.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 09:59:59.439" level="INFO">${exp_index} = Nested Frames</msg>
<status status="PASS" starttime="20250106 09:59:59.439" endtime="20250106 09:59:59.439"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.430" endtime="20250106 09:59:59.440"/>
</kw>
<msg timestamp="20250106 09:59:59.440" level="INFO">${menu_item} = Nested Frames</msg>
<status status="PASS" starttime="20250106 09:59:59.430" endtime="20250106 09:59:59.440"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 09:59:59.440" endtime="20250106 09:59:59.761"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 09:59:59.762" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 09:59:59.761" endtime="20250106 09:59:59.769"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.440" endtime="20250106 09:59:59.769"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 09:59:59.770" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Nested Frames']'.</msg>
<status status="PASS" starttime="20250106 09:59:59.770" endtime="20250106 09:59:59.873"/>
</kw>
<status status="PASS" starttime="20250106 09:59:59.399" endtime="20250106 09:59:59.874"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id=frame1</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20250106 09:59:59.875" level="INFO">Selecting frame 'id=frame1'.</msg>
<status status="PASS" starttime="20250106 09:59:59.874" endtime="20250106 10:00:00.153"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${outer_text}</var>
<arg>xpath=//body</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:00.176" level="INFO">${outer_text} = Parent frame</msg>
<status status="PASS" starttime="20250106 10:00:00.153" endtime="20250106 10:00:00.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Text in Outer Frame: ${outer_text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:00.177" level="INFO">Text in Outer Frame: Parent frame</msg>
<status status="PASS" starttime="20250106 10:00:00.177" endtime="20250106 10:00:00.177"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${outer_text}</arg>
<arg>Parent frame</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:00:00.178" endtime="20250106 10:00:00.178"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>xpath=//iframe</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20250106 10:00:00.180" level="INFO">Selecting frame 'xpath=//iframe'.</msg>
<status status="PASS" starttime="20250106 10:00:00.179" endtime="20250106 10:00:00.210"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${inner_text}</var>
<arg>xpath=//p</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:00.233" level="INFO">${inner_text} = Child Iframe</msg>
<status status="PASS" starttime="20250106 10:00:00.211" endtime="20250106 10:00:00.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Text in Inner Frame: ${inner_text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:00.234" level="INFO">Text in Inner Frame: Child Iframe</msg>
<status status="PASS" starttime="20250106 10:00:00.234" endtime="20250106 10:00:00.234"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${inner_text}</arg>
<arg>Child Iframe</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:00:00.235" endtime="20250106 10:00:00.235"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20250106 10:00:00.235" endtime="20250106 10:00:00.238"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20250106 10:00:00.238" endtime="20250106 10:00:00.241"/>
</kw>
<doc>This test case verifies text content within nested frames, switching between parent and child frames.</doc>
<status status="PASS" starttime="20250106 09:59:59.389" endtime="20250106 10:00:00.241"/>
</test>
<test id="s1-t15" name="Test Modal Dialogs" line="359">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:00.243" endtime="20250106 10:00:00.244"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:00.246" endtime="20250106 10:00:00.249"/>
</kw>
<msg timestamp="20250106 10:00:00.249" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:00.245" endtime="20250106 10:00:00.249"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:00.250" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:00.249" endtime="20250106 10:00:00.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.251" endtime="20250106 10:00:00.251"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.245" endtime="20250106 10:00:00.252"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.243" endtime="20250106 10:00:00.252"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case checks both small and large modal dialogs, verifying content and closing each dialog.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:00.252" endtime="20250106 10:00:00.253"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>3</arg>
<arg>5</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:00.255" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 10:00:00.254" endtime="20250106 10:00:00.255"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:00.256" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:00.256" endtime="20250106 10:00:00.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:00.257" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:00.257" endtime="20250106 10:00:00.257"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.256" endtime="20250106 10:00:00.257"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.257" endtime="20250106 10:00:00.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.258" endtime="20250106 10:00:00.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.258" endtime="20250106 10:00:00.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.259" endtime="20250106 10:00:00.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.259" endtime="20250106 10:00:00.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.260" endtime="20250106 10:00:00.260"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.255" endtime="20250106 10:00:00.260"/>
</kw>
<msg timestamp="20250106 10:00:00.261" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:00.255" endtime="20250106 10:00:00.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:00.261" level="INFO">${exp_index} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 10:00:00.261" endtime="20250106 10:00:00.261"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.254" endtime="20250106 10:00:00.261"/>
</kw>
<msg timestamp="20250106 10:00:00.262" level="INFO">${header_item} = Alerts, Frame &amp; Windows</msg>
<status status="PASS" starttime="20250106 10:00:00.254" endtime="20250106 10:00:00.264"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:00.315" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:00.265" endtime="20250106 10:00:00.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.315" endtime="20250106 10:00:00.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.315" endtime="20250106 10:00:00.316"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:00.317" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:00:00.317" endtime="20250106 10:00:00.317"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:00.318" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:00.318" endtime="20250106 10:00:00.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.318" endtime="20250106 10:00:00.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.319" endtime="20250106 10:00:00.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.319" endtime="20250106 10:00:00.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:00.320" level="INFO">@{list} = [ Browser Windows | Alerts | Frames | Nested Frames | Modal Dialogs ]</msg>
<status status="PASS" starttime="20250106 10:00:00.320" endtime="20250106 10:00:00.320"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.320" endtime="20250106 10:00:00.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.321" endtime="20250106 10:00:00.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.321" endtime="20250106 10:00:00.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:00.321" endtime="20250106 10:00:00.322"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.317" endtime="20250106 10:00:00.322"/>
</kw>
<msg timestamp="20250106 10:00:00.322" level="INFO">${expected_list} = ['Browser Windows', 'Alerts', 'Frames', 'Nested Frames', 'Modal Dialogs']</msg>
<status status="PASS" starttime="20250106 10:00:00.317" endtime="20250106 10:00:00.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:00.323" level="INFO">${exp_index} = Modal Dialogs</msg>
<status status="PASS" starttime="20250106 10:00:00.323" endtime="20250106 10:00:00.323"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.316" endtime="20250106 10:00:00.323"/>
</kw>
<msg timestamp="20250106 10:00:00.324" level="INFO">${menu_item} = Modal Dialogs</msg>
<status status="PASS" starttime="20250106 10:00:00.316" endtime="20250106 10:00:00.324"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:00.324" endtime="20250106 10:00:00.604"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:00.605" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:00.604" endtime="20250106 10:00:00.612"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.324" endtime="20250106 10:00:00.612"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:00.613" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Modal Dialogs']'.</msg>
<status status="PASS" starttime="20250106 10:00:00.612" endtime="20250106 10:00:00.687"/>
</kw>
<status status="PASS" starttime="20250106 10:00:00.253" endtime="20250106 10:00:00.687"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=showSmallModal</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:00.688" level="INFO">Clicking button 'id=showSmallModal'.</msg>
<status status="PASS" starttime="20250106 10:00:00.688" endtime="20250106 10:00:00.788"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id=example-modal-sizes-title-sm</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:00.789" endtime="20250106 10:00:01.031"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${small_modal_text}</var>
<arg>id=example-modal-sizes-title-sm</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:01.048" level="INFO">${small_modal_text} = Small Modal</msg>
<status status="PASS" starttime="20250106 10:00:01.031" endtime="20250106 10:00:01.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Small Modal Text: ${small_modal_text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:01.049" level="INFO">Small Modal Text: Small Modal</msg>
<status status="PASS" starttime="20250106 10:00:01.049" endtime="20250106 10:00:01.050"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${small_modal_text}</arg>
<arg>Small Modal</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:00:01.050" endtime="20250106 10:00:01.051"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${small_content}</var>
<arg>xpath=//div[@class='modal-body'][contains(text(),'This is a small modal. It has very less content')]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:01.072" level="INFO">${small_content} = This is a small modal. It has very less content</msg>
<status status="PASS" starttime="20250106 10:00:01.051" endtime="20250106 10:00:01.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Small Modal Content: ${small_content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:01.074" level="INFO">Small Modal Content: This is a small modal. It has very less content</msg>
<status status="PASS" starttime="20250106 10:00:01.073" endtime="20250106 10:00:01.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${small_content}</arg>
<arg>This is a small modal.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:00:01.074" endtime="20250106 10:00:01.075"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=closeSmallModal</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:01.075" level="INFO">Clicking button 'id=closeSmallModal'.</msg>
<status status="PASS" starttime="20250106 10:00:01.075" endtime="20250106 10:00:01.163"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>id=example-modal-sizes-title-sm</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250106 10:00:01.166" endtime="20250106 10:00:11.402"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=showLargeModal</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:11.403" level="INFO">Clicking button 'id=showLargeModal'.</msg>
<status status="PASS" starttime="20250106 10:00:11.403" endtime="20250106 10:00:11.486"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id=example-modal-sizes-title-lg</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:11.487" endtime="20250106 10:00:11.510"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${large_modal_text}</var>
<arg>id=example-modal-sizes-title-lg</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:11.535" level="INFO">${large_modal_text} = Large Modal</msg>
<status status="PASS" starttime="20250106 10:00:11.511" endtime="20250106 10:00:11.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Large Modal Text: ${large_modal_text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:11.536" level="INFO">Large Modal Text: Large Modal</msg>
<status status="PASS" starttime="20250106 10:00:11.536" endtime="20250106 10:00:11.536"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${large_modal_text}</arg>
<arg>Large Modal</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:00:11.537" endtime="20250106 10:00:11.537"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${large_content}</var>
<arg>xpath=//div[@class='modal-body']/p</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:11.578" level="INFO">${large_content} = Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type a...</msg>
<status status="PASS" starttime="20250106 10:00:11.538" endtime="20250106 10:00:11.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Large Modal Content: ${large_content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:11.580" level="INFO">Large Modal Content: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</msg>
<status status="PASS" starttime="20250106 10:00:11.579" endtime="20250106 10:00:11.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${large_content}</arg>
<arg>Lorem Ipsum</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:00:11.580" endtime="20250106 10:00:11.581"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id=closeLargeModal</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:11.582" level="INFO">Clicking button 'id=closeLargeModal'.</msg>
<status status="PASS" starttime="20250106 10:00:11.581" endtime="20250106 10:00:11.693"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>id=example-modal-sizes-title-lg</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250106 10:00:11.694" endtime="20250106 10:00:22.024"/>
</kw>
<doc>This test case checks both small and large modal dialogs, verifying content and closing each dialog.</doc>
<status status="PASS" starttime="20250106 10:00:00.242" endtime="20250106 10:00:22.025"/>
</test>
<test id="s1-t16" name="Test Accordian Sections" line="398">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:22.028" endtime="20250106 10:00:22.030"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:22.031" endtime="20250106 10:00:22.034"/>
</kw>
<msg timestamp="20250106 10:00:22.034" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:22.031" endtime="20250106 10:00:22.034"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:22.036" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:22.034" endtime="20250106 10:00:22.036"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.036" endtime="20250106 10:00:22.037"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.030" endtime="20250106 10:00:22.037"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.028" endtime="20250106 10:00:22.037"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case verifies the content of accordion sections by expanding and collapsing sections 2 and 3, and checking their displayed content.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:22.038" endtime="20250106 10:00:22.038"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:22.041" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:22.040" endtime="20250106 10:00:22.041"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:22.042" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:22.042" endtime="20250106 10:00:22.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:22.044" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:22.043" endtime="20250106 10:00:22.044"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.043" endtime="20250106 10:00:22.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.045" endtime="20250106 10:00:22.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.045" endtime="20250106 10:00:22.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.046" endtime="20250106 10:00:22.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.046" endtime="20250106 10:00:22.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.047" endtime="20250106 10:00:22.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.047" endtime="20250106 10:00:22.048"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.041" endtime="20250106 10:00:22.048"/>
</kw>
<msg timestamp="20250106 10:00:22.048" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:22.041" endtime="20250106 10:00:22.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:22.048" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:22.048" endtime="20250106 10:00:22.049"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.040" endtime="20250106 10:00:22.049"/>
</kw>
<msg timestamp="20250106 10:00:22.049" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:22.040" endtime="20250106 10:00:22.049"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:22.068" level="INFO">${class} = element-list collapse</msg>
<status status="PASS" starttime="20250106 10:00:22.049" endtime="20250106 10:00:22.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Scroll_Customs" library="utils">
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:22.069" endtime="20250106 10:00:22.366"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:22.366" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:22.366" endtime="20250106 10:00:22.374"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.069" endtime="20250106 10:00:22.375"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.069" endtime="20250106 10:00:22.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:22.376" level="INFO">Clicking element 'xpath=//div[@class="header-text"][text()='Widgets']'.</msg>
<status status="PASS" starttime="20250106 10:00:22.376" endtime="20250106 10:00:22.456"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.375" endtime="20250106 10:00:22.457"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:22.458" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 10:00:22.458" endtime="20250106 10:00:22.458"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:22.459" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:22.459" endtime="20250106 10:00:22.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.459" endtime="20250106 10:00:22.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.460" endtime="20250106 10:00:22.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.460" endtime="20250106 10:00:22.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.460" endtime="20250106 10:00:22.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:22.462" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:22.461" endtime="20250106 10:00:22.462"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.461" endtime="20250106 10:00:22.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.462" endtime="20250106 10:00:22.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:22.462" endtime="20250106 10:00:22.463"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.458" endtime="20250106 10:00:22.463"/>
</kw>
<msg timestamp="20250106 10:00:22.463" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:22.458" endtime="20250106 10:00:22.463"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:22.464" level="INFO">${exp_index} = Accordian</msg>
<status status="PASS" starttime="20250106 10:00:22.463" endtime="20250106 10:00:22.464"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.457" endtime="20250106 10:00:22.464"/>
</kw>
<msg timestamp="20250106 10:00:22.464" level="INFO">${menu_item} = Accordian</msg>
<status status="PASS" starttime="20250106 10:00:22.457" endtime="20250106 10:00:22.464"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:22.465" endtime="20250106 10:00:22.753"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:22.754" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:22.754" endtime="20250106 10:00:22.761"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.464" endtime="20250106 10:00:22.761"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:22.761" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Accordian']'.</msg>
<status status="PASS" starttime="20250106 10:00:22.761" endtime="20250106 10:00:22.852"/>
</kw>
<status status="PASS" starttime="20250106 10:00:22.039" endtime="20250106 10:00:22.853"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id=section2Heading</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:22.854" level="INFO">Clicking element 'id=section2Heading'.</msg>
<status status="PASS" starttime="20250106 10:00:22.854" endtime="20250106 10:00:22.944"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[@id='section2Content']//p</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:22.945" endtime="20250106 10:00:22.996"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${content_2}</var>
<arg>xpath=//div[@id='section2Content']//p</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:23.075" level="INFO">${content_2} = Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professo...</msg>
<status status="PASS" starttime="20250106 10:00:22.996" endtime="20250106 10:00:23.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Section 2 Content: ${content_2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:23.076" level="INFO">Section 2 Content: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of "de Finibus Bonorum et Malorum" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, "Lorem ipsum dolor sit amet..", comes from a line in section 1.10.32.</msg>
<status status="PASS" starttime="20250106 10:00:23.076" endtime="20250106 10:00:23.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${content_2}</arg>
<arg>Lorem Ipsum</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:00:23.076" endtime="20250106 10:00:23.077"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id=section2Heading</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:23.077" level="INFO">Clicking element 'id=section2Heading'.</msg>
<status status="PASS" starttime="20250106 10:00:23.077" endtime="20250106 10:00:23.145"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>xpath=//div[@id='section2Content']//p</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250106 10:00:23.146" endtime="20250106 10:00:23.375"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='section3Heading']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:23.376" level="INFO">Clicking element 'xpath=//div[@id='section3Heading']'.</msg>
<status status="PASS" starttime="20250106 10:00:23.376" endtime="20250106 10:00:23.435"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[@id='section3Content']//p</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:23.436" endtime="20250106 10:00:23.673"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${content_3}</var>
<arg>xpath=//div[@id='section3Content']//p</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:23.691" level="INFO">${content_3} = It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distrib...</msg>
<status status="PASS" starttime="20250106 10:00:23.673" endtime="20250106 10:00:23.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Section 3 Content: ${content_3}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:23.692" level="INFO">Section 3 Content: It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</msg>
<status status="PASS" starttime="20250106 10:00:23.692" endtime="20250106 10:00:23.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${content_3}</arg>
<arg>Lorem Ipsum</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:00:23.693" endtime="20250106 10:00:23.693"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='section3Heading']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:23.694" level="INFO">Clicking element 'xpath=//div[@id='section3Heading']'.</msg>
<status status="PASS" starttime="20250106 10:00:23.693" endtime="20250106 10:00:23.766"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>xpath=//div[@id='section3Content']//p</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250106 10:00:23.767" endtime="20250106 10:00:23.998"/>
</kw>
<doc>This test case verifies the content of accordion sections by expanding and collapsing sections 2 and 3, and checking their displayed content.</doc>
<status status="PASS" starttime="20250106 10:00:22.027" endtime="20250106 10:00:23.999"/>
</test>
<test id="s1-t17" name="Test Auto Complete Feature" line="423">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:24.001" endtime="20250106 10:00:24.003"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:24.004" endtime="20250106 10:00:24.006"/>
</kw>
<msg timestamp="20250106 10:00:24.007" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:24.004" endtime="20250106 10:00:24.007"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:24.008" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:24.007" endtime="20250106 10:00:24.008"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.008" endtime="20250106 10:00:24.009"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.003" endtime="20250106 10:00:24.009"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.001" endtime="20250106 10:00:24.009"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case tests the autocomplete feature by typing a letter, selecting a suggested option, and verifying the selected value.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:24.010" endtime="20250106 10:00:24.010"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>2</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:24.013" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:24.012" endtime="20250106 10:00:24.013"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:24.015" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:24.014" endtime="20250106 10:00:24.015"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:24.016" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:24.016" endtime="20250106 10:00:24.016"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.015" endtime="20250106 10:00:24.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.016" endtime="20250106 10:00:24.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.017" endtime="20250106 10:00:24.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.018" endtime="20250106 10:00:24.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.018" endtime="20250106 10:00:24.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.019" endtime="20250106 10:00:24.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.019" endtime="20250106 10:00:24.020"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.014" endtime="20250106 10:00:24.020"/>
</kw>
<msg timestamp="20250106 10:00:24.020" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:24.014" endtime="20250106 10:00:24.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:24.021" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:24.021" endtime="20250106 10:00:24.021"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.012" endtime="20250106 10:00:24.021"/>
</kw>
<msg timestamp="20250106 10:00:24.022" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:24.011" endtime="20250106 10:00:24.022"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:24.070" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:24.022" endtime="20250106 10:00:24.070"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.070" endtime="20250106 10:00:24.071"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.071" endtime="20250106 10:00:24.071"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:24.072" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20250106 10:00:24.072" endtime="20250106 10:00:24.072"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:24.073" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:24.073" endtime="20250106 10:00:24.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.074" endtime="20250106 10:00:24.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.074" endtime="20250106 10:00:24.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.075" endtime="20250106 10:00:24.075"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.075" endtime="20250106 10:00:24.075"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:24.076" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:24.076" endtime="20250106 10:00:24.076"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.075" endtime="20250106 10:00:24.076"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.077" endtime="20250106 10:00:24.077"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:24.077" endtime="20250106 10:00:24.077"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.073" endtime="20250106 10:00:24.078"/>
</kw>
<msg timestamp="20250106 10:00:24.078" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:24.072" endtime="20250106 10:00:24.078"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:24.078" level="INFO">${exp_index} = Auto Complete</msg>
<status status="PASS" starttime="20250106 10:00:24.078" endtime="20250106 10:00:24.078"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.071" endtime="20250106 10:00:24.079"/>
</kw>
<msg timestamp="20250106 10:00:24.079" level="INFO">${menu_item} = Auto Complete</msg>
<status status="PASS" starttime="20250106 10:00:24.071" endtime="20250106 10:00:24.079"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:24.079" endtime="20250106 10:00:24.360"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:24.360" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:24.360" endtime="20250106 10:00:24.368"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.079" endtime="20250106 10:00:24.368"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:24.369" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Auto Complete']'.</msg>
<status status="PASS" starttime="20250106 10:00:24.368" endtime="20250106 10:00:24.445"/>
</kw>
<status status="PASS" starttime="20250106 10:00:24.011" endtime="20250106 10:00:24.445"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:26.446" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250106 10:00:24.445" endtime="20250106 10:00:26.446"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>xpath=//input[@id="autoCompleteMultipleInput"]</arg>
<arg>R</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:26.447" level="INFO">Typing text 'R' into text field 'xpath=//input[@id="autoCompleteMultipleInput"]'.</msg>
<status status="PASS" starttime="20250106 10:00:26.447" endtime="20250106 10:00:26.550"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'auto-complete__option') and contains(text(), 'Red')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:26.552" endtime="20250106 10:00:26.583"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'auto-complete__option') and contains(text(), 'Red')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:26.584" level="INFO">Clicking element 'xpath=//div[contains(@class, 'auto-complete__option') and contains(text(), 'Red')]'.</msg>
<status status="PASS" starttime="20250106 10:00:26.583" endtime="20250106 10:00:26.693"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_value}</var>
<arg>xpath=//div[@class="css-12jo7m5 auto-complete__multi-value__label"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:26.713" level="INFO">${selected_value} = Red</msg>
<status status="PASS" starttime="20250106 10:00:26.694" endtime="20250106 10:00:26.713"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Red</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:00:26.714" endtime="20250106 10:00:26.714"/>
</kw>
<doc>This test case tests the autocomplete feature by typing a letter, selecting a suggested option, and verifying the selected value.</doc>
<status status="PASS" starttime="20250106 10:00:24.000" endtime="20250106 10:00:26.715"/>
</test>
<test id="s1-t18" name="Test DatePicker" line="442">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:26.717" endtime="20250106 10:00:26.719"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:26.720" endtime="20250106 10:00:26.722"/>
</kw>
<msg timestamp="20250106 10:00:26.722" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:26.720" endtime="20250106 10:00:26.723"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:26.724" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:26.723" endtime="20250106 10:00:26.724"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.725" endtime="20250106 10:00:26.725"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.719" endtime="20250106 10:00:26.725"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.717" endtime="20250106 10:00:26.726"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case selects a specific date in the date picker by choosing the year, month, and day.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:26.726" endtime="20250106 10:00:26.726"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>3</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:26.728" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:26.728" endtime="20250106 10:00:26.728"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:26.729" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:26.729" endtime="20250106 10:00:26.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:26.730" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:26.730" endtime="20250106 10:00:26.731"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.730" endtime="20250106 10:00:26.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.731" endtime="20250106 10:00:26.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.731" endtime="20250106 10:00:26.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.732" endtime="20250106 10:00:26.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.732" endtime="20250106 10:00:26.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.732" endtime="20250106 10:00:26.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.733" endtime="20250106 10:00:26.733"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.729" endtime="20250106 10:00:26.733"/>
</kw>
<msg timestamp="20250106 10:00:26.733" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:26.729" endtime="20250106 10:00:26.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:26.734" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:26.734" endtime="20250106 10:00:26.734"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.728" endtime="20250106 10:00:26.734"/>
</kw>
<msg timestamp="20250106 10:00:26.735" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:26.727" endtime="20250106 10:00:26.735"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:26.765" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:26.735" endtime="20250106 10:00:26.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.766" endtime="20250106 10:00:26.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.766" endtime="20250106 10:00:26.767"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:26.768" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 10:00:26.767" endtime="20250106 10:00:26.768"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:26.769" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:26.769" endtime="20250106 10:00:26.769"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.770" endtime="20250106 10:00:26.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.770" endtime="20250106 10:00:26.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.771" endtime="20250106 10:00:26.771"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.771" endtime="20250106 10:00:26.771"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:26.772" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:26.772" endtime="20250106 10:00:26.772"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.771" endtime="20250106 10:00:26.772"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.773" endtime="20250106 10:00:26.773"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:26.773" endtime="20250106 10:00:26.773"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.768" endtime="20250106 10:00:26.773"/>
</kw>
<msg timestamp="20250106 10:00:26.774" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:26.768" endtime="20250106 10:00:26.774"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:26.774" level="INFO">${exp_index} = Date Picker</msg>
<status status="PASS" starttime="20250106 10:00:26.774" endtime="20250106 10:00:26.774"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.767" endtime="20250106 10:00:26.774"/>
</kw>
<msg timestamp="20250106 10:00:26.795" level="INFO">${menu_item} = Date Picker</msg>
<status status="PASS" starttime="20250106 10:00:26.767" endtime="20250106 10:00:26.795"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:26.796" endtime="20250106 10:00:27.079"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:27.080" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:27.079" endtime="20250106 10:00:27.086"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.795" endtime="20250106 10:00:27.087"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:27.088" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Date Picker']'.</msg>
<status status="PASS" starttime="20250106 10:00:27.087" endtime="20250106 10:00:27.186"/>
</kw>
<status status="PASS" starttime="20250106 10:00:26.727" endtime="20250106 10:00:27.187"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//input[@id="datePickerMonthYearInput"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:27.188" level="INFO">Clicking element 'xpath=//input[@id="datePickerMonthYearInput"]'.</msg>
<status status="PASS" starttime="20250106 10:00:27.187" endtime="20250106 10:00:27.378"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//select[@class="react-datepicker__year-select"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:27.379" level="INFO">Clicking element 'xpath=//select[@class="react-datepicker__year-select"]'.</msg>
<status status="PASS" starttime="20250106 10:00:27.379" endtime="20250106 10:00:27.552"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>xpath=//select[@class='react-datepicker__year-select']</arg>
<arg>1999</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250106 10:00:27.555" level="INFO">Selecting options from selection list 'xpath=//select[@class='react-datepicker__year-select']' by value 1999.</msg>
<status status="PASS" starttime="20250106 10:00:27.554" endtime="20250106 10:00:27.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//select[@class="react-datepicker__month-select"]/option[@value='10']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:27.714" level="INFO">Clicking element 'xpath=//select[@class="react-datepicker__month-select"]/option[@value='10']'.</msg>
<status status="PASS" starttime="20250106 10:00:27.713" endtime="20250106 10:00:27.772"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']</arg>
<arg>10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:27.773" endtime="20250106 10:00:27.796"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:27.797" level="INFO">Clicking element 'xpath=//div[@aria-label='Choose Thursday, November 4th, 1999']'.</msg>
<status status="PASS" starttime="20250106 10:00:27.796" endtime="20250106 10:00:27.903"/>
</kw>
<doc>This test case selects a specific date in the date picker by choosing the year, month, and day.</doc>
<status status="PASS" starttime="20250106 10:00:26.716" endtime="20250106 10:00:27.904"/>
</test>
<test id="s1-t19" name="Test Slider" line="462">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:27.906" endtime="20250106 10:00:27.908"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:27.908" endtime="20250106 10:00:27.911"/>
</kw>
<msg timestamp="20250106 10:00:27.912" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:27.908" endtime="20250106 10:00:27.912"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:27.913" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:27.912" endtime="20250106 10:00:27.913"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.914" endtime="20250106 10:00:27.914"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.908" endtime="20250106 10:00:27.914"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.906" endtime="20250106 10:00:27.914"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This test case interacts with the slider, moving it to a new position and verifying that the slider's value has changed.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:27.915" endtime="20250106 10:00:27.915"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>4</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:27.917" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:27.917" endtime="20250106 10:00:27.917"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:27.918" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:27.918" endtime="20250106 10:00:27.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:27.920" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:27.919" endtime="20250106 10:00:27.920"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.919" endtime="20250106 10:00:27.920"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.920" endtime="20250106 10:00:27.921"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.921" endtime="20250106 10:00:27.921"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.921" endtime="20250106 10:00:27.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.922" endtime="20250106 10:00:27.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.922" endtime="20250106 10:00:27.923"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.923" endtime="20250106 10:00:27.923"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.918" endtime="20250106 10:00:27.923"/>
</kw>
<msg timestamp="20250106 10:00:27.923" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:27.917" endtime="20250106 10:00:27.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:27.924" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:27.924" endtime="20250106 10:00:27.924"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.916" endtime="20250106 10:00:27.924"/>
</kw>
<msg timestamp="20250106 10:00:27.924" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:27.916" endtime="20250106 10:00:27.925"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:27.975" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:27.925" endtime="20250106 10:00:27.975"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.975" endtime="20250106 10:00:27.975"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.976" endtime="20250106 10:00:27.976"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:27.977" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:27.977" endtime="20250106 10:00:27.977"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:27.978" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:27.978" endtime="20250106 10:00:27.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.978" endtime="20250106 10:00:27.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.979" endtime="20250106 10:00:27.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.979" endtime="20250106 10:00:27.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.980" endtime="20250106 10:00:27.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:27.980" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:27.980" endtime="20250106 10:00:27.980"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.980" endtime="20250106 10:00:27.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.980" endtime="20250106 10:00:27.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:27.981" endtime="20250106 10:00:27.981"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.978" endtime="20250106 10:00:27.981"/>
</kw>
<msg timestamp="20250106 10:00:27.981" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:27.977" endtime="20250106 10:00:27.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:27.982" level="INFO">${exp_index} = Slider</msg>
<status status="PASS" starttime="20250106 10:00:27.981" endtime="20250106 10:00:27.982"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.976" endtime="20250106 10:00:27.982"/>
</kw>
<msg timestamp="20250106 10:00:27.982" level="INFO">${menu_item} = Slider</msg>
<status status="PASS" starttime="20250106 10:00:27.976" endtime="20250106 10:00:27.982"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:27.983" endtime="20250106 10:00:28.326"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:28.326" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:28.326" endtime="20250106 10:00:28.333"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.983" endtime="20250106 10:00:28.333"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:28.333" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Slider']'.</msg>
<status status="PASS" starttime="20250106 10:00:28.333" endtime="20250106 10:00:28.410"/>
</kw>
<status status="PASS" starttime="20250106 10:00:27.916" endtime="20250106 10:00:28.410"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:31.411" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 10:00:28.411" endtime="20250106 10:00:31.411"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${initial_value}</var>
<arg>id=sliderValue</arg>
<arg>value</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:31.433" level="INFO">${initial_value} = 25</msg>
<status status="PASS" starttime="20250106 10:00:31.412" endtime="20250106 10:00:31.433"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Initial value of the slider: ${initial_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:31.434" endtime="20250106 10:00:31.435"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=//input[@class="range-slider range-slider--primary"]</arg>
<arg>100</arg>
<arg>0</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:00:31.435" endtime="20250106 10:00:32.009"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:35.010" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 10:00:32.009" endtime="20250106 10:00:35.010"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${new_value}</var>
<arg>id=sliderValue</arg>
<arg>value</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:35.029" level="INFO">${new_value} = 65</msg>
<status status="PASS" starttime="20250106 10:00:35.011" endtime="20250106 10:00:35.029"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>New value of the slider: ${new_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:35.030" endtime="20250106 10:00:35.030"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${initial_value}</arg>
<arg>${new_value}</arg>
<arg>Slider value did not change after dragging</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250106 10:00:35.031" endtime="20250106 10:00:35.032"/>
</kw>
<doc>This test case interacts with the slider, moving it to a new position and verifying that the slider's value has changed.</doc>
<status status="PASS" starttime="20250106 10:00:27.905" endtime="20250106 10:00:35.032"/>
</test>
<test id="s1-t20" name="Test Progress Bar Functionality" line="483">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:35.035" endtime="20250106 10:00:35.037"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:35.038" endtime="20250106 10:00:35.040"/>
</kw>
<msg timestamp="20250106 10:00:35.041" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:35.038" endtime="20250106 10:00:35.041"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:35.043" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:35.041" endtime="20250106 10:00:35.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.043" endtime="20250106 10:00:35.043"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.037" endtime="20250106 10:00:35.044"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.035" endtime="20250106 10:00:35.044"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the functionality of the progress bar by starting it, waiting for it to complete, and validating that it reaches 100%.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:35.044" endtime="20250106 10:00:35.045"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>5</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:35.047" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:35.047" endtime="20250106 10:00:35.048"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:35.049" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:35.049" endtime="20250106 10:00:35.049"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:35.050" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:35.050" endtime="20250106 10:00:35.050"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.050" endtime="20250106 10:00:35.050"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.051" endtime="20250106 10:00:35.051"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.051" endtime="20250106 10:00:35.051"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.051" endtime="20250106 10:00:35.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.052" endtime="20250106 10:00:35.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.052" endtime="20250106 10:00:35.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.053" endtime="20250106 10:00:35.053"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.048" endtime="20250106 10:00:35.053"/>
</kw>
<msg timestamp="20250106 10:00:35.053" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:35.048" endtime="20250106 10:00:35.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:35.054" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:35.054" endtime="20250106 10:00:35.054"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.046" endtime="20250106 10:00:35.054"/>
</kw>
<msg timestamp="20250106 10:00:35.055" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:35.046" endtime="20250106 10:00:35.055"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:35.070" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:35.055" endtime="20250106 10:00:35.070"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.070" endtime="20250106 10:00:35.071"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.071" endtime="20250106 10:00:35.071"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:35.072" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:00:35.072" endtime="20250106 10:00:35.072"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:35.073" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:35.073" endtime="20250106 10:00:35.073"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.073" endtime="20250106 10:00:35.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.074" endtime="20250106 10:00:35.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.074" endtime="20250106 10:00:35.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.075" endtime="20250106 10:00:35.075"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:35.076" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:35.075" endtime="20250106 10:00:35.076"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.075" endtime="20250106 10:00:35.076"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.076" endtime="20250106 10:00:35.077"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:35.077" endtime="20250106 10:00:35.077"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.073" endtime="20250106 10:00:35.077"/>
</kw>
<msg timestamp="20250106 10:00:35.078" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:35.072" endtime="20250106 10:00:35.078"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:35.078" level="INFO">${exp_index} = Progress Bar</msg>
<status status="PASS" starttime="20250106 10:00:35.078" endtime="20250106 10:00:35.078"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.071" endtime="20250106 10:00:35.078"/>
</kw>
<msg timestamp="20250106 10:00:35.079" level="INFO">${menu_item} = Progress Bar</msg>
<status status="PASS" starttime="20250106 10:00:35.071" endtime="20250106 10:00:35.079"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:35.079" endtime="20250106 10:00:35.405"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:35.405" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:35.405" endtime="20250106 10:00:35.414"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.079" endtime="20250106 10:00:35.414"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:35.415" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Progress Bar']'.</msg>
<status status="PASS" starttime="20250106 10:00:35.415" endtime="20250106 10:00:35.486"/>
</kw>
<status status="PASS" starttime="20250106 10:00:35.045" endtime="20250106 10:00:35.486"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>xpath=//button[@id='startStopButton']</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:35.487" level="INFO">Clicking button 'xpath=//button[@id='startStopButton']'.</msg>
<status status="PASS" starttime="20250106 10:00:35.487" endtime="20250106 10:00:35.639"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:50.641" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20250106 10:00:35.640" endtime="20250106 10:00:50.641"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${progress_value}</var>
<arg>xpath=//div[@role="progressbar"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:50.661" level="INFO">${progress_value} = 100%</msg>
<status status="PASS" starttime="20250106 10:00:50.641" endtime="20250106 10:00:50.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Progress value: ${progress_value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:50.662" level="INFO">Progress value: 100%</msg>
<status status="PASS" starttime="20250106 10:00:50.661" endtime="20250106 10:00:50.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${progress_value}</arg>
<arg>100%</arg>
<arg>The progress bar did not reach 100%</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:00:50.662" endtime="20250106 10:00:50.663"/>
</kw>
<doc>Verify the functionality of the progress bar by starting it, waiting for it to complete, and validating that it reaches 100%.</doc>
<status status="PASS" starttime="20250106 10:00:35.034" endtime="20250106 10:00:50.663"/>
</test>
<test id="s1-t21" name="Test Tabs Functionality" line="500">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:50.665" endtime="20250106 10:00:50.666"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:50.667" endtime="20250106 10:00:50.669"/>
</kw>
<msg timestamp="20250106 10:00:50.669" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:50.667" endtime="20250106 10:00:50.669"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:50.670" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:50.669" endtime="20250106 10:00:50.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.671" endtime="20250106 10:00:50.671"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.667" endtime="20250106 10:00:50.671"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.665" endtime="20250106 10:00:50.671"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the functionality of tabs by navigating through different tabs ('What' and 'Origin') and checking if the corresponding content is displayed correctly.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:50.672" endtime="20250106 10:00:50.673"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>6</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:50.675" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:50.675" endtime="20250106 10:00:50.675"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:50.676" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:50.676" endtime="20250106 10:00:50.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:50.677" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:50.677" endtime="20250106 10:00:50.677"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.676" endtime="20250106 10:00:50.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.678" endtime="20250106 10:00:50.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.678" endtime="20250106 10:00:50.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.678" endtime="20250106 10:00:50.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.679" endtime="20250106 10:00:50.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.679" endtime="20250106 10:00:50.680"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.680" endtime="20250106 10:00:50.680"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.675" endtime="20250106 10:00:50.680"/>
</kw>
<msg timestamp="20250106 10:00:50.680" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:50.675" endtime="20250106 10:00:50.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:50.681" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:50.681" endtime="20250106 10:00:50.681"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.674" endtime="20250106 10:00:50.681"/>
</kw>
<msg timestamp="20250106 10:00:50.681" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:50.674" endtime="20250106 10:00:50.681"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:50.701" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:50.682" endtime="20250106 10:00:50.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.701" endtime="20250106 10:00:50.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.702" endtime="20250106 10:00:50.702"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:50.703" level="INFO">${index} = 5</msg>
<status status="PASS" starttime="20250106 10:00:50.703" endtime="20250106 10:00:50.704"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:50.704" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:50.704" endtime="20250106 10:00:50.705"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.705" endtime="20250106 10:00:50.705"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.705" endtime="20250106 10:00:50.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.706" endtime="20250106 10:00:50.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.708" endtime="20250106 10:00:50.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:50.710" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:50.710" endtime="20250106 10:00:50.710"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.709" endtime="20250106 10:00:50.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.711" endtime="20250106 10:00:50.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:50.711" endtime="20250106 10:00:50.711"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.704" endtime="20250106 10:00:50.712"/>
</kw>
<msg timestamp="20250106 10:00:50.712" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:50.704" endtime="20250106 10:00:50.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:50.712" level="INFO">${exp_index} = Tabs</msg>
<status status="PASS" starttime="20250106 10:00:50.712" endtime="20250106 10:00:50.712"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.703" endtime="20250106 10:00:50.713"/>
</kw>
<msg timestamp="20250106 10:00:50.713" level="INFO">${menu_item} = Tabs</msg>
<status status="PASS" starttime="20250106 10:00:50.702" endtime="20250106 10:00:50.713"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:50.713" endtime="20250106 10:00:51.044"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:51.044" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:51.044" endtime="20250106 10:00:51.052"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.713" endtime="20250106 10:00:51.053"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.053" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Tabs']'.</msg>
<status status="PASS" starttime="20250106 10:00:51.053" endtime="20250106 10:00:51.130"/>
</kw>
<status status="PASS" starttime="20250106 10:00:50.673" endtime="20250106 10:00:51.131"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='demo-tab-what']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.132" level="INFO">Clicking element 'xpath=//a[@id='demo-tab-what']'.</msg>
<status status="PASS" starttime="20250106 10:00:51.131" endtime="20250106 10:00:51.239"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${content1}</var>
<arg>xpath=//div[@id="demo-tabpane-what"]/p[@class="mt-3"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.260" level="INFO">${content1} = Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type a...</msg>
<status status="PASS" starttime="20250106 10:00:51.241" endtime="20250106 10:00:51.260"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Content of 'What' tab: ${content1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:51.261" endtime="20250106 10:00:51.262"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='demo-tab-origin']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.263" level="INFO">Clicking element 'xpath=//a[@id='demo-tab-origin']'.</msg>
<status status="PASS" starttime="20250106 10:00:51.263" endtime="20250106 10:00:51.329"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${content2}</var>
<arg>xpath=//div[@id="demo-tabpane-origin"]/p[@class="mt-3"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.350" level="INFO">${content2} = Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professo...</msg>
<status status="PASS" starttime="20250106 10:00:51.330" endtime="20250106 10:00:51.350"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Content of 'Origin' tab: ${content2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:51.351" endtime="20250106 10:00:51.352"/>
</kw>
<doc>Verify the functionality of tabs by navigating through different tabs ('What' and 'Origin') and checking if the corresponding content is displayed correctly.</doc>
<status status="PASS" starttime="20250106 10:00:50.664" endtime="20250106 10:00:51.352"/>
</test>
<test id="s1-t22" name="Test All Tooltips" line="516">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:00:51.354" endtime="20250106 10:00:51.355"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:00:51.356" endtime="20250106 10:00:51.359"/>
</kw>
<msg timestamp="20250106 10:00:51.359" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:00:51.356" endtime="20250106 10:00:51.359"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:00:51.361" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:00:51.360" endtime="20250106 10:00:51.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.361" endtime="20250106 10:00:51.361"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.356" endtime="20250106 10:00:51.361"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.354" endtime="20250106 10:00:51.362"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify that tooltips appear correctly on hover over various elements and contain the expected text for each element.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:00:51.362" endtime="20250106 10:00:51.363"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>7</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:51.365" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:00:51.364" endtime="20250106 10:00:51.365"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:51.366" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:51.366" endtime="20250106 10:00:51.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:51.367" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:00:51.367" endtime="20250106 10:00:51.367"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.366" endtime="20250106 10:00:51.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.367" endtime="20250106 10:00:51.368"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.368" endtime="20250106 10:00:51.368"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.368" endtime="20250106 10:00:51.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.369" endtime="20250106 10:00:51.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.369" endtime="20250106 10:00:51.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.369" endtime="20250106 10:00:51.370"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.365" endtime="20250106 10:00:51.370"/>
</kw>
<msg timestamp="20250106 10:00:51.370" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:00:51.365" endtime="20250106 10:00:51.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:51.371" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:51.370" endtime="20250106 10:00:51.371"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.364" endtime="20250106 10:00:51.371"/>
</kw>
<msg timestamp="20250106 10:00:51.371" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:00:51.364" endtime="20250106 10:00:51.371"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:00:51.387" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:00:51.371" endtime="20250106 10:00:51.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.388" endtime="20250106 10:00:51.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.388" endtime="20250106 10:00:51.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:00:51.390" level="INFO">${index} = 6</msg>
<status status="PASS" starttime="20250106 10:00:51.389" endtime="20250106 10:00:51.390"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:00:51.391" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:00:51.391" endtime="20250106 10:00:51.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.391" endtime="20250106 10:00:51.392"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.392" endtime="20250106 10:00:51.392"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.393" endtime="20250106 10:00:51.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.393" endtime="20250106 10:00:51.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:00:51.394" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:00:51.394" endtime="20250106 10:00:51.394"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.393" endtime="20250106 10:00:51.394"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.395" endtime="20250106 10:00:51.395"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:00:51.395" endtime="20250106 10:00:51.395"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.390" endtime="20250106 10:00:51.396"/>
</kw>
<msg timestamp="20250106 10:00:51.396" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:00:51.390" endtime="20250106 10:00:51.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:00:51.396" level="INFO">${exp_index} = Tool Tips</msg>
<status status="PASS" starttime="20250106 10:00:51.396" endtime="20250106 10:00:51.396"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.389" endtime="20250106 10:00:51.397"/>
</kw>
<msg timestamp="20250106 10:00:51.397" level="INFO">${menu_item} = Tool Tips</msg>
<status status="PASS" starttime="20250106 10:00:51.388" endtime="20250106 10:00:51.397"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:00:51.397" endtime="20250106 10:00:51.736"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:00:51.736" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:00:51.736" endtime="20250106 10:00:51.745"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.397" endtime="20250106 10:00:51.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:51.747" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Tool Tips']'.</msg>
<status status="PASS" starttime="20250106 10:00:51.746" endtime="20250106 10:00:51.861"/>
</kw>
<status status="PASS" starttime="20250106 10:00:51.363" endtime="20250106 10:00:51.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:56.864" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20250106 10:00:51.863" endtime="20250106 10:00:56.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing tooltip for button</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:56.865" level="INFO">Testing tooltip for button</msg>
<status status="PASS" starttime="20250106 10:00:56.865" endtime="20250106 10:00:56.865"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//button[@id='toolTipButton']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:00:56.866" level="INFO">Simulating Mouse Over on element 'xpath=//button[@id='toolTipButton']'.</msg>
<status status="PASS" starttime="20250106 10:00:56.866" endtime="20250106 10:00:57.147"/>
</kw>
<kw name="Get Tooltip Text">
<var>${tooltip_text_button}</var>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:57.149" endtime="20250106 10:00:57.170"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:58.171" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:00:57.170" endtime="20250106 10:00:58.171"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${tooltip_text}</var>
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:58.191" level="INFO">${tooltip_text} = You hovered over the Button</msg>
<status status="PASS" starttime="20250106 10:00:58.171" endtime="20250106 10:00:58.192"/>
</kw>
<msg timestamp="20250106 10:00:58.192" level="INFO">${tooltip_text_button} = You hovered over the Button</msg>
<status status="PASS" starttime="20250106 10:00:57.148" endtime="20250106 10:00:58.192"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tooltip_text_button}</arg>
<arg>You hovered over the Button</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:00:58.193" endtime="20250106 10:00:58.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing tooltip for text field</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:58.194" level="INFO">Testing tooltip for text field</msg>
<status status="PASS" starttime="20250106 10:00:58.194" endtime="20250106 10:00:58.194"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//input[@id='toolTipTextField']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:00:58.195" level="INFO">Simulating Mouse Over on element 'xpath=//input[@id='toolTipTextField']'.</msg>
<status status="PASS" starttime="20250106 10:00:58.195" endtime="20250106 10:00:58.489"/>
</kw>
<kw name="Get Tooltip Text">
<var>${tooltip_text_textfield}</var>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:58.491" endtime="20250106 10:00:58.519"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:00:59.520" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:00:58.519" endtime="20250106 10:00:59.520"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${tooltip_text}</var>
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:00:59.538" level="INFO">${tooltip_text} = You hovered over the text field</msg>
<status status="PASS" starttime="20250106 10:00:59.520" endtime="20250106 10:00:59.538"/>
</kw>
<msg timestamp="20250106 10:00:59.538" level="INFO">${tooltip_text_textfield} = You hovered over the text field</msg>
<status status="PASS" starttime="20250106 10:00:58.490" endtime="20250106 10:00:59.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tooltip_text_textfield}</arg>
<arg>You hovered over the text field</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:00:59.539" endtime="20250106 10:00:59.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing tooltip for Contrary link</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:00:59.541" level="INFO">Testing tooltip for Contrary link</msg>
<status status="PASS" starttime="20250106 10:00:59.540" endtime="20250106 10:00:59.541"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//a[text()='Contrary']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:00:59.541" level="INFO">Simulating Mouse Over on element 'xpath=//a[text()='Contrary']'.</msg>
<status status="PASS" starttime="20250106 10:00:59.541" endtime="20250106 10:00:59.836"/>
</kw>
<kw name="Get Tooltip Text">
<var>${tooltip_text_contrary}</var>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:00:59.836" endtime="20250106 10:00:59.854"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:00.856" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:00:59.854" endtime="20250106 10:01:00.856"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${tooltip_text}</var>
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:00.874" level="INFO">${tooltip_text} = You hovered over the Contrary</msg>
<status status="PASS" starttime="20250106 10:01:00.856" endtime="20250106 10:01:00.874"/>
</kw>
<msg timestamp="20250106 10:01:00.874" level="INFO">${tooltip_text_contrary} = You hovered over the Contrary</msg>
<status status="PASS" starttime="20250106 10:00:59.836" endtime="20250106 10:01:00.874"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tooltip_text_contrary}</arg>
<arg>You hovered over the Contrary</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:01:00.875" endtime="20250106 10:01:00.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing tooltip for 1.10.32 link</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:00.877" level="INFO">Testing tooltip for 1.10.32 link</msg>
<status status="PASS" starttime="20250106 10:01:00.876" endtime="20250106 10:01:00.877"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//a[text()='1.10.32']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:01:00.878" level="INFO">Simulating Mouse Over on element 'xpath=//a[text()='1.10.32']'.</msg>
<status status="PASS" starttime="20250106 10:01:00.878" endtime="20250106 10:01:01.170"/>
</kw>
<kw name="Get Tooltip Text">
<var>${tooltip_text_number}</var>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:01:01.171" endtime="20250106 10:01:01.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:02.188" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:01.188" endtime="20250106 10:01:02.188"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${tooltip_text}</var>
<arg>xpath=//div[contains(@class, 'tooltip-inner')]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:02.206" level="INFO">${tooltip_text} = You hovered over the 1.10.32</msg>
<status status="PASS" starttime="20250106 10:01:02.188" endtime="20250106 10:01:02.206"/>
</kw>
<msg timestamp="20250106 10:01:02.206" level="INFO">${tooltip_text_number} = You hovered over the 1.10.32</msg>
<status status="PASS" starttime="20250106 10:01:01.171" endtime="20250106 10:01:02.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tooltip_text_number}</arg>
<arg>You hovered over the 1.10.32</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:01:02.207" endtime="20250106 10:01:02.208"/>
</kw>
<doc>Verify that tooltips appear correctly on hover over various elements and contain the expected text for each element.</doc>
<status status="PASS" starttime="20250106 10:00:51.354" endtime="20250106 10:01:02.209"/>
</test>
<test id="s1-t23" name="Test_Menu" line="548">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:02.212" endtime="20250106 10:01:02.213"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:02.215" endtime="20250106 10:01:02.217"/>
</kw>
<msg timestamp="20250106 10:01:02.217" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:02.214" endtime="20250106 10:01:02.217"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:02.219" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:02.218" endtime="20250106 10:01:02.219"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.219" endtime="20250106 10:01:02.220"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.214" endtime="20250106 10:01:02.220"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.211" endtime="20250106 10:01:02.221"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the menu functionality by hovering over various menu items, checking if sub-menus appear, and ensuring correct visibility of nested items.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:02.221" endtime="20250106 10:01:02.222"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>8</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:02.225" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:01:02.224" endtime="20250106 10:01:02.225"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:02.226" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:02.225" endtime="20250106 10:01:02.226"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:02.226" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:02.226" endtime="20250106 10:01:02.227"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.226" endtime="20250106 10:01:02.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.227" endtime="20250106 10:01:02.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.227" endtime="20250106 10:01:02.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.228" endtime="20250106 10:01:02.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.229" endtime="20250106 10:01:02.229"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.229" endtime="20250106 10:01:02.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.230" endtime="20250106 10:01:02.231"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.225" endtime="20250106 10:01:02.231"/>
</kw>
<msg timestamp="20250106 10:01:02.231" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:02.225" endtime="20250106 10:01:02.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:02.232" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:01:02.232" endtime="20250106 10:01:02.233"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.224" endtime="20250106 10:01:02.233"/>
</kw>
<msg timestamp="20250106 10:01:02.233" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:01:02.224" endtime="20250106 10:01:02.234"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:02.256" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:02.234" endtime="20250106 10:01:02.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.256" endtime="20250106 10:01:02.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.256" endtime="20250106 10:01:02.257"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:02.258" level="INFO">${index} = 7</msg>
<status status="PASS" starttime="20250106 10:01:02.258" endtime="20250106 10:01:02.258"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:02.259" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:02.259" endtime="20250106 10:01:02.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.259" endtime="20250106 10:01:02.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.260" endtime="20250106 10:01:02.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.260" endtime="20250106 10:01:02.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.261" endtime="20250106 10:01:02.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:02.262" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:01:02.261" endtime="20250106 10:01:02.262"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.261" endtime="20250106 10:01:02.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.262" endtime="20250106 10:01:02.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:02.263" endtime="20250106 10:01:02.263"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.259" endtime="20250106 10:01:02.263"/>
</kw>
<msg timestamp="20250106 10:01:02.263" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:01:02.258" endtime="20250106 10:01:02.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:02.264" level="INFO">${exp_index} = Menu</msg>
<status status="PASS" starttime="20250106 10:01:02.264" endtime="20250106 10:01:02.264"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.257" endtime="20250106 10:01:02.264"/>
</kw>
<msg timestamp="20250106 10:01:02.264" level="INFO">${menu_item} = Menu</msg>
<status status="PASS" starttime="20250106 10:01:02.257" endtime="20250106 10:01:02.264"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:02.265" endtime="20250106 10:01:02.562"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:02.563" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:02.563" endtime="20250106 10:01:02.572"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.265" endtime="20250106 10:01:02.573"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:02.573" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Menu']'.</msg>
<status status="PASS" starttime="20250106 10:01:02.573" endtime="20250106 10:01:02.670"/>
</kw>
<status status="PASS" starttime="20250106 10:01:02.223" endtime="20250106 10:01:02.670"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:05.673" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 10:01:02.673" endtime="20250106 10:01:05.673"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='Main Item 2']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:01:05.674" level="INFO">Simulating Mouse Over on element 'xpath=//a[@href="#"][text()='Main Item 2']'.</msg>
<status status="PASS" starttime="20250106 10:01:05.674" endtime="20250106 10:01:05.953"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='Sub Item']</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250106 10:01:05.974" level="INFO">Element 'xpath=//a[@href="#"][text()='Sub Item']' is displayed.</msg>
<status status="PASS" starttime="20250106 10:01:05.954" endtime="20250106 10:01:05.974"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='SUB SUB LIST »']</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250106 10:01:05.994" level="INFO">Element 'xpath=//a[@href="#"][text()='SUB SUB LIST »']' is displayed.</msg>
<status status="PASS" starttime="20250106 10:01:05.975" endtime="20250106 10:01:05.994"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='Sub Sub Item 1']</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20250106 10:01:06.015" level="INFO">Element 'xpath=//a[@href="#"][text()='Sub Sub Item 1']' exists but is not displayed.</msg>
<status status="PASS" starttime="20250106 10:01:05.995" endtime="20250106 10:01:06.016"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='SUB SUB LIST »']</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20250106 10:01:06.017" level="INFO">Simulating Mouse Over on element 'xpath=//a[@href="#"][text()='SUB SUB LIST »']'.</msg>
<status status="PASS" starttime="20250106 10:01:06.016" endtime="20250106 10:01:06.293"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>xpath=//a[@href="#"][text()='Sub Sub Item 1']</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250106 10:01:06.311" level="INFO">Element 'xpath=//a[@href="#"][text()='Sub Sub Item 1']' is displayed.</msg>
<status status="PASS" starttime="20250106 10:01:06.294" endtime="20250106 10:01:06.311"/>
</kw>
<doc>Verify the menu functionality by hovering over various menu items, checking if sub-menus appear, and ensuring correct visibility of nested items.</doc>
<status status="PASS" starttime="20250106 10:01:02.210" endtime="20250106 10:01:06.312"/>
</test>
<test id="s1-t24" name="Test Select Menu" line="565">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:06.314" endtime="20250106 10:01:06.315"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:06.317" endtime="20250106 10:01:06.318"/>
</kw>
<msg timestamp="20250106 10:01:06.318" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:06.316" endtime="20250106 10:01:06.318"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:06.320" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:06.318" endtime="20250106 10:01:06.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.320" endtime="20250106 10:01:06.320"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.316" endtime="20250106 10:01:06.320"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.314" endtime="20250106 10:01:06.320"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the select menu functionality by choosing different options from grouped, single, and multi-select dropdowns, and validating the selected values.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:06.321" endtime="20250106 10:01:06.322"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>4</arg>
<arg>9</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:06.325" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:01:06.323" endtime="20250106 10:01:06.325"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:06.326" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:06.326" endtime="20250106 10:01:06.326"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:06.326" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:06.326" endtime="20250106 10:01:06.326"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.326" endtime="20250106 10:01:06.327"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.327" endtime="20250106 10:01:06.327"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.328" endtime="20250106 10:01:06.328"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.329" endtime="20250106 10:01:06.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.329" endtime="20250106 10:01:06.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.330" endtime="20250106 10:01:06.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.330" endtime="20250106 10:01:06.331"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.325" endtime="20250106 10:01:06.331"/>
</kw>
<msg timestamp="20250106 10:01:06.331" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:06.325" endtime="20250106 10:01:06.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:06.332" level="INFO">${exp_index} = Widgets</msg>
<status status="PASS" starttime="20250106 10:01:06.331" endtime="20250106 10:01:06.332"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.323" endtime="20250106 10:01:06.332"/>
</kw>
<msg timestamp="20250106 10:01:06.332" level="INFO">${header_item} = Widgets</msg>
<status status="PASS" starttime="20250106 10:01:06.323" endtime="20250106 10:01:06.332"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:06.350" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:06.332" endtime="20250106 10:01:06.351"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.351" endtime="20250106 10:01:06.351"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.351" endtime="20250106 10:01:06.352"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:06.353" level="INFO">${index} = 8</msg>
<status status="PASS" starttime="20250106 10:01:06.352" endtime="20250106 10:01:06.353"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:06.354" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:06.354" endtime="20250106 10:01:06.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.354" endtime="20250106 10:01:06.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.355" endtime="20250106 10:01:06.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.355" endtime="20250106 10:01:06.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.356" endtime="20250106 10:01:06.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:06.357" level="INFO">@{list} = [ Accordian | Auto Complete | Date Picker | Slider | Progress Bar | Tabs | Tool Tips | Menu | Select Menu ]</msg>
<status status="PASS" starttime="20250106 10:01:06.356" endtime="20250106 10:01:06.357"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.356" endtime="20250106 10:01:06.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.357" endtime="20250106 10:01:06.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:06.358" endtime="20250106 10:01:06.358"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.353" endtime="20250106 10:01:06.358"/>
</kw>
<msg timestamp="20250106 10:01:06.358" level="INFO">${expected_list} = ['Accordian', 'Auto Complete', 'Date Picker', 'Slider', 'Progress Bar', 'Tabs', 'Tool Tips', 'Menu', 'Select Menu']</msg>
<status status="PASS" starttime="20250106 10:01:06.353" endtime="20250106 10:01:06.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:06.359" level="INFO">${exp_index} = Select Menu</msg>
<status status="PASS" starttime="20250106 10:01:06.359" endtime="20250106 10:01:06.359"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.352" endtime="20250106 10:01:06.359"/>
</kw>
<msg timestamp="20250106 10:01:06.360" level="INFO">${menu_item} = Select Menu</msg>
<status status="PASS" starttime="20250106 10:01:06.352" endtime="20250106 10:01:06.360"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:06.360" endtime="20250106 10:01:06.680"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:06.681" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:06.680" endtime="20250106 10:01:06.688"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.360" endtime="20250106 10:01:06.688"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:06.688" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Select Menu']'.</msg>
<status status="PASS" starttime="20250106 10:01:06.688" endtime="20250106 10:01:06.773"/>
</kw>
<status status="PASS" starttime="20250106 10:01:06.322" endtime="20250106 10:01:06.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:08.776" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250106 10:01:06.775" endtime="20250106 10:01:08.776"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='withOptGroup']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:08.777" level="INFO">Clicking element 'xpath=//div[@id='withOptGroup']'.</msg>
<status status="PASS" starttime="20250106 10:01:08.777" endtime="20250106 10:01:08.861"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'css-26l3qy-menu')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:01:08.862" endtime="20250106 10:01:08.899"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Group 1, option 1']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:08.900" level="INFO">Clicking element 'xpath=//div[text()='Group 1, option 1']'.</msg>
<status status="PASS" starttime="20250106 10:01:08.899" endtime="20250106 10:01:08.986"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_option}</var>
<arg>xpath=//div[@id="withOptGroup"]//div[@class=" css-1uccc91-singleValue"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.024" level="INFO">${selected_option} = Group 1, option 1</msg>
<status status="PASS" starttime="20250106 10:01:08.987" endtime="20250106 10:01:09.025"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_option}</arg>
<arg>Group 1, option 1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:01:09.025" endtime="20250106 10:01:09.026"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:09.027" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:09.026" endtime="20250106 10:01:09.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='withOptGroup']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.032" level="INFO">Clicking element 'xpath=//div[@id='withOptGroup']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.032" endtime="20250106 10:01:09.098"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Group 2, option 2']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.099" level="INFO">Clicking element 'xpath=//div[text()='Group 2, option 2']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.098" endtime="20250106 10:01:09.168"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_option}</var>
<arg>xpath=//div[@id="withOptGroup"]//div[@class=" css-1uccc91-singleValue"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.183" level="INFO">${selected_option} = Group 2, option 2</msg>
<status status="PASS" starttime="20250106 10:01:09.169" endtime="20250106 10:01:09.184"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_option}</arg>
<arg>Group 2, option 2</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:01:09.184" endtime="20250106 10:01:09.185"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='selectOne']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.186" level="INFO">Clicking element 'xpath=//div[@id='selectOne']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.185" endtime="20250106 10:01:09.293"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>xpath=//div[contains(@class, 'css-26l3qy-menu')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250106 10:01:09.294" endtime="20250106 10:01:09.308"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Mr.']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.309" level="INFO">Clicking element 'xpath=//div[text()='Mr.']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.309" endtime="20250106 10:01:09.386"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_title}</var>
<arg>xpath=//div[@id='selectOne']//div[@class=" css-1uccc91-singleValue"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.409" level="INFO">${selected_title} = Mr.</msg>
<status status="PASS" starttime="20250106 10:01:09.387" endtime="20250106 10:01:09.410"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_title}</arg>
<arg>Mr.</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:01:09.410" endtime="20250106 10:01:09.410"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@id='selectOne']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.411" level="INFO">Clicking element 'xpath=//div[@id='selectOne']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.411" endtime="20250106 10:01:09.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Mrs.']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.472" level="INFO">Clicking element 'xpath=//div[text()='Mrs.']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.471" endtime="20250106 10:01:09.538"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_title}</var>
<arg>xpath=//div[@id='selectOne']//div[@class=" css-1uccc91-singleValue"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.556" level="INFO">${selected_title} = Mrs.</msg>
<status status="PASS" starttime="20250106 10:01:09.539" endtime="20250106 10:01:09.556"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_title}</arg>
<arg>Mrs.</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250106 10:01:09.557" endtime="20250106 10:01:09.557"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=(//div[@class=' css-1hwfws3'])[3]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.558" level="INFO">Clicking element 'xpath=(//div[@class=' css-1hwfws3'])[3]'.</msg>
<status status="PASS" starttime="20250106 10:01:09.558" endtime="20250106 10:01:09.629"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Green']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.630" level="INFO">Clicking element 'xpath=//div[text()='Green']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.630" endtime="20250106 10:01:09.708"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Blue']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.709" level="INFO">Clicking element 'xpath=//div[text()='Blue']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.709" endtime="20250106 10:01:09.801"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_colors}</var>
<arg>xpath=(//div[contains(@class, 'css-12jo7m5')])[2]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.821" level="INFO">${selected_colors} = Blue</msg>
<status status="PASS" starttime="20250106 10:01:09.801" endtime="20250106 10:01:09.821"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_colors1}</var>
<arg>xpath=(//div[contains(@class, 'css-12jo7m5')])[1]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.841" level="INFO">${selected_colors1} = Green</msg>
<status status="PASS" starttime="20250106 10:01:09.822" endtime="20250106 10:01:09.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_colors1}</arg>
<arg>Green</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:09.842" endtime="20250106 10:01:09.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_colors}</arg>
<arg>Blue</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:09.843" endtime="20250106 10:01:09.843"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[text()='Red']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.844" level="INFO">Clicking element 'xpath=//div[text()='Red']'.</msg>
<status status="PASS" starttime="20250106 10:01:09.844" endtime="20250106 10:01:09.912"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${selected_colors}</var>
<arg>xpath=(//div[contains(@class, 'css-12jo7m5')])[3]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:09.932" level="INFO">${selected_colors} = Red</msg>
<status status="PASS" starttime="20250106 10:01:09.912" endtime="20250106 10:01:09.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_colors}</arg>
<arg>Red</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:09.932" endtime="20250106 10:01:09.933"/>
</kw>
<doc>Verify the select menu functionality by choosing different options from grouped, single, and multi-select dropdowns, and validating the selected values.</doc>
<status status="PASS" starttime="20250106 10:01:06.313" endtime="20250106 10:01:09.933"/>
</test>
<test id="s1-t25" name="Test Sortable List Functionality" line="606">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:09.936" endtime="20250106 10:01:09.937"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:09.938" endtime="20250106 10:01:09.974"/>
</kw>
<msg timestamp="20250106 10:01:09.975" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:09.938" endtime="20250106 10:01:09.975"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:09.976" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:09.975" endtime="20250106 10:01:09.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.976" endtime="20250106 10:01:09.977"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.937" endtime="20250106 10:01:09.977"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.936" endtime="20250106 10:01:09.977"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the sortable list functionality by checking the initial order, performing drag-and-drop operations to rearrange items, and validating the new order.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:09.977" endtime="20250106 10:01:09.978"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>5</arg>
<arg>1</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:09.980" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:09.980" endtime="20250106 10:01:09.980"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:09.982" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:09.981" endtime="20250106 10:01:09.982"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:09.983" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:09.982" endtime="20250106 10:01:09.983"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.982" endtime="20250106 10:01:09.983"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.983" endtime="20250106 10:01:09.984"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.984" endtime="20250106 10:01:09.984"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.984" endtime="20250106 10:01:09.984"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.985" endtime="20250106 10:01:09.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.985" endtime="20250106 10:01:09.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:09.985" endtime="20250106 10:01:09.986"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.981" endtime="20250106 10:01:09.986"/>
</kw>
<msg timestamp="20250106 10:01:09.986" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:09.980" endtime="20250106 10:01:09.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:09.987" level="INFO">${exp_index} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:09.986" endtime="20250106 10:01:09.987"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.979" endtime="20250106 10:01:09.987"/>
</kw>
<msg timestamp="20250106 10:01:09.987" level="INFO">${header_item} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:09.979" endtime="20250106 10:01:09.987"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:10.015" level="INFO">${class} = element-list collapse</msg>
<status status="PASS" starttime="20250106 10:01:09.988" endtime="20250106 10:01:10.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Scroll_Customs" library="utils">
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:10.017" endtime="20250106 10:01:10.288"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:10.288" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:10.288" endtime="20250106 10:01:10.295"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.016" endtime="20250106 10:01:10.296"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.016" endtime="20250106 10:01:10.296"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:10.297" level="INFO">Clicking element 'xpath=//div[@class="header-text"][text()='Interactions']'.</msg>
<status status="PASS" starttime="20250106 10:01:10.297" endtime="20250106 10:01:10.370"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.296" endtime="20250106 10:01:10.370"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:10.372" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20250106 10:01:10.371" endtime="20250106 10:01:10.372"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:10.373" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:10.372" endtime="20250106 10:01:10.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.373" endtime="20250106 10:01:10.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.374" endtime="20250106 10:01:10.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.374" endtime="20250106 10:01:10.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.375" endtime="20250106 10:01:10.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.375" endtime="20250106 10:01:10.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:10.377" level="INFO">@{list} = [ Sortable | Selectable | Resizable | Droppable | Dragabble ]</msg>
<status status="PASS" starttime="20250106 10:01:10.377" endtime="20250106 10:01:10.377"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.376" endtime="20250106 10:01:10.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:10.378" endtime="20250106 10:01:10.378"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.372" endtime="20250106 10:01:10.379"/>
</kw>
<msg timestamp="20250106 10:01:10.379" level="INFO">${expected_list} = ['Sortable', 'Selectable', 'Resizable', 'Droppable', 'Dragabble']</msg>
<status status="PASS" starttime="20250106 10:01:10.372" endtime="20250106 10:01:10.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:10.380" level="INFO">${exp_index} = Sortable</msg>
<status status="PASS" starttime="20250106 10:01:10.379" endtime="20250106 10:01:10.380"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.371" endtime="20250106 10:01:10.380"/>
</kw>
<msg timestamp="20250106 10:01:10.380" level="INFO">${menu_item} = Sortable</msg>
<status status="PASS" starttime="20250106 10:01:10.371" endtime="20250106 10:01:10.380"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:10.381" endtime="20250106 10:01:10.738"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:10.739" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:10.738" endtime="20250106 10:01:10.746"/>
</kw>
<status status="PASS" starttime="20250106 10:01:10.380" endtime="20250106 10:01:10.746"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:10.746" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Sortable']'.</msg>
<status status="PASS" starttime="20250106 10:01:10.746" endtime="20250106 10:01:10.829"/>
</kw>
<status status="PASS" starttime="20250106 10:01:09.978" endtime="20250106 10:01:10.829"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:13.831" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 10:01:10.831" endtime="20250106 10:01:13.831"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:13.833" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:13.832" endtime="20250106 10:01:13.841"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${initial_order}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:13.842" level="INFO">${initial_order} = []</msg>
<status status="PASS" starttime="20250106 10:01:13.842" endtime="20250106 10:01:13.842"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>7</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.866" level="INFO">${item_text} = One</msg>
<status status="PASS" starttime="20250106 10:01:13.844" endtime="20250106 10:01:13.866"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.866" endtime="20250106 10:01:13.866"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.844" endtime="20250106 10:01:13.866"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.886" level="INFO">${item_text} = Two</msg>
<status status="PASS" starttime="20250106 10:01:13.867" endtime="20250106 10:01:13.886"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.886" endtime="20250106 10:01:13.887"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.866" endtime="20250106 10:01:13.887"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.906" level="INFO">${item_text} = Three</msg>
<status status="PASS" starttime="20250106 10:01:13.887" endtime="20250106 10:01:13.906"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.906" endtime="20250106 10:01:13.906"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.887" endtime="20250106 10:01:13.906"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.927" level="INFO">${item_text} = Four</msg>
<status status="PASS" starttime="20250106 10:01:13.907" endtime="20250106 10:01:13.927"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.927" endtime="20250106 10:01:13.927"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.907" endtime="20250106 10:01:13.927"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.947" level="INFO">${item_text} = Five</msg>
<status status="PASS" starttime="20250106 10:01:13.928" endtime="20250106 10:01:13.947"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.947" endtime="20250106 10:01:13.947"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.928" endtime="20250106 10:01:13.948"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:13.967" level="INFO">${item_text} = Six</msg>
<status status="PASS" starttime="20250106 10:01:13.948" endtime="20250106 10:01:13.967"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${initial_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:13.967" endtime="20250106 10:01:13.967"/>
</kw>
<status status="PASS" starttime="20250106 10:01:13.948" endtime="20250106 10:01:13.968"/>
</iter>
<status status="PASS" starttime="20250106 10:01:13.843" endtime="20250106 10:01:13.968"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>Initial order: ${initial_order}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:13.969" level="INFO">Initial order: ['One', 'Two', 'Three', 'Four', 'Five', 'Six']</msg>
<status status="PASS" starttime="20250106 10:01:13.969" endtime="20250106 10:01:13.969"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[1]</arg>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[6]</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20250106 10:01:13.970" endtime="20250106 10:01:14.565"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:15.567" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:14.567" endtime="20250106 10:01:15.567"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[6]</arg>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[3]</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20250106 10:01:15.568" endtime="20250106 10:01:16.119"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:17.121" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:16.120" endtime="20250106 10:01:17.121"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${new_order}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:17.122" level="INFO">${new_order} = []</msg>
<status status="PASS" starttime="20250106 10:01:17.122" endtime="20250106 10:01:17.122"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>7</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.143" level="INFO">${item_text} = Two</msg>
<status status="PASS" starttime="20250106 10:01:17.124" endtime="20250106 10:01:17.143"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.143" endtime="20250106 10:01:17.143"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.123" endtime="20250106 10:01:17.143"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.162" level="INFO">${item_text} = Three</msg>
<status status="PASS" starttime="20250106 10:01:17.144" endtime="20250106 10:01:17.162"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.162" endtime="20250106 10:01:17.162"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.144" endtime="20250106 10:01:17.163"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.180" level="INFO">${item_text} = One</msg>
<status status="PASS" starttime="20250106 10:01:17.163" endtime="20250106 10:01:17.180"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.181" endtime="20250106 10:01:17.181"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.163" endtime="20250106 10:01:17.181"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.199" level="INFO">${item_text} = Four</msg>
<status status="PASS" starttime="20250106 10:01:17.181" endtime="20250106 10:01:17.199"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.199" endtime="20250106 10:01:17.199"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.181" endtime="20250106 10:01:17.200"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.216" level="INFO">${item_text} = Five</msg>
<status status="PASS" starttime="20250106 10:01:17.200" endtime="20250106 10:01:17.216"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.216" endtime="20250106 10:01:17.216"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.200" endtime="20250106 10:01:17.217"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${item_text}</var>
<arg>xpath=(//div[@id='demo-tabpane-list']//div[contains(@class, 'list-group-item')])[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.234" level="INFO">${item_text} = Six</msg>
<status status="PASS" starttime="20250106 10:01:17.217" endtime="20250106 10:01:17.234"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${new_order}</arg>
<arg>${item_text}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250106 10:01:17.234" endtime="20250106 10:01:17.234"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.217" endtime="20250106 10:01:17.235"/>
</iter>
<status status="PASS" starttime="20250106 10:01:17.123" endtime="20250106 10:01:17.235"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>New order: ${new_order}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:17.236" level="INFO">New order: ['Two', 'Three', 'One', 'Four', 'Five', 'Six']</msg>
<status status="PASS" starttime="20250106 10:01:17.235" endtime="20250106 10:01:17.236"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${initial_order}</arg>
<arg>${new_order}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250106 10:01:17.236" endtime="20250106 10:01:17.237"/>
</kw>
<doc>Verify the sortable list functionality by checking the initial order, performing drag-and-drop operations to rearrange items, and validating the new order.</doc>
<status status="PASS" starttime="20250106 10:01:09.935" endtime="20250106 10:01:17.237"/>
</test>
<test id="s1-t26" name="Test Selectable List and Grid Functionality" line="640">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:17.240" endtime="20250106 10:01:17.242"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:17.242" endtime="20250106 10:01:17.244"/>
</kw>
<msg timestamp="20250106 10:01:17.245" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:17.242" endtime="20250106 10:01:17.245"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:17.246" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:17.245" endtime="20250106 10:01:17.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.247" endtime="20250106 10:01:17.247"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.242" endtime="20250106 10:01:17.247"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.240" endtime="20250106 10:01:17.247"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the selectable functionality in both List and Grid modes by selecting items and confirming their selection status in each mode.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:17.248" endtime="20250106 10:01:17.249"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>5</arg>
<arg>2</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:17.251" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:17.250" endtime="20250106 10:01:17.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:17.252" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:17.252" endtime="20250106 10:01:17.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:17.254" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:17.253" endtime="20250106 10:01:17.254"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.252" endtime="20250106 10:01:17.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.254" endtime="20250106 10:01:17.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.255" endtime="20250106 10:01:17.255"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.255" endtime="20250106 10:01:17.255"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.256" endtime="20250106 10:01:17.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.256" endtime="20250106 10:01:17.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.257" endtime="20250106 10:01:17.257"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.251" endtime="20250106 10:01:17.257"/>
</kw>
<msg timestamp="20250106 10:01:17.257" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:17.251" endtime="20250106 10:01:17.257"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:17.258" level="INFO">${exp_index} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:17.258" endtime="20250106 10:01:17.258"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.250" endtime="20250106 10:01:17.258"/>
</kw>
<msg timestamp="20250106 10:01:17.258" level="INFO">${header_item} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:17.250" endtime="20250106 10:01:17.258"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:17.325" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:17.259" endtime="20250106 10:01:17.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.326" endtime="20250106 10:01:17.326"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.326" endtime="20250106 10:01:17.326"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:17.327" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20250106 10:01:17.327" endtime="20250106 10:01:17.328"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:17.328" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:17.328" endtime="20250106 10:01:17.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.329" endtime="20250106 10:01:17.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.329" endtime="20250106 10:01:17.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.330" endtime="20250106 10:01:17.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.330" endtime="20250106 10:01:17.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.331" endtime="20250106 10:01:17.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:17.332" level="INFO">@{list} = [ Sortable | Selectable | Resizable | Droppable | Dragabble ]</msg>
<status status="PASS" starttime="20250106 10:01:17.331" endtime="20250106 10:01:17.332"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.331" endtime="20250106 10:01:17.332"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:17.332" endtime="20250106 10:01:17.333"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.328" endtime="20250106 10:01:17.333"/>
</kw>
<msg timestamp="20250106 10:01:17.333" level="INFO">${expected_list} = ['Sortable', 'Selectable', 'Resizable', 'Droppable', 'Dragabble']</msg>
<status status="PASS" starttime="20250106 10:01:17.328" endtime="20250106 10:01:17.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:17.333" level="INFO">${exp_index} = Selectable</msg>
<status status="PASS" starttime="20250106 10:01:17.333" endtime="20250106 10:01:17.334"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.327" endtime="20250106 10:01:17.334"/>
</kw>
<msg timestamp="20250106 10:01:17.334" level="INFO">${menu_item} = Selectable</msg>
<status status="PASS" starttime="20250106 10:01:17.327" endtime="20250106 10:01:17.334"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:17.334" endtime="20250106 10:01:17.609"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:17.610" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:17.609" endtime="20250106 10:01:17.617"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.334" endtime="20250106 10:01:17.617"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.618" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Selectable']'.</msg>
<status status="PASS" starttime="20250106 10:01:17.618" endtime="20250106 10:01:17.690"/>
</kw>
<status status="PASS" starttime="20250106 10:01:17.249" endtime="20250106 10:01:17.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing List Mode</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:17.691" level="INFO">Testing List Mode</msg>
<status status="PASS" starttime="20250106 10:01:17.691" endtime="20250106 10:01:17.692"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//li[text()='Cras justo odio']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.693" level="INFO">Clicking element 'xpath=//li[text()='Cras justo odio']'.</msg>
<status status="PASS" starttime="20250106 10:01:17.692" endtime="20250106 10:01:17.775"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//li[text()='Morbi leo risus']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.776" level="INFO">Clicking element 'xpath=//li[text()='Morbi leo risus']'.</msg>
<status status="PASS" starttime="20250106 10:01:17.775" endtime="20250106 10:01:17.849"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${selected_item_1}</var>
<arg>xpath=//li[text()='Cras justo odio']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:17.863" level="INFO">${selected_item_1} = mt-2 list-group-item active list-group-item-action</msg>
<status status="PASS" starttime="20250106 10:01:17.850" endtime="20250106 10:01:17.863"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${selected_item_2}</var>
<arg>xpath=//li[text()='Morbi leo risus']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:17.877" level="INFO">${selected_item_2} = mt-2 list-group-item active list-group-item-action</msg>
<status status="PASS" starttime="20250106 10:01:17.864" endtime="20250106 10:01:17.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_item_1}</arg>
<arg>active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:17.878" endtime="20250106 10:01:17.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_item_2}</arg>
<arg>active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:17.878" endtime="20250106 10:01:17.879"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='demo-tab-grid']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:17.879" level="INFO">Clicking element 'xpath=//a[@id='demo-tab-grid']'.</msg>
<status status="PASS" starttime="20250106 10:01:17.879" endtime="20250106 10:01:18.023"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//li[text()='One']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:18.024" level="INFO">Clicking element 'xpath=//li[text()='One']'.</msg>
<status status="PASS" starttime="20250106 10:01:18.024" endtime="20250106 10:01:18.090"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//li[text()='Five']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:18.091" level="INFO">Clicking element 'xpath=//li[text()='Five']'.</msg>
<status status="PASS" starttime="20250106 10:01:18.091" endtime="20250106 10:01:18.155"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:18.156" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:18.156" endtime="20250106 10:01:18.160"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//li[text()='Nine']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:18.161" level="INFO">Clicking element 'xpath=//li[text()='Nine']'.</msg>
<status status="PASS" starttime="20250106 10:01:18.160" endtime="20250106 10:01:18.228"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${selected_item_1}</var>
<arg>xpath=//li[text()='One']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:18.243" level="INFO">${selected_item_1} = list-group-item active list-group-item-action</msg>
<status status="PASS" starttime="20250106 10:01:18.229" endtime="20250106 10:01:18.243"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${selected_item_2}</var>
<arg>xpath=//li[text()='Five']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:18.257" level="INFO">${selected_item_2} = list-group-item active list-group-item-action</msg>
<status status="PASS" starttime="20250106 10:01:18.244" endtime="20250106 10:01:18.257"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${selected_item_3}</var>
<arg>xpath=//li[text()='Nine']</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:18.273" level="INFO">${selected_item_3} = list-group-item active list-group-item-action</msg>
<status status="PASS" starttime="20250106 10:01:18.258" endtime="20250106 10:01:18.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_item_1}</arg>
<arg>active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:18.273" endtime="20250106 10:01:18.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_item_2}</arg>
<arg>active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:18.274" endtime="20250106 10:01:18.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${selected_item_3}</arg>
<arg>active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250106 10:01:18.274" endtime="20250106 10:01:18.274"/>
</kw>
<doc>Verify the selectable functionality in both List and Grid modes by selecting items and confirming their selection status in each mode.</doc>
<status status="PASS" starttime="20250106 10:01:17.239" endtime="20250106 10:01:18.275"/>
</test>
<test id="s1-t27" name="Test Resizable Boxes Functionality" line="675">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:18.277" endtime="20250106 10:01:18.278"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:18.279" endtime="20250106 10:01:18.281"/>
</kw>
<msg timestamp="20250106 10:01:18.281" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:18.279" endtime="20250106 10:01:18.282"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:18.283" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:18.282" endtime="20250106 10:01:18.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.283" endtime="20250106 10:01:18.283"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.279" endtime="20250106 10:01:18.284"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.277" endtime="20250106 10:01:18.284"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the functionality of resizable boxes by adjusting their size via the resize handles and ensuring that the size changes within the allowed boundaries.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:18.284" endtime="20250106 10:01:18.285"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>5</arg>
<arg>3</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:18.287" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:18.287" endtime="20250106 10:01:18.287"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:18.288" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:18.288" endtime="20250106 10:01:18.289"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:18.289" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:18.289" endtime="20250106 10:01:18.290"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.289" endtime="20250106 10:01:18.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.290" endtime="20250106 10:01:18.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.290" endtime="20250106 10:01:18.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.291" endtime="20250106 10:01:18.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.291" endtime="20250106 10:01:18.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.291" endtime="20250106 10:01:18.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.292" endtime="20250106 10:01:18.292"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.288" endtime="20250106 10:01:18.293"/>
</kw>
<msg timestamp="20250106 10:01:18.293" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:18.287" endtime="20250106 10:01:18.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:18.293" level="INFO">${exp_index} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:18.293" endtime="20250106 10:01:18.293"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.286" endtime="20250106 10:01:18.294"/>
</kw>
<msg timestamp="20250106 10:01:18.294" level="INFO">${header_item} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:18.286" endtime="20250106 10:01:18.294"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:18.309" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:18.294" endtime="20250106 10:01:18.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.309" endtime="20250106 10:01:18.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.310" endtime="20250106 10:01:18.310"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:18.311" level="INFO">${index} = 2</msg>
<status status="PASS" starttime="20250106 10:01:18.311" endtime="20250106 10:01:18.311"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:18.312" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:18.312" endtime="20250106 10:01:18.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.312" endtime="20250106 10:01:18.313"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.313" endtime="20250106 10:01:18.313"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.313" endtime="20250106 10:01:18.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.314" endtime="20250106 10:01:18.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.315" endtime="20250106 10:01:18.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:18.316" level="INFO">@{list} = [ Sortable | Selectable | Resizable | Droppable | Dragabble ]</msg>
<status status="PASS" starttime="20250106 10:01:18.315" endtime="20250106 10:01:18.316"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.315" endtime="20250106 10:01:18.316"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:18.316" endtime="20250106 10:01:18.316"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.312" endtime="20250106 10:01:18.317"/>
</kw>
<msg timestamp="20250106 10:01:18.317" level="INFO">${expected_list} = ['Sortable', 'Selectable', 'Resizable', 'Droppable', 'Dragabble']</msg>
<status status="PASS" starttime="20250106 10:01:18.311" endtime="20250106 10:01:18.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:18.317" level="INFO">${exp_index} = Resizable</msg>
<status status="PASS" starttime="20250106 10:01:18.317" endtime="20250106 10:01:18.318"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.310" endtime="20250106 10:01:18.318"/>
</kw>
<msg timestamp="20250106 10:01:18.318" level="INFO">${menu_item} = Resizable</msg>
<status status="PASS" starttime="20250106 10:01:18.310" endtime="20250106 10:01:18.318"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:18.319" endtime="20250106 10:01:18.664"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:18.664" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:18.664" endtime="20250106 10:01:18.670"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.318" endtime="20250106 10:01:18.670"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:18.671" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Resizable']'.</msg>
<status status="PASS" starttime="20250106 10:01:18.670" endtime="20250106 10:01:18.744"/>
</kw>
<status status="PASS" starttime="20250106 10:01:18.285" endtime="20250106 10:01:18.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing unrestricted resizable box</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:18.745" level="INFO">Testing unrestricted resizable box</msg>
<status status="PASS" starttime="20250106 10:01:18.744" endtime="20250106 10:01:18.745"/>
</kw>
<kw name="Get Element Size" library="SeleniumLibrary">
<var>${initial_size}</var>
<arg>xpath=//div[@id='resizableBoxWithRestriction']</arg>
<doc>Returns width and height of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:18.804" level="INFO">${initial_size} = (200, 200)</msg>
<status status="PASS" starttime="20250106 10:01:18.746" endtime="20250106 10:01:18.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Initial size: ${initial_size}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:18.805" level="INFO">Initial size: (200, 200)</msg>
<status status="PASS" starttime="20250106 10:01:18.805" endtime="20250106 10:01:18.805"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:18.806" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:18.806" endtime="20250106 10:01:18.810"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:19.812" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:18.811" endtime="20250106 10:01:19.812"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=(//div[@id='resizableBoxWithRestriction']//span)[1]</arg>
<arg>50</arg>
<arg>50</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:19.813" endtime="20250106 10:01:20.359"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:21.360" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:20.359" endtime="20250106 10:01:21.360"/>
</kw>
<kw name="Get Element Size" library="SeleniumLibrary">
<var>${new_size}</var>
<arg>xpath=//div[@id='resizableBoxWithRestriction']</arg>
<doc>Returns width and height of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:21.387" level="INFO">${new_size} = (250, 250)</msg>
<status status="PASS" starttime="20250106 10:01:21.360" endtime="20250106 10:01:21.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>New size after resizing: ${new_size}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:21.389" level="INFO">New size after resizing: (250, 250)</msg>
<status status="PASS" starttime="20250106 10:01:21.388" endtime="20250106 10:01:21.389"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_equal_1}</var>
<arg>${initial_size} == ${new_size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:21.390" level="INFO">${is_equal_1} = False</msg>
<status status="PASS" starttime="20250106 10:01:21.390" endtime="20250106 10:01:21.391"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${is_equal_1}</arg>
<arg>The dictionaries should not be equal</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20250106 10:01:21.391" endtime="20250106 10:01:21.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing restricted resizable box</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:21.393" level="INFO">Testing restricted resizable box</msg>
<status status="PASS" starttime="20250106 10:01:21.392" endtime="20250106 10:01:21.393"/>
</kw>
<kw name="Get Element Size" library="SeleniumLibrary">
<var>${initial_restricted_size}</var>
<arg>xpath=//div[@id='resizable']</arg>
<doc>Returns width and height of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:21.425" level="INFO">${initial_restricted_size} = (200, 200)</msg>
<status status="PASS" starttime="20250106 10:01:21.393" endtime="20250106 10:01:21.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Initial restricted size: ${initial_restricted_size}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:21.426" level="INFO">Initial restricted size: (200, 200)</msg>
<status status="PASS" starttime="20250106 10:01:21.426" endtime="20250106 10:01:21.427"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=(//div[@id='resizable']//span)[1]</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:21.427" endtime="20250106 10:01:21.707"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:21.708" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:21.708" endtime="20250106 10:01:21.715"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=(//div[@id='resizable']//span)[1]</arg>
<arg>100</arg>
<arg>100</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:21.717" endtime="20250106 10:01:22.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:23.282" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250106 10:01:22.282" endtime="20250106 10:01:23.282"/>
</kw>
<kw name="Get Element Size" library="SeleniumLibrary">
<var>${new_restricted_size}</var>
<arg>xpath=//div[@id='resizable']</arg>
<doc>Returns width and height of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:23.313" level="INFO">${new_restricted_size} = (300, 300)</msg>
<status status="PASS" starttime="20250106 10:01:23.283" endtime="20250106 10:01:23.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>New restricted size after resizing: ${new_restricted_size}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:23.314" level="INFO">New restricted size after resizing: (300, 300)</msg>
<status status="PASS" starttime="20250106 10:01:23.314" endtime="20250106 10:01:23.314"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_equal_2}</var>
<arg>${initial_restricted_size} == ${new_restricted_size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:23.315" level="INFO">${is_equal_2} = False</msg>
<status status="PASS" starttime="20250106 10:01:23.315" endtime="20250106 10:01:23.315"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${is_equal_2}</arg>
<arg>The dictionaries should not be equal</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.316" endtime="20250106 10:01:23.316"/>
</kw>
<doc>Verify the functionality of resizable boxes by adjusting their size via the resize handles and ensuring that the size changes within the allowed boundaries.</doc>
<status status="PASS" starttime="20250106 10:01:18.276" endtime="20250106 10:01:23.317"/>
</test>
<test id="s1-t28" name="Test Droppable Functionality" line="714">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:23.320" endtime="20250106 10:01:23.322"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:23.323" endtime="20250106 10:01:23.326"/>
</kw>
<msg timestamp="20250106 10:01:23.326" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:23.323" endtime="20250106 10:01:23.326"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:23.328" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:23.327" endtime="20250106 10:01:23.328"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.329" endtime="20250106 10:01:23.329"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.323" endtime="20250106 10:01:23.329"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.320" endtime="20250106 10:01:23.329"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the drag-and-drop functionality by dragging items to different droppable areas and validating the changes in text for both acceptable and non-acceptable elements.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:23.330" endtime="20250106 10:01:23.331"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>5</arg>
<arg>4</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:23.333" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:23.332" endtime="20250106 10:01:23.333"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:23.334" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:23.334" endtime="20250106 10:01:23.335"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:23.336" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:23.335" endtime="20250106 10:01:23.336"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.335" endtime="20250106 10:01:23.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.336" endtime="20250106 10:01:23.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.337" endtime="20250106 10:01:23.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.337" endtime="20250106 10:01:23.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.337" endtime="20250106 10:01:23.338"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.338" endtime="20250106 10:01:23.339"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.339" endtime="20250106 10:01:23.339"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.334" endtime="20250106 10:01:23.339"/>
</kw>
<msg timestamp="20250106 10:01:23.339" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:23.333" endtime="20250106 10:01:23.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:23.340" level="INFO">${exp_index} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:23.339" endtime="20250106 10:01:23.340"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.332" endtime="20250106 10:01:23.340"/>
</kw>
<msg timestamp="20250106 10:01:23.340" level="INFO">${header_item} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:23.332" endtime="20250106 10:01:23.341"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:23.358" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:23.341" endtime="20250106 10:01:23.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.359" endtime="20250106 10:01:23.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.359" endtime="20250106 10:01:23.359"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:23.361" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20250106 10:01:23.360" endtime="20250106 10:01:23.361"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:23.362" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:23.362" endtime="20250106 10:01:23.362"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.362" endtime="20250106 10:01:23.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.363" endtime="20250106 10:01:23.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.363" endtime="20250106 10:01:23.364"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.364" endtime="20250106 10:01:23.364"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.365" endtime="20250106 10:01:23.365"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:23.366" level="INFO">@{list} = [ Sortable | Selectable | Resizable | Droppable | Dragabble ]</msg>
<status status="PASS" starttime="20250106 10:01:23.365" endtime="20250106 10:01:23.366"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.365" endtime="20250106 10:01:23.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:23.366" endtime="20250106 10:01:23.366"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.361" endtime="20250106 10:01:23.367"/>
</kw>
<msg timestamp="20250106 10:01:23.367" level="INFO">${expected_list} = ['Sortable', 'Selectable', 'Resizable', 'Droppable', 'Dragabble']</msg>
<status status="PASS" starttime="20250106 10:01:23.361" endtime="20250106 10:01:23.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:23.367" level="INFO">${exp_index} = Droppable</msg>
<status status="PASS" starttime="20250106 10:01:23.367" endtime="20250106 10:01:23.367"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.360" endtime="20250106 10:01:23.368"/>
</kw>
<msg timestamp="20250106 10:01:23.368" level="INFO">${menu_item} = Droppable</msg>
<status status="PASS" starttime="20250106 10:01:23.360" endtime="20250106 10:01:23.368"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:23.368" endtime="20250106 10:01:23.697"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:23.698" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:23.698" endtime="20250106 10:01:23.706"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.368" endtime="20250106 10:01:23.706"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:23.707" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Droppable']'.</msg>
<status status="PASS" starttime="20250106 10:01:23.706" endtime="20250106 10:01:23.786"/>
</kw>
<status status="PASS" starttime="20250106 10:01:23.331" endtime="20250106 10:01:23.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Simple Drag and Drop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:23.787" level="INFO">Testing Simple Drag and Drop</msg>
<status status="PASS" starttime="20250106 10:01:23.787" endtime="20250106 10:01:23.788"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:25.789" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250106 10:01:23.789" endtime="20250106 10:01:25.789"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>id=draggable</arg>
<arg>id=droppable</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20250106 10:01:25.789" endtime="20250106 10:01:26.375"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${drop_text}</var>
<arg>xpath=//div[@id='droppable']</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:26.399" level="INFO">${drop_text} = Dropped!</msg>
<status status="PASS" starttime="20250106 10:01:26.376" endtime="20250106 10:01:26.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${drop_text}</arg>
<arg>Dropped!</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:01:26.400" endtime="20250106 10:01:26.401"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='droppableExample-tab-accept']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:26.402" level="INFO">Clicking element 'xpath=//a[@id='droppableExample-tab-accept']'.</msg>
<status status="PASS" starttime="20250106 10:01:26.401" endtime="20250106 10:01:26.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Non-Acceptable Element Drag and Drop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:26.485" level="INFO">Testing Non-Acceptable Element Drag and Drop</msg>
<status status="PASS" starttime="20250106 10:01:26.485" endtime="20250106 10:01:26.486"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>xpath=//div[@id='notAcceptable']</arg>
<arg>xpath=//div[@id='acceptDropContainer']//div[@id='droppable']</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20250106 10:01:26.486" endtime="20250106 10:01:27.088"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${drop_text_non_acceptable}</var>
<arg>xpath=//div[@id='acceptDropContainer']//div[@id='droppable']</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:27.107" level="INFO">${drop_text_non_acceptable} = Drop here</msg>
<status status="PASS" starttime="20250106 10:01:27.089" endtime="20250106 10:01:27.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${drop_text_non_acceptable}</arg>
<arg>Drop here</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:01:27.108" endtime="20250106 10:01:27.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Acceptable Element Drag and Drop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:27.110" level="INFO">Testing Acceptable Element Drag and Drop</msg>
<status status="PASS" starttime="20250106 10:01:27.109" endtime="20250106 10:01:27.110"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>xpath=//div[@id='acceptable']</arg>
<arg>xpath=//div[@id='acceptDropContainer']//div[@id='droppable']</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20250106 10:01:27.111" endtime="20250106 10:01:27.667"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${drop_text_acceptable}</var>
<arg>xpath=//div[@id='acceptDropContainer']//div[@id='droppable']</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:27.688" level="INFO">${drop_text_acceptable} = Dropped!</msg>
<status status="PASS" starttime="20250106 10:01:27.668" endtime="20250106 10:01:27.688"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${drop_text_acceptable}</arg>
<arg>Dropped!</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250106 10:01:27.689" endtime="20250106 10:01:27.690"/>
</kw>
<doc>Verify the drag-and-drop functionality by dragging items to different droppable areas and validating the changes in text for both acceptable and non-acceptable elements.</doc>
<status status="PASS" starttime="20250106 10:01:23.319" endtime="20250106 10:01:27.691"/>
</test>
<test id="s1-t29" name="Test Draggable Functionality" line="742">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Set Selenium Implicit Wait</arg>
<arg>10</arg>
<arg>AND</arg>
<arg>Check And Open Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>10</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250106 10:01:27.695" endtime="20250106 10:01:27.696"/>
</kw>
<kw name="Check And Open Browser" library="corekeyword">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${result}</var>
<arg>Get Window Handles</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Window Handles" library="SeleniumLibrary">
<doc>Returns all child window handles of the selected browser as a list.</doc>
<status status="PASS" starttime="20250106 10:01:27.697" endtime="20250106 10:01:27.700"/>
</kw>
<msg timestamp="20250106 10:01:27.700" level="INFO">${result} = ('PASS', ['5F465D2D94F487226330F3D4CD90ED82'])</msg>
<status status="PASS" starttime="20250106 10:01:27.697" endtime="20250106 10:01:27.700"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${windows}</var>
<arg>'${result[0]}' == 'PASS'</arg>
<arg>${result[1]}</arg>
<arg>[]</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250106 10:01:27.702" level="INFO">${windows} = ['5F465D2D94F487226330F3D4CD90ED82']</msg>
<status status="PASS" starttime="20250106 10:01:27.701" endtime="20250106 10:01:27.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${windows} == []</arg>
<arg>Open_Browser_App_And_Choose_Element</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.703" endtime="20250106 10:01:27.703"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.696" endtime="20250106 10:01:27.703"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.694" endtime="20250106 10:01:27.703"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Verify the draggable functionality in different modes by testing simple drag, axis-restricted drag, and container-restricted drag, and validating the new positions of the elements.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:27.704" endtime="20250106 10:01:27.704"/>
</kw>
<kw name="Choose_Page_Practice" library="corekeyword">
<arg>5</arg>
<arg>5</arg>
<kw name="Run Keyword" library="BuiltIn">
<var>${header_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_header}</arg>
<arg>header_list</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_header}</arg>
<arg>header_list</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:27.708" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:27.707" endtime="20250106 10:01:27.708"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:27.710" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:27.710" endtime="20250106 10:01:27.710"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:27.711" level="INFO">@{list} = [ Elements | Forms | Alerts, Frame &amp; Windows | Widgets | Interactions | Book Store Application ]</msg>
<status status="PASS" starttime="20250106 10:01:27.711" endtime="20250106 10:01:27.711"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.710" endtime="20250106 10:01:27.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.711" endtime="20250106 10:01:27.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.712" endtime="20250106 10:01:27.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.712" endtime="20250106 10:01:27.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.713" endtime="20250106 10:01:27.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.714" endtime="20250106 10:01:27.714"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.714" endtime="20250106 10:01:27.715"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.709" endtime="20250106 10:01:27.715"/>
</kw>
<msg timestamp="20250106 10:01:27.715" level="INFO">${expected_list} = ['Elements', 'Forms', 'Alerts, Frame &amp; Windows', 'Widgets', 'Interactions', 'Book Store Application']</msg>
<status status="PASS" starttime="20250106 10:01:27.708" endtime="20250106 10:01:27.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:27.716" level="INFO">${exp_index} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:27.716" endtime="20250106 10:01:27.716"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.706" endtime="20250106 10:01:27.716"/>
</kw>
<msg timestamp="20250106 10:01:27.716" level="INFO">${header_item} = Interactions</msg>
<status status="PASS" starttime="20250106 10:01:27.706" endtime="20250106 10:01:27.716"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${class}</var>
<arg>xpath=//div[@class='element-group'][${options_header}]/div[contains(@class, 'element-list')]</arg>
<arg>class</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:27.734" level="INFO">${class} = element-list collapse show</msg>
<status status="PASS" starttime="20250106 10:01:27.717" endtime="20250106 10:01:27.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Scroll_Customs</arg>
<arg>//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.735" endtime="20250106 10:01:27.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'show' not in '${class}'</arg>
<arg>Click Element</arg>
<arg>xpath=//div[@class="header-text"][text()='${header_item}']</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.736" endtime="20250106 10:01:27.737"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${menu_item}</var>
<arg>Get_Value_Index_List</arg>
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_Value_Index_List" library="utils">
<arg>${options_menu}</arg>
<arg>${header_item}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${index}</var>
<arg>${Number_input} - 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 10:01:27.739" level="INFO">${index} = 4</msg>
<status status="PASS" starttime="20250106 10:01:27.738" endtime="20250106 10:01:27.739"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<var>${expected_list}</var>
<arg>Get_List_Based_On_Name</arg>
<arg>${list_name}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get_List_Based_On_Name" library="utils">
<arg>${list_name}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250106 10:01:27.741" level="INFO">@{list} = [ ]</msg>
<status status="PASS" starttime="20250106 10:01:27.741" endtime="20250106 10:01:27.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'header_list'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{header_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.741" endtime="20250106 10:01:27.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Elements'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Elements_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.742" endtime="20250106 10:01:27.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Forms'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Forms_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.743" endtime="20250106 10:01:27.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Alerts, Frame &amp; Windows'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Alerts_Frame_List}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.744" endtime="20250106 10:01:27.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Widgets'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Widgets_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.744" endtime="20250106 10:01:27.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Interactions'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Test Variable" library="BuiltIn">
<arg>@{list}</arg>
<arg>@{Interactions_list}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250106 10:01:27.745" level="INFO">@{list} = [ Sortable | Selectable | Resizable | Droppable | Dragabble ]</msg>
<status status="PASS" starttime="20250106 10:01:27.745" endtime="20250106 10:01:27.745"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.745" endtime="20250106 10:01:27.746"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${name}' == 'Book Store Application'</arg>
<arg>Set Test Variable</arg>
<arg>@{list}</arg>
<arg>@{Book_Store_list}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250106 10:01:27.746" endtime="20250106 10:01:27.746"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.740" endtime="20250106 10:01:27.747"/>
</kw>
<msg timestamp="20250106 10:01:27.747" level="INFO">${expected_list} = ['Sortable', 'Selectable', 'Resizable', 'Droppable', 'Dragabble']</msg>
<status status="PASS" starttime="20250106 10:01:27.739" endtime="20250106 10:01:27.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_index}</var>
<arg>${expected_list}[${index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 10:01:27.748" level="INFO">${exp_index} = Dragabble</msg>
<status status="PASS" starttime="20250106 10:01:27.748" endtime="20250106 10:01:27.748"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.738" endtime="20250106 10:01:27.749"/>
</kw>
<msg timestamp="20250106 10:01:27.749" level="INFO">${menu_item} = Dragabble</msg>
<status status="PASS" starttime="20250106 10:01:27.737" endtime="20250106 10:01:27.749"/>
</kw>
<kw name="Scroll_Customs" library="utils">
<arg>//span[@class="text"][text()='${menu_item}']</arg>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath=${locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250106 10:01:27.750" endtime="20250106 10:01:28.068"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollBy(0, 200)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250106 10:01:28.068" level="INFO">Executing JavaScript:
window.scrollBy(0, 200)
Without any arguments.</msg>
<status status="PASS" starttime="20250106 10:01:28.068" endtime="20250106 10:01:28.076"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.749" endtime="20250106 10:01:28.076"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//span[@class="text"][text()='${menu_item}']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:28.077" level="INFO">Clicking element 'xpath=//span[@class="text"][text()='Dragabble']'.</msg>
<status status="PASS" starttime="20250106 10:01:28.077" endtime="20250106 10:01:28.152"/>
</kw>
<status status="PASS" starttime="20250106 10:01:27.705" endtime="20250106 10:01:28.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250106 10:01:31.153" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250106 10:01:28.153" endtime="20250106 10:01:31.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Simple Drag</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:31.154" level="INFO">Testing Simple Drag</msg>
<status status="PASS" starttime="20250106 10:01:31.154" endtime="20250106 10:01:31.155"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=//div[@id='dragBox']</arg>
<arg>100</arg>
<arg>50</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:31.155" endtime="20250106 10:01:31.702"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${position}</var>
<arg>xpath=//div[@id="dragBox"]</arg>
<arg>style</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:31.724" level="INFO">${position} = position: relative; left: 100px; top: 50px;</msg>
<status status="PASS" starttime="20250106 10:01:31.702" endtime="20250106 10:01:31.724"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${position}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:31.725" endtime="20250106 10:01:31.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Axis Restricted Drag (X-axis)</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:31.726" level="INFO">Testing Axis Restricted Drag (X-axis)</msg>
<status status="PASS" starttime="20250106 10:01:31.726" endtime="20250106 10:01:31.727"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='draggableExample-tab-axisRestriction']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:31.728" level="INFO">Clicking element 'xpath=//a[@id='draggableExample-tab-axisRestriction']'.</msg>
<status status="PASS" starttime="20250106 10:01:31.727" endtime="20250106 10:01:31.820"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=//div[@id='restrictedX']</arg>
<arg>100</arg>
<arg>0</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:31.821" endtime="20250106 10:01:32.408"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${position}</var>
<arg>xpath=//div[@id="restrictedX"]</arg>
<arg>style</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:32.429" level="INFO">${position} = position: relative; left: 100px; top: 0px;</msg>
<status status="PASS" starttime="20250106 10:01:32.409" endtime="20250106 10:01:32.429"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${position}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:32.430" endtime="20250106 10:01:32.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Axis Restricted Drag (Y-axis)</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:32.432" level="INFO">Testing Axis Restricted Drag (Y-axis)</msg>
<status status="PASS" starttime="20250106 10:01:32.431" endtime="20250106 10:01:32.432"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=//div[@id='restrictedY']</arg>
<arg>0</arg>
<arg>100</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:32.433" endtime="20250106 10:01:33.015"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${position}</var>
<arg>xpath=//div[@id="restrictedY"]</arg>
<arg>style</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:33.034" level="INFO">${position} = position: relative; left: 0px; top: 100px;</msg>
<status status="PASS" starttime="20250106 10:01:33.015" endtime="20250106 10:01:33.034"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${position}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:33.035" endtime="20250106 10:01:33.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Testing Container Restricted Drag</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 10:01:33.036" level="INFO">Testing Container Restricted Drag</msg>
<status status="PASS" starttime="20250106 10:01:33.036" endtime="20250106 10:01:33.037"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath=//a[@id='draggableExample-tab-containerRestriction']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250106 10:01:33.038" level="INFO">Clicking element 'xpath=//a[@id='draggableExample-tab-containerRestriction']'.</msg>
<status status="PASS" starttime="20250106 10:01:33.037" endtime="20250106 10:01:33.113"/>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<arg>xpath=//div[@id='containmentWrapper'] //div[@class='draggable ui-widget-content ui-draggable ui-draggable-handle']</arg>
<arg>50</arg>
<arg>50</arg>
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<status status="PASS" starttime="20250106 10:01:33.114" endtime="20250106 10:01:33.684"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${position}</var>
<arg>xpath=//div[@id='containmentWrapper'] //div[@class='draggable ui-widget-content ui-draggable ui-draggable-handle']</arg>
<arg>style</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20250106 10:01:33.700" level="INFO">${position} = position: relative; left: 50px; top: 50px;</msg>
<status status="PASS" starttime="20250106 10:01:33.685" endtime="20250106 10:01:33.700"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${position}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250106 10:01:33.701" endtime="20250106 10:01:33.701"/>
</kw>
<doc>Verify the draggable functionality in different modes by testing simple drag, axis-restricted drag, and container-restricted drag, and validating the new positions of the elements.</doc>
<status status="PASS" starttime="20250106 10:01:27.693" endtime="20250106 10:01:33.702"/>
</test>
<status status="PASS" starttime="20250106 09:57:23.046" endtime="20250106 10:01:33.704"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="29" fail="0" skip="0" id="s1" name="DemoQATesting">DemoQATesting</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250106 09:59:22.480" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:23.822" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:23.939" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:27.389" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:28.074" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:28.179" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:29.044" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:29.177" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:30.147" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20250106 09:59:30.359" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
</errors>
</robot>
